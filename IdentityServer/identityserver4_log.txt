2019-07-06 19:03:45.069 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:03:45.231 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:03:45.248 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:03:45.248 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:03:45.249 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:03:45.249 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:03:45.250 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:03:46.312 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:03:46.630 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:03:46.630 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:03:46.631 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:03:46.631 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:03:46.631 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:03:46.631 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:05:12.102 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 19:05:12.129 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 19:05:12.129 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 19:05:12.149 -07:00 [DBG] Start discovery request
2019-07-06 19:06:01.277 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:06:01.316 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:06:01.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:06:01.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:06:01.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:06:01.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:06:01.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:06:01.955 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:06:01.960 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:06:01.960 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:06:01.960 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:06:01.960 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:06:01.960 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:06:01.960 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:15:39.404 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:15:39.447 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:15:39.450 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:15:39.450 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:15:39.450 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:15:39.450 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:15:39.450 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:15:40.557 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:15:40.560 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:15:40.560 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:15:40.560 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:15:40.560 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:15:40.560 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:15:40.560 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:21:48.705 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:21:48.736 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:21:48.739 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:21:48.739 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:21:48.739 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:21:48.739 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:21:48.739 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:23:58.587 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:23:58.631 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:23:58.635 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:23:58.635 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:23:58.635 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:23:58.635 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:23:58.635 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:24:10.583 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:24:10.585 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:24:10.585 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:24:10.585 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:24:10.585 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:24:10.585 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:24:10.585 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:26:59.331 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:26:59.368 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:26:59.371 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:26:59.371 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:26:59.371 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:26:59.371 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:26:59.371 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:26:59.905 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:26:59.908 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:26:59.908 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:26:59.908 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:26:59.908 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:26:59.908 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:26:59.908 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:27:09.198 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 19:27:09.219 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 19:27:09.219 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 19:27:09.236 -07:00 [DBG] Start discovery request
2019-07-06 19:27:21.000 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 19:27:21.007 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 19:27:21.007 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 19:27:21.014 -07:00 [WRN] Invalid HTTP request for token endpoint
2019-07-06 19:27:30.393 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 19:27:30.393 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 19:27:30.393 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 19:27:30.396 -07:00 [DBG] Start key discovery request
2019-07-06 19:31:11.378 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:31:11.415 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:31:11.419 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:31:11.419 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:31:11.419 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:31:11.419 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:31:11.419 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:31:13.119 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:31:13.121 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:31:13.121 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:31:13.121 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:31:13.121 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:31:13.121 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:31:13.121 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:31:23.667 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 19:31:23.671 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 19:31:23.671 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 19:31:23.674 -07:00 [DBG] Start discovery request
2019-07-06 19:41:01.763 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:41:01.794 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:41:01.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:41:01.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:41:01.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:41:01.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:41:01.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:41:02.130 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:41:02.131 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:41:02.131 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:41:02.131 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:41:02.131 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:41:02.131 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:41:02.131 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 19:55:31.721 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 19:55:31.755 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 19:55:31.758 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 19:55:31.758 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 19:55:31.758 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 19:55:31.758 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 19:55:31.758 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 19:55:34.038 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 19:55:34.040 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 19:55:34.040 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 19:55:34.040 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 19:55:34.040 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 19:55:34.040 -07:00 [DBG] Error Url: /home/error
2019-07-06 19:55:34.040 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 20:37:04.185 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 20:37:04.444 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 20:37:04.446 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 20:37:04.447 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 20:37:04.447 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 20:37:04.447 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 20:37:04.447 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 20:37:06.311 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 20:37:06.313 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 20:37:06.313 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 20:37:06.314 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 20:37:06.314 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 20:37:06.314 -07:00 [DBG] Error Url: /home/error
2019-07-06 20:37:06.314 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 20:46:29.488 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 20:46:29.526 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 20:46:29.530 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 20:46:29.531 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 20:46:29.531 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 20:46:29.531 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 20:46:29.531 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 20:46:30.189 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 20:46:30.190 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 20:46:30.191 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 20:46:30.191 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 20:46:30.191 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 20:46:30.191 -07:00 [DBG] Error Url: /home/error
2019-07-06 20:46:30.191 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 20:50:19.443 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:50:19.523 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:50:19.523 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:50:19.542 -07:00 [DBG] Start discovery request
2019-07-06 20:50:20.276 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:50:20.277 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:50:20.277 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:50:20.280 -07:00 [DBG] Start key discovery request
2019-07-06 20:50:20.971 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 20:50:20.978 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 20:50:20.978 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 20:50:21.012 -07:00 [DBG] Start token request.
2019-07-06 20:50:21.019 -07:00 [DBG] Start client validation
2019-07-06 20:50:21.024 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 20:50:21.028 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 20:50:21.100 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 20:50:21.100 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 20:50:21.111 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 20:50:21.142 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 20:50:21.142 -07:00 [DBG] Client validation success
2019-07-06 20:50:21.172 -07:00 [DBG] Start token request validation
2019-07-06 20:50:21.178 -07:00 [DBG] Start client credentials token request validation
2019-07-06 20:50:21.198 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 20:50:21.209 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 20:50:21.260 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 20:50:21.737 -07:00 [DBG] Token request success.
2019-07-06 20:53:34.733 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:53:34.733 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:53:34.733 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:53:34.733 -07:00 [DBG] Start discovery request
2019-07-06 20:53:34.848 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:53:34.849 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:53:34.849 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:53:34.849 -07:00 [DBG] Start key discovery request
2019-07-06 20:53:35.101 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 20:53:35.102 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 20:53:35.102 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 20:53:35.102 -07:00 [DBG] Start token request.
2019-07-06 20:53:35.102 -07:00 [DBG] Start client validation
2019-07-06 20:53:35.102 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 20:53:35.102 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 20:53:35.103 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 20:53:35.103 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 20:53:35.103 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 20:53:35.103 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 20:53:35.103 -07:00 [DBG] Client validation success
2019-07-06 20:53:35.103 -07:00 [DBG] Start token request validation
2019-07-06 20:53:35.103 -07:00 [DBG] Start client credentials token request validation
2019-07-06 20:53:35.104 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 20:53:35.104 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 20:53:35.104 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 20:53:35.133 -07:00 [DBG] Token request success.
2019-07-06 20:53:39.167 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:53:39.167 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:53:39.167 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:53:39.167 -07:00 [DBG] Start discovery request
2019-07-06 20:53:39.268 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:53:39.268 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:53:39.268 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:53:39.268 -07:00 [DBG] Start key discovery request
2019-07-06 20:54:03.293 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 20:54:03.360 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 20:54:03.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 20:54:03.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 20:54:03.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 20:54:03.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 20:54:03.367 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 20:54:03.848 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 20:54:03.850 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 20:54:03.850 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 20:54:03.850 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 20:54:03.850 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 20:54:03.850 -07:00 [DBG] Error Url: /home/error
2019-07-06 20:54:03.850 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 20:54:54.910 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:54:54.915 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:54:54.915 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:54:54.918 -07:00 [DBG] Start discovery request
2019-07-06 20:54:55.048 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:54:55.048 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:54:55.049 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:54:55.052 -07:00 [DBG] Start key discovery request
2019-07-06 20:54:55.320 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 20:54:55.326 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 20:54:55.326 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 20:54:55.337 -07:00 [DBG] Start token request.
2019-07-06 20:54:55.346 -07:00 [DBG] Start client validation
2019-07-06 20:54:55.354 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 20:54:55.358 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 20:54:55.377 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 20:54:55.377 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 20:54:55.390 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 20:54:55.398 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 20:54:55.398 -07:00 [DBG] Client validation success
2019-07-06 20:54:55.409 -07:00 [DBG] Start token request validation
2019-07-06 20:54:55.417 -07:00 [DBG] Start client credentials token request validation
2019-07-06 20:54:55.446 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 20:54:55.464 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 20:54:55.496 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 20:54:55.587 -07:00 [DBG] Token request success.
2019-07-06 20:56:13.185 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 20:56:13.218 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 20:56:13.221 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 20:56:13.221 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 20:56:13.221 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 20:56:13.221 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 20:56:13.221 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 20:56:13.511 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 20:56:13.513 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 20:56:13.513 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 20:56:13.513 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 20:56:13.513 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 20:56:13.513 -07:00 [DBG] Error Url: /home/error
2019-07-06 20:56:13.513 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 20:56:13.540 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:56:13.544 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:56:13.544 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:56:13.548 -07:00 [DBG] Start discovery request
2019-07-06 20:56:13.677 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:56:13.678 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:56:13.679 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:56:13.683 -07:00 [DBG] Start key discovery request
2019-07-06 20:56:14.003 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 20:56:14.008 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 20:56:14.008 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 20:56:14.015 -07:00 [DBG] Start token request.
2019-07-06 20:56:14.020 -07:00 [DBG] Start client validation
2019-07-06 20:56:14.024 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 20:56:14.027 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 20:56:14.040 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 20:56:14.040 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 20:56:14.051 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 20:56:14.058 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 20:56:14.058 -07:00 [DBG] Client validation success
2019-07-06 20:56:14.067 -07:00 [DBG] Start token request validation
2019-07-06 20:56:14.073 -07:00 [DBG] Start client credentials token request validation
2019-07-06 20:56:14.092 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 20:56:14.103 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 20:56:14.130 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 20:56:14.186 -07:00 [DBG] Token request success.
2019-07-06 20:56:40.112 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:56:40.112 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:56:40.112 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:56:40.112 -07:00 [DBG] Start discovery request
2019-07-06 20:56:40.182 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:56:40.183 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:56:40.183 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:56:40.183 -07:00 [DBG] Start key discovery request
2019-07-06 20:56:47.629 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 20:56:47.629 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 20:56:47.629 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 20:56:47.629 -07:00 [DBG] Start discovery request
2019-07-06 20:56:47.717 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 20:56:47.717 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 20:56:47.717 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 20:56:47.717 -07:00 [DBG] Start key discovery request
2019-07-06 20:56:47.969 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 20:56:47.969 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 20:56:47.970 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 20:56:47.970 -07:00 [DBG] Start token request.
2019-07-06 20:56:47.970 -07:00 [DBG] Start client validation
2019-07-06 20:56:47.970 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 20:56:47.970 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 20:56:47.970 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 20:56:47.970 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 20:56:47.970 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 20:56:47.971 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 20:56:47.971 -07:00 [DBG] Client validation success
2019-07-06 20:56:47.971 -07:00 [DBG] Start token request validation
2019-07-06 20:56:47.971 -07:00 [DBG] Start client credentials token request validation
2019-07-06 20:56:47.971 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 20:56:47.971 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 20:56:47.971 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 20:56:47.975 -07:00 [DBG] Token request success.
2019-07-06 21:00:34.345 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-06 21:00:34.384 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-06 21:00:34.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-06 21:00:34.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-06 21:00:34.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-06 21:00:34.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-06 21:00:34.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-06 21:00:34.793 -07:00 [DBG] Login Url: /Account/Login
2019-07-06 21:00:34.796 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-06 21:00:34.796 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-06 21:00:34.796 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-06 21:00:34.796 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-06 21:00:34.796 -07:00 [DBG] Error Url: /home/error
2019-07-06 21:00:34.796 -07:00 [DBG] Error Id Parameter: errorId
2019-07-06 21:00:53.671 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:00:53.676 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:00:53.677 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:00:53.682 -07:00 [DBG] Start discovery request
2019-07-06 21:00:53.821 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:00:53.822 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:00:53.822 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:00:53.825 -07:00 [DBG] Start key discovery request
2019-07-06 21:00:54.096 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:00:54.110 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:00:54.110 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:00:54.119 -07:00 [DBG] Start token request.
2019-07-06 21:00:54.127 -07:00 [DBG] Start client validation
2019-07-06 21:00:54.133 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:00:54.138 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:00:54.157 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:00:54.157 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:00:54.171 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:00:54.183 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:00:54.183 -07:00 [DBG] Client validation success
2019-07-06 21:00:54.195 -07:00 [DBG] Start token request validation
2019-07-06 21:00:54.203 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:00:54.228 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:00:54.240 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:00:54.276 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:00:54.365 -07:00 [DBG] Token request success.
2019-07-06 21:00:57.164 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:00:57.164 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:00:57.164 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:00:57.164 -07:00 [DBG] Start discovery request
2019-07-06 21:00:57.272 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:00:57.272 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:00:57.272 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:00:57.272 -07:00 [DBG] Start key discovery request
2019-07-06 21:01:57.461 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:01:57.461 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:01:57.461 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:01:57.461 -07:00 [DBG] Start discovery request
2019-07-06 21:01:57.615 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:01:57.615 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:01:57.615 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:01:57.615 -07:00 [DBG] Start key discovery request
2019-07-06 21:01:57.876 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:01:57.876 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:01:57.876 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:01:57.876 -07:00 [DBG] Start token request.
2019-07-06 21:01:57.876 -07:00 [DBG] Start client validation
2019-07-06 21:01:57.878 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:01:57.878 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:01:57.879 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:01:57.879 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:01:57.879 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:01:57.879 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:01:57.879 -07:00 [DBG] Client validation success
2019-07-06 21:01:57.879 -07:00 [DBG] Start token request validation
2019-07-06 21:01:57.880 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:01:57.880 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:01:57.880 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:01:57.880 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:01:57.884 -07:00 [DBG] Token request success.
2019-07-06 21:04:42.300 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:04:42.300 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:04:42.300 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:04:42.301 -07:00 [DBG] Start discovery request
2019-07-06 21:04:42.396 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:04:42.396 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:04:42.396 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:04:42.396 -07:00 [DBG] Start key discovery request
2019-07-06 21:04:42.650 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:04:42.651 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:04:42.651 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:04:42.651 -07:00 [DBG] Start token request.
2019-07-06 21:04:42.651 -07:00 [DBG] Start client validation
2019-07-06 21:04:42.651 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:04:42.651 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:04:42.651 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:04:42.651 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:04:42.651 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:04:42.651 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:04:42.651 -07:00 [DBG] Client validation success
2019-07-06 21:04:42.652 -07:00 [DBG] Start token request validation
2019-07-06 21:04:42.652 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:04:42.652 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:04:42.652 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:04:42.652 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:04:42.656 -07:00 [DBG] Token request success.
2019-07-06 21:06:38.979 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:06:38.979 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:06:38.979 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:06:38.979 -07:00 [DBG] Start discovery request
2019-07-06 21:06:39.058 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:06:39.058 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:06:39.058 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:06:39.058 -07:00 [DBG] Start key discovery request
2019-07-06 21:06:39.213 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:06:39.213 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:06:39.213 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:06:39.213 -07:00 [DBG] Start token request.
2019-07-06 21:06:39.213 -07:00 [DBG] Start client validation
2019-07-06 21:06:39.213 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:06:39.213 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:06:39.214 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:06:39.214 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:06:39.214 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:06:39.214 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:06:39.214 -07:00 [DBG] Client validation success
2019-07-06 21:06:39.214 -07:00 [DBG] Start token request validation
2019-07-06 21:06:39.214 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:06:39.214 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:06:39.214 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:06:39.214 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:06:39.217 -07:00 [DBG] Token request success.
2019-07-06 21:07:53.402 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:07:53.403 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:07:53.403 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:07:53.403 -07:00 [DBG] Start discovery request
2019-07-06 21:07:53.507 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:07:53.507 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:07:53.507 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:07:53.507 -07:00 [DBG] Start key discovery request
2019-07-06 21:07:53.787 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:07:53.787 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:07:53.788 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:07:53.788 -07:00 [DBG] Start token request.
2019-07-06 21:07:53.788 -07:00 [DBG] Start client validation
2019-07-06 21:07:53.788 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:07:53.788 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:07:53.788 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:07:53.788 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:07:53.788 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:07:53.789 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:07:53.789 -07:00 [DBG] Client validation success
2019-07-06 21:07:53.789 -07:00 [DBG] Start token request validation
2019-07-06 21:07:53.789 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:07:53.789 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:07:53.789 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:07:53.789 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:07:53.793 -07:00 [DBG] Token request success.
2019-07-06 21:10:22.034 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:10:22.034 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:10:22.034 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:10:22.034 -07:00 [DBG] Start discovery request
2019-07-06 21:10:22.138 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:10:22.141 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:10:22.142 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:10:22.142 -07:00 [DBG] Start key discovery request
2019-07-06 21:10:22.422 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:10:22.422 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:10:22.422 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:10:22.422 -07:00 [DBG] Start token request.
2019-07-06 21:10:22.422 -07:00 [DBG] Start client validation
2019-07-06 21:10:22.422 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:10:22.422 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:10:22.422 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:10:22.423 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:10:22.423 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:10:22.423 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:10:22.423 -07:00 [DBG] Client validation success
2019-07-06 21:10:22.423 -07:00 [DBG] Start token request validation
2019-07-06 21:10:22.423 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:10:22.423 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:10:22.424 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:10:22.424 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:10:22.427 -07:00 [DBG] Token request success.
2019-07-06 21:10:39.451 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:10:39.451 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:10:39.452 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:10:39.452 -07:00 [DBG] Start discovery request
2019-07-06 21:10:39.546 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:10:39.546 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:10:39.546 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:10:39.546 -07:00 [DBG] Start key discovery request
2019-07-06 21:10:39.801 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:10:39.801 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:10:39.801 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:10:39.801 -07:00 [DBG] Start token request.
2019-07-06 21:10:39.801 -07:00 [DBG] Start client validation
2019-07-06 21:10:39.801 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:10:39.801 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:10:39.802 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:10:39.802 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:10:39.802 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:10:39.802 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:10:39.802 -07:00 [DBG] Client validation success
2019-07-06 21:10:39.802 -07:00 [DBG] Start token request validation
2019-07-06 21:10:39.802 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:10:39.802 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:10:39.802 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:10:39.802 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:10:39.806 -07:00 [DBG] Token request success.
2019-07-06 21:11:36.482 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:11:36.482 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:11:36.482 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:11:36.482 -07:00 [DBG] Start discovery request
2019-07-06 21:11:36.567 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:11:36.567 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:11:36.567 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:11:36.567 -07:00 [DBG] Start key discovery request
2019-07-06 21:11:36.818 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:11:36.818 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:11:36.818 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:11:36.818 -07:00 [DBG] Start token request.
2019-07-06 21:11:36.818 -07:00 [DBG] Start client validation
2019-07-06 21:11:36.818 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:11:36.818 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:11:36.819 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:11:36.819 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:11:36.819 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:11:36.819 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:11:36.819 -07:00 [DBG] Client validation success
2019-07-06 21:11:36.819 -07:00 [DBG] Start token request validation
2019-07-06 21:11:36.819 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:11:36.819 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:11:36.820 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:11:36.820 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:11:36.824 -07:00 [DBG] Token request success.
2019-07-06 21:12:33.751 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:12:33.752 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:12:33.752 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:12:33.752 -07:00 [DBG] Start discovery request
2019-07-06 21:12:33.846 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:12:33.846 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:12:33.846 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:12:33.846 -07:00 [DBG] Start key discovery request
2019-07-06 21:12:34.793 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:12:34.793 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:12:34.794 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:12:34.794 -07:00 [DBG] Start token request.
2019-07-06 21:12:34.794 -07:00 [DBG] Start client validation
2019-07-06 21:12:34.794 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:12:34.794 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:12:34.794 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:12:34.794 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:12:34.794 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:12:34.794 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:12:34.794 -07:00 [DBG] Client validation success
2019-07-06 21:12:34.794 -07:00 [DBG] Start token request validation
2019-07-06 21:12:34.795 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:12:34.795 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:12:34.795 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:12:34.795 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:12:34.799 -07:00 [DBG] Token request success.
2019-07-06 21:12:52.524 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-06 21:12:52.524 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-06 21:12:52.524 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-06 21:12:52.524 -07:00 [DBG] Start discovery request
2019-07-06 21:12:52.615 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-06 21:12:52.615 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-06 21:12:52.615 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-06 21:12:52.615 -07:00 [DBG] Start key discovery request
2019-07-06 21:12:53.602 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-06 21:12:53.602 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-06 21:12:53.602 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-06 21:12:53.602 -07:00 [DBG] Start token request.
2019-07-06 21:12:53.602 -07:00 [DBG] Start client validation
2019-07-06 21:12:53.602 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-06 21:12:53.603 -07:00 [DBG] Start parsing for secret in post body
2019-07-06 21:12:53.603 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-06 21:12:53.603 -07:00 [DBG] Secret id found: registrationClient
2019-07-06 21:12:53.603 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-06 21:12:53.603 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-06 21:12:53.603 -07:00 [DBG] Client validation success
2019-07-06 21:12:53.603 -07:00 [DBG] Start token request validation
2019-07-06 21:12:53.604 -07:00 [DBG] Start client credentials token request validation
2019-07-06 21:12:53.604 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-06 21:12:53.604 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-06 21:12:53.604 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-06 21:12:53.608 -07:00 [DBG] Token request success.
2019-07-07 12:54:11.341 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 12:54:11.341 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 12:54:11.341 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 12:54:11.341 -07:00 [DBG] Start discovery request
2019-07-07 12:54:12.048 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 12:54:12.048 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 12:54:12.048 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 12:54:12.048 -07:00 [DBG] Start key discovery request
2019-07-07 12:54:13.793 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 12:54:13.793 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 12:54:13.793 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 12:54:13.793 -07:00 [DBG] Start token request.
2019-07-07 12:54:13.793 -07:00 [DBG] Start client validation
2019-07-07 12:54:13.794 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 12:54:13.794 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 12:54:13.795 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 12:54:13.795 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 12:54:13.795 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 12:54:13.795 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 12:54:13.795 -07:00 [DBG] Client validation success
2019-07-07 12:54:13.795 -07:00 [DBG] Start token request validation
2019-07-07 12:54:13.795 -07:00 [DBG] Start client credentials token request validation
2019-07-07 12:54:13.795 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 12:54:13.795 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 12:54:13.795 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 12:54:13.800 -07:00 [DBG] Token request success.
2019-07-07 12:59:08.372 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 12:59:08.372 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 12:59:08.372 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 12:59:08.372 -07:00 [DBG] Start discovery request
2019-07-07 12:59:08.457 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 12:59:08.457 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 12:59:08.457 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 12:59:08.457 -07:00 [DBG] Start key discovery request
2019-07-07 12:59:08.699 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 12:59:08.699 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 12:59:08.699 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 12:59:08.699 -07:00 [DBG] Start token request.
2019-07-07 12:59:08.699 -07:00 [DBG] Start client validation
2019-07-07 12:59:08.699 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 12:59:08.699 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 12:59:08.700 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 12:59:08.700 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 12:59:08.700 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 12:59:08.700 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 12:59:08.700 -07:00 [DBG] Client validation success
2019-07-07 12:59:08.700 -07:00 [DBG] Start token request validation
2019-07-07 12:59:08.700 -07:00 [DBG] Start client credentials token request validation
2019-07-07 12:59:08.700 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 12:59:08.700 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 12:59:08.701 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 12:59:08.704 -07:00 [DBG] Token request success.
2019-07-07 12:59:22.364 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 12:59:22.364 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 12:59:22.364 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 12:59:22.364 -07:00 [DBG] Start discovery request
2019-07-07 12:59:22.444 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 12:59:22.445 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 12:59:22.445 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 12:59:22.445 -07:00 [DBG] Start key discovery request
2019-07-07 12:59:22.710 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 12:59:22.710 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 12:59:22.710 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 12:59:22.711 -07:00 [DBG] Start token request.
2019-07-07 12:59:22.711 -07:00 [DBG] Start client validation
2019-07-07 12:59:22.711 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 12:59:22.711 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 12:59:22.712 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 12:59:22.712 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 12:59:22.712 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 12:59:22.712 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 12:59:22.713 -07:00 [DBG] Client validation success
2019-07-07 12:59:22.713 -07:00 [DBG] Start token request validation
2019-07-07 12:59:22.713 -07:00 [DBG] Start client credentials token request validation
2019-07-07 12:59:22.713 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 12:59:22.713 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 12:59:22.713 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 12:59:22.717 -07:00 [DBG] Token request success.
2019-07-07 12:59:58.528 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 12:59:58.528 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 12:59:58.528 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 12:59:58.528 -07:00 [DBG] Start discovery request
2019-07-07 12:59:58.623 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 12:59:58.623 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 12:59:58.623 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 12:59:58.623 -07:00 [DBG] Start key discovery request
2019-07-07 12:59:58.898 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 12:59:58.898 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 12:59:58.898 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 12:59:58.898 -07:00 [DBG] Start token request.
2019-07-07 12:59:58.898 -07:00 [DBG] Start client validation
2019-07-07 12:59:58.898 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 12:59:58.899 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 12:59:58.899 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 12:59:58.899 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 12:59:58.899 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 12:59:58.899 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 12:59:58.899 -07:00 [DBG] Client validation success
2019-07-07 12:59:58.899 -07:00 [DBG] Start token request validation
2019-07-07 12:59:58.899 -07:00 [DBG] Start client credentials token request validation
2019-07-07 12:59:58.900 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 12:59:58.900 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 12:59:58.900 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 12:59:58.904 -07:00 [DBG] Token request success.
2019-07-07 13:00:54.736 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:00:54.736 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:00:54.736 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:00:54.736 -07:00 [DBG] Start discovery request
2019-07-07 13:00:54.807 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:00:54.807 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:00:54.807 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:00:54.807 -07:00 [DBG] Start key discovery request
2019-07-07 13:00:55.028 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:00:55.028 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:00:55.028 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:00:55.028 -07:00 [DBG] Start token request.
2019-07-07 13:00:55.028 -07:00 [DBG] Start client validation
2019-07-07 13:00:55.028 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:00:55.028 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:00:55.029 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:00:55.029 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:00:55.029 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:00:55.029 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:00:55.029 -07:00 [DBG] Client validation success
2019-07-07 13:00:55.029 -07:00 [DBG] Start token request validation
2019-07-07 13:00:55.029 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:00:55.029 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:00:55.029 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:00:55.029 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:00:55.033 -07:00 [DBG] Token request success.
2019-07-07 13:06:44.047 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:06:44.048 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:06:44.048 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:06:44.048 -07:00 [DBG] Start discovery request
2019-07-07 13:06:44.151 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:06:44.151 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:06:44.151 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:06:44.151 -07:00 [DBG] Start key discovery request
2019-07-07 13:06:44.593 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:06:44.593 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:06:44.593 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:06:44.593 -07:00 [DBG] Start token request.
2019-07-07 13:06:44.593 -07:00 [DBG] Start client validation
2019-07-07 13:06:44.593 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:06:44.593 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:06:44.594 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:06:44.594 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:06:44.594 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:06:44.617 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:06:44.617 -07:00 [DBG] Client validation success
2019-07-07 13:06:44.641 -07:00 [DBG] Start token request validation
2019-07-07 13:06:44.641 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:06:44.641 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:06:44.641 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:06:44.641 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:06:44.644 -07:00 [DBG] Token request success.
2019-07-07 13:08:14.409 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:08:14.481 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:08:14.483 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:08:14.483 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:08:14.483 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:08:14.483 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:08:14.483 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:08:14.969 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:08:14.971 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:08:14.971 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:08:14.971 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:08:14.971 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:08:14.971 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:08:14.971 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:08:15.018 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:08:15.021 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:08:15.021 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:08:15.024 -07:00 [DBG] Start discovery request
2019-07-07 13:08:15.304 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:08:15.304 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:08:15.304 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:08:15.308 -07:00 [DBG] Start key discovery request
2019-07-07 13:08:15.641 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:08:15.647 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:08:15.647 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:08:15.654 -07:00 [DBG] Start token request.
2019-07-07 13:08:15.660 -07:00 [DBG] Start client validation
2019-07-07 13:08:15.665 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:08:15.668 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:08:15.682 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:08:15.682 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:08:15.693 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:08:15.699 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:08:15.700 -07:00 [DBG] Client validation success
2019-07-07 13:08:15.726 -07:00 [DBG] Start token request validation
2019-07-07 13:08:15.732 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:08:15.751 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:08:15.763 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:08:15.794 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:08:16.554 -07:00 [DBG] Token request success.
2019-07-07 13:08:30.393 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:08:30.393 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:08:30.393 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:08:30.393 -07:00 [DBG] Start discovery request
2019-07-07 13:08:30.496 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:08:30.496 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:08:30.496 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:08:30.496 -07:00 [DBG] Start key discovery request
2019-07-07 13:10:17.532 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:10:17.532 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:10:17.532 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:10:17.532 -07:00 [DBG] Start discovery request
2019-07-07 13:10:17.642 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:10:17.642 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:10:17.643 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:10:17.643 -07:00 [DBG] Start key discovery request
2019-07-07 13:10:17.899 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:10:17.900 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:10:17.900 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:10:17.900 -07:00 [DBG] Start token request.
2019-07-07 13:10:17.900 -07:00 [DBG] Start client validation
2019-07-07 13:10:17.900 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:10:17.900 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:10:17.901 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:10:17.901 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:10:17.901 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:10:17.901 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:10:17.901 -07:00 [DBG] Client validation success
2019-07-07 13:10:17.901 -07:00 [DBG] Start token request validation
2019-07-07 13:10:17.901 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:10:17.902 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:10:17.902 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:10:17.902 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:10:17.906 -07:00 [DBG] Token request success.
2019-07-07 13:13:54.117 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:13:54.170 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:13:54.173 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:13:54.173 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:13:54.173 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:13:54.174 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:13:54.174 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:13:54.527 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:13:54.530 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:13:54.530 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:13:54.530 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:13:54.530 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:13:54.530 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:13:54.530 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:14:40.067 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:14:40.071 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:14:40.071 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:14:40.074 -07:00 [DBG] Start discovery request
2019-07-07 13:14:40.225 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:14:40.226 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:14:40.226 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:14:40.229 -07:00 [DBG] Start key discovery request
2019-07-07 13:14:40.510 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:14:40.518 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:14:40.518 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:14:40.528 -07:00 [DBG] Start token request.
2019-07-07 13:14:40.533 -07:00 [DBG] Start client validation
2019-07-07 13:14:40.538 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:14:40.543 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:14:40.559 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:14:40.559 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:14:40.574 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:14:40.585 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:14:40.585 -07:00 [DBG] Client validation success
2019-07-07 13:14:40.595 -07:00 [DBG] Start token request validation
2019-07-07 13:14:40.603 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:14:40.628 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:14:40.643 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:14:40.681 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:14:40.764 -07:00 [DBG] Token request success.
2019-07-07 13:16:13.843 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:16:13.847 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:16:13.848 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:16:13.848 -07:00 [DBG] Start discovery request
2019-07-07 13:16:14.013 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:16:14.013 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:16:14.013 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:16:14.013 -07:00 [DBG] Start key discovery request
2019-07-07 13:16:14.301 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:16:14.302 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:16:14.302 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:16:14.302 -07:00 [DBG] Start token request.
2019-07-07 13:16:14.302 -07:00 [DBG] Start client validation
2019-07-07 13:16:14.302 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:16:14.302 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:16:14.303 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:16:14.303 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:16:14.304 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:16:14.304 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:16:14.304 -07:00 [DBG] Client validation success
2019-07-07 13:16:14.304 -07:00 [DBG] Start token request validation
2019-07-07 13:16:14.304 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:16:14.305 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:16:14.305 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:16:14.305 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:16:14.310 -07:00 [DBG] Token request success.
2019-07-07 13:21:28.646 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:21:28.686 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:21:28.690 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:21:28.690 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:21:28.690 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:21:28.690 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:21:28.690 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:21:29.080 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:21:29.081 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:21:29.081 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:21:29.082 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:21:29.082 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:21:29.082 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:21:29.082 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:22:02.913 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:22:02.918 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:22:02.918 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:22:02.923 -07:00 [DBG] Start discovery request
2019-07-07 13:22:03.075 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:22:03.076 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:22:03.076 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:22:03.080 -07:00 [DBG] Start key discovery request
2019-07-07 13:22:03.453 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:22:03.459 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:22:03.459 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:22:03.468 -07:00 [DBG] Start token request.
2019-07-07 13:22:03.475 -07:00 [DBG] Start client validation
2019-07-07 13:22:03.486 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:22:03.489 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:22:03.506 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:22:03.506 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:22:03.523 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:22:03.536 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:22:03.536 -07:00 [DBG] Client validation success
2019-07-07 13:22:03.547 -07:00 [DBG] Start token request validation
2019-07-07 13:22:03.556 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:22:03.581 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:22:03.599 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:22:03.636 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:22:03.743 -07:00 [DBG] Token request success.
2019-07-07 13:22:23.423 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:22:23.423 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:22:23.424 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:22:23.424 -07:00 [DBG] Start discovery request
2019-07-07 13:22:23.549 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:22:23.549 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:22:23.550 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:22:23.550 -07:00 [DBG] Start key discovery request
2019-07-07 13:26:23.136 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:26:23.209 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:26:23.212 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:26:23.212 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:26:23.212 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:26:23.212 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:26:23.212 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:26:23.588 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:26:23.590 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:26:23.590 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:26:23.590 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:26:23.590 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:26:23.590 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:26:23.590 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:26:23.627 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:26:23.629 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:26:23.630 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:26:23.633 -07:00 [DBG] Start discovery request
2019-07-07 13:26:23.755 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:26:23.756 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:26:23.756 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:26:23.760 -07:00 [DBG] Start key discovery request
2019-07-07 13:26:24.012 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:26:24.017 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:26:24.017 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:26:24.024 -07:00 [DBG] Start token request.
2019-07-07 13:26:24.029 -07:00 [DBG] Start client validation
2019-07-07 13:26:24.033 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:26:24.036 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:26:24.049 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:26:24.049 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:26:24.059 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:26:24.066 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:26:24.066 -07:00 [DBG] Client validation success
2019-07-07 13:26:24.075 -07:00 [DBG] Start token request validation
2019-07-07 13:26:24.081 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:26:24.101 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:26:24.115 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:26:24.146 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:26:24.213 -07:00 [DBG] Token request success.
2019-07-07 13:26:26.732 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:26:26.732 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:26:26.732 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:26:26.732 -07:00 [DBG] Start discovery request
2019-07-07 13:26:26.797 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:26:26.797 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:26:26.797 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:26:26.798 -07:00 [DBG] Start key discovery request
2019-07-07 13:27:17.450 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:27:17.450 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:27:17.450 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:27:17.450 -07:00 [DBG] Start discovery request
2019-07-07 13:27:17.572 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:27:17.573 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:27:17.573 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:27:17.573 -07:00 [DBG] Start key discovery request
2019-07-07 13:27:17.859 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:27:17.860 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:27:17.860 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:27:17.860 -07:00 [DBG] Start token request.
2019-07-07 13:27:17.860 -07:00 [DBG] Start client validation
2019-07-07 13:27:17.860 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:27:17.860 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:27:17.860 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:27:17.861 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:27:17.861 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:27:17.861 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:27:17.861 -07:00 [DBG] Client validation success
2019-07-07 13:27:17.861 -07:00 [DBG] Start token request validation
2019-07-07 13:27:17.861 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:27:17.861 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:27:17.862 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:27:17.862 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:27:17.866 -07:00 [DBG] Token request success.
2019-07-07 13:29:29.094 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:29:29.094 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:29:29.094 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:29:29.094 -07:00 [DBG] Start discovery request
2019-07-07 13:29:29.182 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:29:29.182 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:29:29.182 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:29:29.182 -07:00 [DBG] Start key discovery request
2019-07-07 13:29:29.416 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:29:29.417 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:29:29.417 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:29:29.417 -07:00 [DBG] Start token request.
2019-07-07 13:29:29.417 -07:00 [DBG] Start client validation
2019-07-07 13:29:29.417 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:29:29.417 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:29:29.417 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:29:29.417 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:29:29.417 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:29:29.418 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:29:29.418 -07:00 [DBG] Client validation success
2019-07-07 13:29:29.418 -07:00 [DBG] Start token request validation
2019-07-07 13:29:29.418 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:29:29.418 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:29:29.418 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:29:29.418 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:29:29.422 -07:00 [DBG] Token request success.
2019-07-07 13:29:30.416 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:29:30.416 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:29:30.416 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:29:30.417 -07:00 [DBG] Start discovery request
2019-07-07 13:29:30.491 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:29:30.492 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:29:30.492 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:29:30.492 -07:00 [DBG] Start key discovery request
2019-07-07 13:29:57.225 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:29:57.225 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:29:57.225 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:29:57.225 -07:00 [DBG] Start discovery request
2019-07-07 13:29:57.321 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:29:57.322 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:29:57.322 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:29:57.322 -07:00 [DBG] Start key discovery request
2019-07-07 13:29:57.558 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:29:57.558 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:29:57.558 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:29:57.558 -07:00 [DBG] Start token request.
2019-07-07 13:29:57.558 -07:00 [DBG] Start client validation
2019-07-07 13:29:57.558 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:29:57.558 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:29:57.559 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:29:57.559 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:29:57.559 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:29:57.559 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:29:57.559 -07:00 [DBG] Client validation success
2019-07-07 13:29:57.559 -07:00 [DBG] Start token request validation
2019-07-07 13:29:57.559 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:29:57.559 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:29:57.559 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:29:57.559 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:29:57.563 -07:00 [DBG] Token request success.
2019-07-07 13:30:10.185 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:30:10.185 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:30:10.185 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:30:10.185 -07:00 [DBG] Start discovery request
2019-07-07 13:30:10.312 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:30:10.312 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:30:10.312 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:30:10.313 -07:00 [DBG] Start key discovery request
2019-07-07 13:30:10.558 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:30:10.558 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:30:10.559 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:30:10.559 -07:00 [DBG] Start token request.
2019-07-07 13:30:10.559 -07:00 [DBG] Start client validation
2019-07-07 13:30:10.559 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:30:10.559 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:30:10.560 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:30:10.560 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:30:10.560 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:30:10.560 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:30:10.560 -07:00 [DBG] Client validation success
2019-07-07 13:30:10.560 -07:00 [DBG] Start token request validation
2019-07-07 13:30:10.560 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:30:10.560 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:30:10.561 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:30:10.561 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:30:10.565 -07:00 [DBG] Token request success.
2019-07-07 13:30:21.221 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:30:21.252 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:30:21.255 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:30:21.255 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:30:21.255 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:30:21.255 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:30:21.255 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:30:21.776 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:30:21.779 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:30:21.779 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:30:21.779 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:30:21.779 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:30:21.779 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:30:21.779 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:30:24.617 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:30:24.623 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:30:24.623 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:30:24.627 -07:00 [DBG] Start discovery request
2019-07-07 13:30:24.747 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:30:24.747 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:30:24.747 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:30:24.751 -07:00 [DBG] Start key discovery request
2019-07-07 13:30:25.018 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:30:25.027 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:30:25.027 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:30:25.037 -07:00 [DBG] Start token request.
2019-07-07 13:30:25.044 -07:00 [DBG] Start client validation
2019-07-07 13:30:25.052 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:30:25.057 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:30:25.074 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:30:25.074 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:30:25.086 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:30:25.097 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:30:25.097 -07:00 [DBG] Client validation success
2019-07-07 13:30:25.110 -07:00 [DBG] Start token request validation
2019-07-07 13:30:25.117 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:30:25.143 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:30:25.156 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:30:25.190 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:30:25.287 -07:00 [DBG] Token request success.
2019-07-07 13:35:31.853 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:35:31.926 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:35:31.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:35:31.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:35:31.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:35:31.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:35:31.930 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:35:32.145 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:35:32.148 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:35:32.148 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:35:32.148 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:35:32.148 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:35:32.148 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:35:32.148 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:35:32.188 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:35:32.193 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:35:32.194 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:35:32.199 -07:00 [DBG] Start discovery request
2019-07-07 13:35:32.456 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:35:32.459 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:35:32.460 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:35:32.468 -07:00 [DBG] Start key discovery request
2019-07-07 13:35:32.935 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:35:32.953 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:35:32.953 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:35:32.964 -07:00 [DBG] Start token request.
2019-07-07 13:35:32.972 -07:00 [DBG] Start client validation
2019-07-07 13:35:32.978 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:35:32.983 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:35:33.005 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:35:33.005 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:35:33.023 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:35:33.039 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:35:33.039 -07:00 [DBG] Client validation success
2019-07-07 13:35:33.053 -07:00 [DBG] Start token request validation
2019-07-07 13:35:33.063 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:35:33.092 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:35:33.107 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:35:33.147 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:35:33.237 -07:00 [DBG] Token request success.
2019-07-07 13:35:33.486 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:35:33.487 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:35:33.487 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:35:33.487 -07:00 [DBG] Start discovery request
2019-07-07 13:35:33.639 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:35:33.640 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:35:33.640 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:35:33.640 -07:00 [DBG] Start key discovery request
2019-07-07 13:45:05.319 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:45:05.320 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:45:05.320 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:45:05.320 -07:00 [DBG] Start discovery request
2019-07-07 13:45:05.468 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:45:05.469 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:45:05.469 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:45:05.469 -07:00 [DBG] Start key discovery request
2019-07-07 13:45:05.894 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:45:05.895 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:45:05.895 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:45:05.895 -07:00 [DBG] Start token request.
2019-07-07 13:45:05.895 -07:00 [DBG] Start client validation
2019-07-07 13:45:05.895 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:45:05.895 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:45:05.896 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:45:05.896 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:45:05.896 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:45:05.897 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:45:05.897 -07:00 [DBG] Client validation success
2019-07-07 13:45:05.897 -07:00 [DBG] Start token request validation
2019-07-07 13:45:05.897 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:45:05.897 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:45:05.898 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:45:05.898 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:45:05.905 -07:00 [DBG] Token request success.
2019-07-07 13:45:07.281 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:45:07.281 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:45:07.281 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:45:07.281 -07:00 [DBG] Start discovery request
2019-07-07 13:45:07.376 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:45:07.377 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:45:07.377 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:45:07.377 -07:00 [DBG] Start key discovery request
2019-07-07 13:45:25.896 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:45:25.896 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:45:25.896 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:45:25.896 -07:00 [DBG] Start discovery request
2019-07-07 13:45:26.047 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:45:26.047 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:45:26.047 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:45:26.047 -07:00 [DBG] Start key discovery request
2019-07-07 13:45:26.474 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:45:26.474 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:45:26.474 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:45:26.474 -07:00 [DBG] Start token request.
2019-07-07 13:45:26.474 -07:00 [DBG] Start client validation
2019-07-07 13:45:26.474 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:45:26.474 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:45:26.475 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:45:26.475 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:45:26.475 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:45:26.475 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:45:26.476 -07:00 [DBG] Client validation success
2019-07-07 13:45:26.476 -07:00 [DBG] Start token request validation
2019-07-07 13:45:26.476 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:45:26.476 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:45:26.476 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:45:26.476 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:45:26.482 -07:00 [DBG] Token request success.
2019-07-07 13:46:13.200 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 13:46:13.257 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 13:46:13.260 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 13:46:13.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 13:46:13.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 13:46:13.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 13:46:13.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 13:46:13.611 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 13:46:13.615 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 13:46:13.615 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 13:46:13.615 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 13:46:13.615 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 13:46:13.615 -07:00 [DBG] Error Url: /home/error
2019-07-07 13:46:13.615 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 13:46:13.661 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:46:13.668 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:46:13.668 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:46:13.676 -07:00 [DBG] Start discovery request
2019-07-07 13:46:13.926 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:46:13.927 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:46:13.927 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:46:13.937 -07:00 [DBG] Start key discovery request
2019-07-07 13:46:14.336 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 13:46:14.346 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 13:46:14.346 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 13:46:14.360 -07:00 [DBG] Start token request.
2019-07-07 13:46:14.369 -07:00 [DBG] Start client validation
2019-07-07 13:46:14.379 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 13:46:14.386 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 13:46:14.406 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 13:46:14.406 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 13:46:14.420 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 13:46:14.429 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 13:46:14.429 -07:00 [DBG] Client validation success
2019-07-07 13:46:14.440 -07:00 [DBG] Start token request validation
2019-07-07 13:46:14.448 -07:00 [DBG] Start client credentials token request validation
2019-07-07 13:46:14.476 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 13:46:14.489 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 13:46:14.528 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 13:46:14.659 -07:00 [DBG] Token request success.
2019-07-07 13:46:14.927 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 13:46:14.927 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 13:46:14.927 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 13:46:14.927 -07:00 [DBG] Start discovery request
2019-07-07 13:46:15.122 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 13:46:15.122 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 13:46:15.122 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 13:46:15.122 -07:00 [DBG] Start key discovery request
2019-07-07 14:02:32.766 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 14:02:32.831 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 14:02:32.837 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 14:02:32.837 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 14:02:32.838 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 14:02:32.838 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 14:02:32.838 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 14:02:33.258 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 14:02:33.262 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 14:02:33.262 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 14:02:33.262 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 14:02:33.262 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 14:02:33.262 -07:00 [DBG] Error Url: /home/error
2019-07-07 14:02:33.262 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 14:03:31.775 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:03:31.781 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:03:31.781 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:03:31.787 -07:00 [DBG] Start discovery request
2019-07-07 14:03:32.061 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:03:32.062 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:03:32.063 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:03:32.071 -07:00 [DBG] Start key discovery request
2019-07-07 14:03:32.478 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:03:32.490 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:03:32.490 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:03:32.507 -07:00 [DBG] Start token request.
2019-07-07 14:03:32.515 -07:00 [DBG] Start client validation
2019-07-07 14:03:32.521 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:03:32.526 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:03:32.553 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:03:32.553 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:03:32.580 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:03:32.595 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:03:32.595 -07:00 [DBG] Client validation success
2019-07-07 14:03:32.615 -07:00 [DBG] Start token request validation
2019-07-07 14:03:32.627 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:03:32.665 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:03:32.684 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:03:32.741 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:03:32.873 -07:00 [DBG] Token request success.
2019-07-07 14:03:33.117 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:03:33.118 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:03:33.118 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:03:33.118 -07:00 [DBG] Start discovery request
2019-07-07 14:03:33.276 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:03:33.276 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:03:33.277 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:03:33.277 -07:00 [DBG] Start key discovery request
2019-07-07 14:03:53.762 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:03:53.762 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:03:53.762 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:03:53.762 -07:00 [DBG] Start discovery request
2019-07-07 14:03:53.932 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:03:53.932 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:03:53.933 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:03:53.933 -07:00 [DBG] Start key discovery request
2019-07-07 14:03:54.371 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:03:54.372 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:03:54.372 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:03:54.372 -07:00 [DBG] Start token request.
2019-07-07 14:03:54.372 -07:00 [DBG] Start client validation
2019-07-07 14:03:54.372 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:03:54.372 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:03:54.374 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:03:54.374 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:03:54.374 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:03:54.375 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:03:54.375 -07:00 [DBG] Client validation success
2019-07-07 14:03:54.375 -07:00 [DBG] Start token request validation
2019-07-07 14:03:54.375 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:03:54.375 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:03:54.375 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:03:54.376 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:03:54.382 -07:00 [DBG] Token request success.
2019-07-07 14:09:42.178 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-07 14:09:42.235 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-07 14:09:42.240 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-07 14:09:42.240 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-07 14:09:42.240 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-07 14:09:42.240 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-07 14:09:42.240 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-07 14:09:42.663 -07:00 [DBG] Login Url: /Account/Login
2019-07-07 14:09:42.666 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-07 14:09:42.666 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-07 14:09:42.666 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-07 14:09:42.666 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-07 14:09:42.666 -07:00 [DBG] Error Url: /home/error
2019-07-07 14:09:42.666 -07:00 [DBG] Error Id Parameter: errorId
2019-07-07 14:09:42.700 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:09:42.705 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:09:42.706 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:09:42.713 -07:00 [DBG] Start discovery request
2019-07-07 14:09:42.941 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:09:42.942 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:09:42.942 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:09:42.950 -07:00 [DBG] Start key discovery request
2019-07-07 14:09:43.315 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:09:43.323 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:09:43.324 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:09:43.333 -07:00 [DBG] Start token request.
2019-07-07 14:09:43.342 -07:00 [DBG] Start client validation
2019-07-07 14:09:43.349 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:09:43.354 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:09:43.376 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:09:43.376 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:09:43.392 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:09:43.401 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:09:43.401 -07:00 [DBG] Client validation success
2019-07-07 14:09:43.413 -07:00 [DBG] Start token request validation
2019-07-07 14:09:43.424 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:09:43.457 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:09:43.479 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:09:43.536 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:09:43.695 -07:00 [DBG] Token request success.
2019-07-07 14:09:43.943 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:09:43.944 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:09:43.944 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:09:43.944 -07:00 [DBG] Start discovery request
2019-07-07 14:09:44.087 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:09:44.088 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:09:44.088 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:09:44.088 -07:00 [DBG] Start key discovery request
2019-07-07 14:10:42.273 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:10:42.273 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:10:42.274 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:10:42.274 -07:00 [DBG] Start discovery request
2019-07-07 14:10:42.416 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:10:42.416 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:10:42.416 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:10:42.417 -07:00 [DBG] Start key discovery request
2019-07-07 14:10:42.844 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:10:42.845 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:10:42.845 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:10:42.845 -07:00 [DBG] Start token request.
2019-07-07 14:10:42.845 -07:00 [DBG] Start client validation
2019-07-07 14:10:42.845 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:10:42.845 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:10:42.846 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:10:42.846 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:10:42.846 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:10:42.846 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:10:42.846 -07:00 [DBG] Client validation success
2019-07-07 14:10:42.847 -07:00 [DBG] Start token request validation
2019-07-07 14:10:42.847 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:10:42.847 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:10:42.847 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:10:42.847 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:10:42.854 -07:00 [DBG] Token request success.
2019-07-07 14:10:43.147 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:10:43.147 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:10:43.147 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:10:43.147 -07:00 [DBG] Start discovery request
2019-07-07 14:10:43.331 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:10:43.331 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:10:43.331 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:10:43.331 -07:00 [DBG] Start key discovery request
2019-07-07 14:11:02.474 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:11:02.474 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:11:02.474 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:11:02.474 -07:00 [DBG] Start discovery request
2019-07-07 14:11:02.617 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:11:02.617 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:11:02.617 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:11:02.617 -07:00 [DBG] Start key discovery request
2019-07-07 14:11:53.457 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:11:53.457 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:11:53.457 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:11:53.457 -07:00 [DBG] Start discovery request
2019-07-07 14:11:53.639 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:11:53.639 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:11:53.639 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:11:53.639 -07:00 [DBG] Start key discovery request
2019-07-07 14:11:54.054 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:11:54.054 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:11:54.054 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:11:54.054 -07:00 [DBG] Start token request.
2019-07-07 14:11:54.055 -07:00 [DBG] Start client validation
2019-07-07 14:11:54.055 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:11:54.055 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:11:54.055 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:11:54.055 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:11:54.055 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:11:54.055 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:11:54.056 -07:00 [DBG] Client validation success
2019-07-07 14:11:54.056 -07:00 [DBG] Start token request validation
2019-07-07 14:11:54.056 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:11:54.056 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:11:54.056 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:11:54.056 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:11:54.063 -07:00 [DBG] Token request success.
2019-07-07 14:11:54.357 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:11:54.357 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:11:54.358 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:11:54.358 -07:00 [DBG] Start discovery request
2019-07-07 14:11:54.535 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:11:54.535 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:11:54.536 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:11:54.536 -07:00 [DBG] Start key discovery request
2019-07-07 14:12:26.467 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:12:26.467 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:12:26.467 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:12:26.467 -07:00 [DBG] Start discovery request
2019-07-07 14:12:26.622 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:12:26.622 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:12:26.622 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:12:26.622 -07:00 [DBG] Start key discovery request
2019-07-07 14:12:27.065 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:12:27.065 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:12:27.065 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:12:27.065 -07:00 [DBG] Start token request.
2019-07-07 14:12:27.066 -07:00 [DBG] Start client validation
2019-07-07 14:12:27.066 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:12:27.066 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:12:27.067 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:12:27.067 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:12:27.067 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:12:27.067 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:12:27.067 -07:00 [DBG] Client validation success
2019-07-07 14:12:27.067 -07:00 [DBG] Start token request validation
2019-07-07 14:12:27.067 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:12:27.068 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:12:27.068 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:12:27.068 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:12:27.074 -07:00 [DBG] Token request success.
2019-07-07 14:13:43.508 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:13:43.508 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:13:43.508 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:13:43.509 -07:00 [DBG] Start discovery request
2019-07-07 14:13:43.656 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:13:43.656 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:13:43.656 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:13:43.656 -07:00 [DBG] Start key discovery request
2019-07-07 14:13:44.088 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:13:44.088 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:13:44.088 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:13:44.088 -07:00 [DBG] Start token request.
2019-07-07 14:13:44.088 -07:00 [DBG] Start client validation
2019-07-07 14:13:44.088 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:13:44.089 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:13:44.089 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:13:44.089 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:13:44.089 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:13:44.089 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:13:44.090 -07:00 [DBG] Client validation success
2019-07-07 14:13:44.090 -07:00 [DBG] Start token request validation
2019-07-07 14:13:44.090 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:13:44.090 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:13:44.091 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:13:44.091 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:13:44.096 -07:00 [DBG] Token request success.
2019-07-07 14:15:15.018 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:15:15.018 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:15:15.019 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:15:15.019 -07:00 [DBG] Start discovery request
2019-07-07 14:15:15.167 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:15:15.168 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:15:15.168 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:15:15.168 -07:00 [DBG] Start key discovery request
2019-07-07 14:15:15.591 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:15:15.591 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:15:15.592 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:15:15.592 -07:00 [DBG] Start token request.
2019-07-07 14:15:15.592 -07:00 [DBG] Start client validation
2019-07-07 14:15:15.592 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:15:15.593 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:15:15.593 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:15:15.594 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:15:15.594 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:15:15.594 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:15:15.594 -07:00 [DBG] Client validation success
2019-07-07 14:15:15.594 -07:00 [DBG] Start token request validation
2019-07-07 14:15:15.594 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:15:15.594 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:15:15.595 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:15:15.595 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:15:15.601 -07:00 [DBG] Token request success.
2019-07-07 14:15:36.456 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-07 14:15:36.457 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-07 14:15:36.457 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-07 14:15:36.457 -07:00 [DBG] Start discovery request
2019-07-07 14:15:36.602 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-07 14:15:36.602 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-07 14:15:36.603 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-07 14:15:36.603 -07:00 [DBG] Start key discovery request
2019-07-07 14:15:37.035 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-07 14:15:37.035 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-07 14:15:37.035 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-07 14:15:37.035 -07:00 [DBG] Start token request.
2019-07-07 14:15:37.035 -07:00 [DBG] Start client validation
2019-07-07 14:15:37.036 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-07 14:15:37.036 -07:00 [DBG] Start parsing for secret in post body
2019-07-07 14:15:37.036 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-07 14:15:37.036 -07:00 [DBG] Secret id found: registrationClient
2019-07-07 14:15:37.036 -07:00 [DBG] client configuration validation for client registrationClient succeeded.
2019-07-07 14:15:37.036 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-07 14:15:37.036 -07:00 [DBG] Client validation success
2019-07-07 14:15:37.036 -07:00 [DBG] Start token request validation
2019-07-07 14:15:37.037 -07:00 [DBG] Start client credentials token request validation
2019-07-07 14:15:37.037 -07:00 [DBG] registrationClient credentials token request validation success
2019-07-07 14:15:37.037 -07:00 [INF] Token request validation success
{"ClientId":"registrationClient","ClientName":null,"GrantType":"client_credentials","Scopes":"RegistrationService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"RegistrationService","client_id":"registrationClient","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-07 14:15:37.037 -07:00 [DBG] Getting claims for access token for client: registrationClient
2019-07-07 14:15:37.043 -07:00 [DBG] Token request success.
2019-07-13 17:32:53.285 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-13 17:32:53.509 -07:00 [INF] Using the default authentication scheme Bearer for IdentityServer
2019-07-13 17:32:53.514 -07:00 [ERR] Authentication scheme Bearer is configured for IdentityServer, but it is not a scheme that supports signin (like cookies). Either configure the default authentication scheme with cookies or set the CookieAuthenticationScheme on the IdentityServerOptions.
2019-07-13 17:32:53.514 -07:00 [DBG] Using Bearer as default ASP.NET Core scheme for authentication
2019-07-13 17:32:53.514 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-13 17:32:53.514 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-13 17:32:53.514 -07:00 [DBG] Using Bearer as default ASP.NET Core scheme for challenge
2019-07-13 17:32:53.514 -07:00 [DBG] Using Bearer as default ASP.NET Core scheme for forbid
2019-07-13 17:33:13.310 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-13 17:33:14.130 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repositories.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repositories.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-13 17:33:14.160 -07:00 [ERR] Connection id "0HLO7UB7Q8KVT", Request id "0HLO7UB7Q8KVT:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repositories.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-13 17:35:21.430 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-13 17:35:21.431 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repositories.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repositories.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-13 17:35:21.434 -07:00 [ERR] Connection id "0HLO7UB7Q8KVV", Request id "0HLO7UB7Q8KVV:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repositories.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 00:24:14.967 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 00:24:15.219 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 00:24:15.224 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 00:24:15.224 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 00:24:15.224 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 00:24:15.224 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 00:24:15.225 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 00:24:17.464 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 00:24:17.469 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 00:24:17.469 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 00:24:17.469 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 00:24:17.469 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 00:24:17.469 -07:00 [DBG] Error Url: /home/error
2019-07-17 00:24:17.469 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 00:25:54.702 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 00:25:55.463 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 00:25:55.471 -07:00 [ERR] Connection id "0HLOAGV388VU8", Request id "0HLOAGV388VU8:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 00:26:04.636 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 00:26:04.639 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 00:26:04.652 -07:00 [ERR] Connection id "0HLOAGV388VU8", Request id "0HLOAGV388VU8:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 00:26:46.505 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 00:26:46.590 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 00:26:46.599 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 00:26:46.599 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 00:26:46.599 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 00:26:46.599 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 00:26:46.599 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 00:26:47.181 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 00:26:47.187 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 00:26:47.187 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 00:26:47.187 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 00:26:47.187 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 00:26:47.187 -07:00 [DBG] Error Url: /home/error
2019-07-17 00:26:47.187 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 00:26:50.232 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 00:26:50.371 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 00:26:50.379 -07:00 [ERR] Connection id "0HLOAH0G3SA8S", Request id "0HLOAH0G3SA8S:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 00:27:06.654 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 00:27:06.656 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 00:27:06.659 -07:00 [ERR] Connection id "0HLOAH0G3SA8R", Request id "0HLOAH0G3SA8R:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 00:27:09.270 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 00:27:09.273 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 00:27:09.277 -07:00 [ERR] Connection id "0HLOAH0G3SA8S", Request id "0HLOAH0G3SA8S:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 00:31:30.786 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 00:31:30.849 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 00:31:30.854 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 00:31:30.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 00:31:30.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 00:31:30.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 00:31:30.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 00:31:31.492 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 00:31:31.495 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 00:31:31.495 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 00:31:31.495 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 00:31:31.496 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 00:31:31.496 -07:00 [DBG] Error Url: /home/error
2019-07-17 00:31:31.496 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 00:33:30.940 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 00:33:32.527 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 00:33:32.538 -07:00 [ERR] Connection id "0HLOAH34QNT4L", Request id "0HLOAH34QNT4L:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 02:01:53.858 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 02:01:53.968 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 02:01:53.973 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 02:01:53.973 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 02:01:53.973 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 02:01:53.973 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 02:01:53.973 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 02:01:54.775 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 02:01:54.778 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 02:01:54.778 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 02:01:54.779 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 02:01:54.779 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 02:01:54.779 -07:00 [DBG] Error Url: /home/error
2019-07-17 02:01:54.779 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 02:03:52.711 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 02:03:53.394 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 02:03:53.401 -07:00 [ERR] Connection id "0HLOAILL39QVT", Request id "0HLOAILL39QVT:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 02:09:11.248 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 02:09:11.318 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 02:09:11.322 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 02:09:11.322 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 02:09:11.322 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 02:09:11.322 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 02:09:11.322 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 02:09:11.914 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 02:09:11.920 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 02:09:11.921 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 02:09:11.921 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 02:09:11.921 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 02:09:11.921 -07:00 [DBG] Error Url: /home/error
2019-07-17 02:09:11.921 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 02:09:17.095 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 02:09:17.231 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 02:09:17.240 -07:00 [ERR] Connection id "0HLOAIPNCUG4O", Request id "0HLOAIPNCUG4O:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 02:11:19.384 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 02:11:19.464 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 02:11:19.469 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 02:11:19.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 02:11:19.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 02:11:19.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 02:11:19.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 02:11:20.009 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 02:11:20.013 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 02:11:20.013 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 02:11:20.013 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 02:11:20.013 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 02:11:20.013 -07:00 [DBG] Error Url: /home/error
2019-07-17 02:11:20.013 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 02:11:41.232 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 02:11:41.350 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 02:11:41.358 -07:00 [ERR] Connection id "0HLOAIQTI9ER1", Request id "0HLOAIQTI9ER1:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 02:11:46.854 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 02:11:46.856 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 02:11:46.860 -07:00 [ERR] Connection id "0HLOAIQTI9ER1", Request id "0HLOAIQTI9ER1:00000003": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 02:14:11.982 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 02:14:12.089 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 02:14:12.094 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 02:14:12.094 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 02:14:12.094 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 02:14:12.095 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 02:14:12.095 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 02:14:12.766 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 02:14:12.772 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 02:14:12.772 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 02:14:12.772 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 02:14:12.772 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 02:14:12.772 -07:00 [DBG] Error Url: /home/error
2019-07-17 02:14:12.772 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 02:14:12.849 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 02:14:12.970 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 02:14:12.977 -07:00 [ERR] Connection id "0HLOAISH1GSEV", Request id "0HLOAISH1GSEV:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 02:14:16.142 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 02:14:16.143 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 02:14:16.146 -07:00 [ERR] Connection id "0HLOAISH1GSF1", Request id "0HLOAISH1GSF1:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 03:19:41.519 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 03:19:41.600 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 03:19:41.603 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 03:19:41.603 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 03:19:41.603 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 03:19:41.604 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 03:19:41.604 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 03:19:42.338 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 03:19:42.340 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 03:19:42.340 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 03:19:42.340 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 03:19:42.340 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 03:19:42.340 -07:00 [DBG] Error Url: /home/error
2019-07-17 03:19:42.340 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 03:20:02.659 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 03:20:03.395 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 03:20:03.423 -07:00 [ERR] Connection id "0HLOAK144FLK4", Request id "0HLOAK144FLK4:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 03:30:07.838 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 03:30:07.888 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 03:30:07.891 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 03:30:07.891 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 03:30:07.891 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 03:30:07.891 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 03:30:07.891 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 03:30:08.206 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 03:30:08.208 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 03:30:08.208 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 03:30:08.208 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 03:30:08.208 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 03:30:08.208 -07:00 [DBG] Error Url: /home/error
2019-07-17 03:30:08.208 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 03:48:41.688 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 03:48:41.765 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 03:48:41.772 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 03:48:41.773 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 03:48:41.773 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 03:48:41.773 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 03:48:41.773 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 03:48:42.236 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 03:48:42.241 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 03:48:42.241 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 03:48:42.241 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 03:48:42.241 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 03:48:42.241 -07:00 [DBG] Error Url: /home/error
2019-07-17 03:48:42.241 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 03:50:45.657 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 03:50:46.154 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 03:50:46.162 -07:00 [ERR] Connection id "0HLOAKHAM09BK", Request id "0HLOAKHAM09BK:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 12:07:45.193 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 12:07:45.257 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 12:07:45.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 12:07:45.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 12:07:45.262 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 12:07:45.263 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 12:07:45.263 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 12:07:46.041 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 12:07:46.043 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 12:07:46.043 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 12:07:46.043 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 12:07:46.043 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 12:07:46.043 -07:00 [DBG] Error Url: /home/error
2019-07-17 12:07:46.044 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 12:08:10.600 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:08:10.705 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 12:08:10.712 -07:00 [ERR] Connection id "0HLOAT86KJ9S3", Request id "0HLOAT86KJ9S3:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 12:11:17.966 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 12:11:18.022 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 12:11:18.024 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 12:11:18.024 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 12:11:18.025 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 12:11:18.025 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 12:11:18.025 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 12:11:18.342 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 12:11:18.345 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 12:11:18.345 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 12:11:18.345 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 12:11:18.345 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 12:11:18.345 -07:00 [DBG] Error Url: /home/error
2019-07-17 12:11:18.345 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 12:11:24.335 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:11:24.404 -07:00 [FTL] Unhandled exception: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
2019-07-17 12:11:24.410 -07:00 [ERR] Connection id "0HLOATA5U9VSA", Request id "0HLOATA5U9VSA:00000002": An unhandled exception was thrown by the application.
System.InvalidOperationException: Unable to resolve service for type 'DbAccessLayer.Context.AppDbContext' while attempting to activate 'DbAccessLayer.Repository.UserRepository'.
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateArgumentCallSites(Type serviceType, Type implementationType, CallSiteChain callSiteChain, ParameterInfo[] parameters, Boolean throwIfCallSiteNotFound)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateConstructorCallSite(Type serviceType, Type implementationType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(ServiceDescriptor descriptor, Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.TryCreateExact(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.CallSiteFactory.CreateCallSite(Type serviceType, CallSiteChain callSiteChain)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.CreateServiceAccessor(Type serviceType)
   at System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(TKey key, Func`2 valueFactory)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngine.GetService(Type serviceType, ServiceProviderEngineScope serviceProviderEngineScope)
   at Microsoft.Extensions.DependencyInjection.ServiceLookup.ServiceProviderEngineScope.GetService(Type serviceType)
   at IdentityServer4.Hosting.EndpointRouter.GetEndpointHandler(Endpoint endpoint, HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 52
   at IdentityServer4.Hosting.EndpointRouter.Find(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\EndpointRouter.cs:line 39
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 49
   at IdentityServer4.Hosting.IdentityServerMiddleware.Invoke(HttpContext context, IEndpointRouter router, IUserSession session, IEventService events) in C:\local\identity\server4\IdentityServer4\src\Hosting\IdentityServerMiddleware.cs:line 69
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Cors.Infrastructure.CorsMiddleware.Invoke(HttpContext context)
   at IdentityServer4.Hosting.BaseUrlMiddleware.Invoke(HttpContext context) in C:\local\identity\server4\IdentityServer4\src\Hosting\BaseUrlMiddleware.cs:line 36
   at Microsoft.AspNetCore.Server.IISIntegration.IISMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-17 12:15:56.986 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 12:15:57.020 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 12:15:57.023 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 12:15:57.023 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 12:15:57.023 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 12:15:57.023 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 12:15:57.023 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 12:15:57.310 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 12:15:57.312 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 12:15:57.312 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 12:15:57.312 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 12:15:57.312 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 12:15:57.312 -07:00 [DBG] Error Url: /home/error
2019-07-17 12:15:57.312 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 12:16:01.311 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:16:01.635 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 12:16:01.635 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 12:16:01.669 -07:00 [DBG] Start discovery request
2019-07-17 12:17:30.799 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:17:30.814 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 12:17:30.818 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 12:17:30.840 -07:00 [DBG] Start discovery request
2019-07-17 12:17:31.058 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 12:17:31.059 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 12:17:31.059 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 12:17:31.063 -07:00 [DBG] Start key discovery request
2019-07-17 12:17:33.301 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 12:17:33.307 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 12:17:33.307 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 12:17:33.337 -07:00 [DBG] Start token request.
2019-07-17 12:17:33.342 -07:00 [DBG] Start client validation
2019-07-17 12:17:33.347 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 12:17:33.350 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 12:17:33.421 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 12:17:33.421 -07:00 [DBG] Secret id found: registrationClient
2019-07-17 12:17:33.429 -07:00 [ERR] No client with id 'registrationClient' found. aborting
2019-07-17 12:18:22.878 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:18:22.878 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 12:18:22.878 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 12:18:22.879 -07:00 [DBG] Start discovery request
2019-07-17 12:18:22.957 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 12:18:22.958 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 12:18:22.958 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 12:18:22.958 -07:00 [DBG] Start key discovery request
2019-07-17 12:18:24.661 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 12:18:24.661 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 12:18:24.661 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 12:18:24.661 -07:00 [DBG] Start token request.
2019-07-17 12:18:24.661 -07:00 [DBG] Start client validation
2019-07-17 12:18:24.661 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 12:18:24.661 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 12:18:24.662 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 12:18:24.662 -07:00 [DBG] Secret id found: client
2019-07-17 12:18:24.671 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 12:18:24.701 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 12:18:24.701 -07:00 [DBG] Client validation success
2019-07-17 12:18:24.737 -07:00 [DBG] Start token request validation
2019-07-17 12:18:24.744 -07:00 [DBG] Start client credentials token request validation
2019-07-17 12:18:24.769 -07:00 [DBG] client credentials token request validation success
2019-07-17 12:18:24.781 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"client_credentials","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"client_credentials","scope":"ActiveUserService","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 12:18:24.860 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 12:18:25.013 -07:00 [DBG] Token request success.
2019-07-17 12:34:38.785 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 12:34:38.845 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 12:34:38.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 12:34:38.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 12:34:38.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 12:34:38.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 12:34:38.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 12:34:39.243 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 12:34:39.245 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 12:34:39.245 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 12:34:39.245 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 12:34:39.245 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 12:34:39.245 -07:00 [DBG] Error Url: /home/error
2019-07-17 12:34:39.245 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 12:34:44.336 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:34:44.446 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 12:34:44.447 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 12:34:44.450 -07:00 [DBG] Start discovery request
2019-07-17 12:40:26.222 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 12:40:26.258 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 12:40:26.260 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 12:40:26.260 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 12:40:26.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 12:40:26.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 12:40:26.261 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 12:40:26.578 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 12:40:26.579 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 12:40:26.579 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 12:40:26.579 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 12:40:26.580 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 12:40:26.580 -07:00 [DBG] Error Url: /home/error
2019-07-17 12:40:26.580 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 12:40:44.758 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:40:44.854 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 12:40:44.854 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 12:40:44.857 -07:00 [DBG] Start discovery request
2019-07-17 12:40:44.976 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 12:40:44.977 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 12:40:44.977 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 12:40:44.980 -07:00 [DBG] Start key discovery request
2019-07-17 12:40:47.460 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 12:40:47.466 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 12:40:47.466 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 12:40:47.474 -07:00 [DBG] Start token request.
2019-07-17 12:40:47.480 -07:00 [DBG] Start client validation
2019-07-17 12:40:47.485 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 12:40:47.488 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 12:40:47.501 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 12:40:47.502 -07:00 [DBG] Secret id found: client
2019-07-17 12:40:47.513 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 12:40:47.520 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 12:40:47.520 -07:00 [DBG] Client validation success
2019-07-17 12:40:47.529 -07:00 [DBG] Start token request validation
2019-07-17 12:40:47.539 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 12:40:47.552 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","username":"Tigran","password":"***REDACTED***","scope":"ActiveUserService","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 12:42:42.892 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 12:42:42.950 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 12:42:42.952 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 12:42:42.952 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 12:42:42.953 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 12:42:42.953 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 12:42:42.953 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 12:42:43.341 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 12:42:43.343 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 12:42:43.343 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 12:42:43.343 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 12:42:43.343 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 12:42:43.344 -07:00 [DBG] Error Url: /home/error
2019-07-17 12:42:43.344 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 12:42:50.465 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 12:42:50.560 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 12:42:50.560 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 12:42:50.563 -07:00 [DBG] Start discovery request
2019-07-17 12:42:50.681 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 12:42:50.682 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 12:42:50.682 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 12:42:50.685 -07:00 [DBG] Start key discovery request
2019-07-17 12:42:52.835 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 12:42:52.841 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 12:42:52.841 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 12:42:52.848 -07:00 [DBG] Start token request.
2019-07-17 12:42:52.853 -07:00 [DBG] Start client validation
2019-07-17 12:42:52.859 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 12:42:52.862 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 12:42:52.882 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 12:42:52.882 -07:00 [DBG] Secret id found: client
2019-07-17 12:42:52.894 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 12:42:52.904 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 12:42:52.904 -07:00 [DBG] Client validation success
2019-07-17 12:42:52.913 -07:00 [DBG] Start token request validation
2019-07-17 12:42:52.923 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 12:42:52.935 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","username":"Tigran","password":"***REDACTED***","scope":"ActiveUserService","client_id":"client","client_secret":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 13:27:56.872 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 13:27:56.911 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 13:27:56.915 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 13:27:56.915 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 13:27:56.916 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 13:27:56.916 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 13:27:56.916 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 13:27:57.387 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 13:27:57.389 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 13:27:57.389 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 13:27:57.389 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 13:27:57.389 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 13:27:57.389 -07:00 [DBG] Error Url: /home/error
2019-07-17 13:27:57.389 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 13:30:44.538 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 13:30:44.644 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 13:30:44.644 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 13:30:44.651 -07:00 [DBG] Start token request.
2019-07-17 13:30:44.657 -07:00 [DBG] Start client validation
2019-07-17 13:30:44.661 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 13:30:44.664 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 13:30:44.678 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 13:30:44.678 -07:00 [DBG] Secret id found: client
2019-07-17 13:30:44.689 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 13:30:44.697 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 13:30:44.697 -07:00 [DBG] Client validation success
2019-07-17 13:30:44.705 -07:00 [DBG] Start token request validation
2019-07-17 13:30:44.715 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 13:30:44.728 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 13:31:13.703 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 13:31:13.704 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 13:31:13.704 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 13:31:13.704 -07:00 [DBG] Start token request.
2019-07-17 13:31:13.704 -07:00 [DBG] Start client validation
2019-07-17 13:31:13.704 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 13:31:13.704 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 13:31:13.705 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 13:31:13.705 -07:00 [DBG] Secret id found: client
2019-07-17 13:31:13.705 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 13:31:13.705 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 13:31:13.705 -07:00 [DBG] Client validation success
2019-07-17 13:31:13.705 -07:00 [DBG] Start token request validation
2019-07-17 13:31:13.706 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 13:31:13.706 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 13:36:02.676 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 13:36:02.721 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 13:36:02.724 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 13:36:02.724 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 13:36:02.724 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 13:36:02.724 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 13:36:02.724 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 13:36:02.991 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 13:36:02.993 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 13:36:02.993 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 13:36:02.993 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 13:36:02.993 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 13:36:02.993 -07:00 [DBG] Error Url: /home/error
2019-07-17 13:36:02.993 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 13:37:07.485 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:37:07.588 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:37:07.588 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:37:07.591 -07:00 [DBG] Start discovery request
2019-07-17 13:37:51.379 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:37:51.380 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:37:51.380 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:37:51.380 -07:00 [DBG] Start discovery request
2019-07-17 13:37:51.471 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 13:37:51.475 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 13:37:51.475 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 13:37:51.479 -07:00 [DBG] Start key discovery request
2019-07-17 13:38:00.515 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 13:38:00.521 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 13:38:00.521 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 13:38:00.529 -07:00 [DBG] Start token request.
2019-07-17 13:38:00.534 -07:00 [DBG] Start client validation
2019-07-17 13:38:00.540 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 13:38:00.544 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 13:38:00.560 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 13:38:00.560 -07:00 [DBG] Secret id found: client
2019-07-17 13:38:00.570 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 13:38:00.579 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 13:38:00.579 -07:00 [DBG] Client validation success
2019-07-17 13:38:00.587 -07:00 [DBG] Start token request validation
2019-07-17 13:38:00.597 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 13:38:00.610 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 13:38:33.398 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:38:33.398 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:38:33.398 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:38:33.398 -07:00 [DBG] Start discovery request
2019-07-17 13:38:34.153 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 13:38:34.153 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 13:38:34.153 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 13:38:34.153 -07:00 [DBG] Start key discovery request
2019-07-17 13:38:52.062 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:38:52.063 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:38:52.063 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:38:52.063 -07:00 [DBG] Start discovery request
2019-07-17 13:40:00.170 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:40:00.171 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:40:00.171 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:40:00.171 -07:00 [DBG] Start discovery request
2019-07-17 13:40:00.260 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 13:40:00.260 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 13:40:00.260 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 13:40:00.260 -07:00 [DBG] Start key discovery request
2019-07-17 13:40:20.343 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 13:40:20.344 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 13:40:20.344 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 13:40:20.344 -07:00 [DBG] Start token request.
2019-07-17 13:40:20.344 -07:00 [DBG] Start client validation
2019-07-17 13:40:20.344 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 13:40:20.344 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 13:40:20.345 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 13:40:20.345 -07:00 [DBG] Secret id found: client
2019-07-17 13:40:20.345 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 13:40:20.345 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 13:40:20.345 -07:00 [DBG] Client validation success
2019-07-17 13:40:20.345 -07:00 [DBG] Start token request validation
2019-07-17 13:40:20.345 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 13:40:20.346 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 13:50:15.256 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 13:50:15.296 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 13:50:15.299 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 13:50:15.299 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 13:50:15.299 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 13:50:15.299 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 13:50:15.299 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 13:50:15.553 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 13:50:15.555 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 13:50:15.555 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 13:50:15.555 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 13:50:15.555 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 13:50:15.555 -07:00 [DBG] Error Url: /home/error
2019-07-17 13:50:15.555 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 13:50:31.353 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:50:31.443 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:50:31.443 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:50:31.446 -07:00 [DBG] Start discovery request
2019-07-17 13:50:31.569 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 13:50:31.570 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 13:50:31.570 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 13:50:31.573 -07:00 [DBG] Start key discovery request
2019-07-17 13:50:34.621 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 13:50:34.627 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 13:50:34.628 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 13:50:34.640 -07:00 [DBG] Start token request.
2019-07-17 13:50:34.646 -07:00 [DBG] Start client validation
2019-07-17 13:50:34.651 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 13:50:34.655 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 13:50:34.669 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 13:50:34.669 -07:00 [DBG] Secret id found: client
2019-07-17 13:50:34.680 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 13:50:34.688 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 13:50:34.688 -07:00 [DBG] Client validation success
2019-07-17 13:50:34.697 -07:00 [DBG] Start token request validation
2019-07-17 13:50:34.707 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 13:50:34.719 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 13:51:33.921 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 13:51:33.954 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 13:51:33.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 13:51:33.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 13:51:33.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 13:51:33.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 13:51:33.957 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 13:51:34.177 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 13:51:34.179 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 13:51:34.179 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 13:51:34.179 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 13:51:34.179 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 13:51:34.179 -07:00 [DBG] Error Url: /home/error
2019-07-17 13:51:34.179 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 13:51:55.599 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 13:51:55.695 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 13:51:55.695 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 13:51:55.699 -07:00 [DBG] Start discovery request
2019-07-17 13:51:55.834 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 13:51:55.835 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 13:51:55.835 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 13:51:55.838 -07:00 [DBG] Start key discovery request
2019-07-17 13:52:00.986 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 13:52:00.994 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 13:52:00.994 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 13:52:01.001 -07:00 [DBG] Start token request.
2019-07-17 13:52:01.007 -07:00 [DBG] Start client validation
2019-07-17 13:52:01.013 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 13:52:01.016 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 13:52:01.030 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 13:52:01.030 -07:00 [DBG] Secret id found: client
2019-07-17 13:52:01.041 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 13:52:01.048 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 13:52:01.048 -07:00 [DBG] Client validation success
2019-07-17 13:52:01.057 -07:00 [DBG] Start token request validation
2019-07-17 13:52:01.067 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 13:52:01.079 -07:00 [ERR] ["client"] not authorized for resource owner flow, check the AllowedGrantTypes of client, request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:05:16.228 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:05:16.261 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:05:16.264 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:05:16.264 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:05:16.264 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:05:16.264 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:05:16.264 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:05:16.661 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:05:16.663 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:05:16.663 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:05:16.663 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:05:16.663 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:05:16.663 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:05:16.663 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:05:30.527 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:05:30.631 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:05:30.631 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:05:30.634 -07:00 [DBG] Start discovery request
2019-07-17 14:05:30.756 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:05:30.757 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:05:30.757 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:05:30.761 -07:00 [DBG] Start key discovery request
2019-07-17 14:05:32.965 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:05:32.971 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:05:32.971 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:05:32.978 -07:00 [DBG] Start token request.
2019-07-17 14:05:32.985 -07:00 [DBG] Start client validation
2019-07-17 14:05:32.989 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:05:32.992 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:05:33.006 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:05:33.006 -07:00 [DBG] Secret id found: client
2019-07-17 14:05:33.016 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:05:33.025 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:05:33.025 -07:00 [DBG] Client validation success
2019-07-17 14:05:33.035 -07:00 [DBG] Start token request validation
2019-07-17 14:05:33.047 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:05:36.664 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:06:01.821 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:06:08.648 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:06:08.648 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:06:08.648 -07:00 [DBG] Start discovery request
2019-07-17 14:06:08.731 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:06:14.369 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:06:14.369 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:06:14.369 -07:00 [DBG] Start key discovery request
2019-07-17 14:06:21.670 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:06:30.342 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:06:30.342 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:06:30.342 -07:00 [DBG] Start token request.
2019-07-17 14:06:30.342 -07:00 [DBG] Start client validation
2019-07-17 14:06:30.343 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:06:30.343 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:06:30.343 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:06:30.343 -07:00 [DBG] Secret id found: client
2019-07-17 14:06:30.344 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:06:30.344 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:06:30.344 -07:00 [DBG] Client validation success
2019-07-17 14:06:30.344 -07:00 [DBG] Start token request validation
2019-07-17 14:06:30.344 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:06:44.971 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:07:48.649 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:07:48.692 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:07:48.694 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:07:48.695 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:07:48.695 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:07:48.695 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:07:48.695 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:07:49.019 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:07:49.021 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:07:49.022 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:07:49.023 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:07:49.023 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:07:49.023 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:07:49.023 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:08:12.676 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:08:12.785 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:08:12.785 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:08:12.789 -07:00 [DBG] Start discovery request
2019-07-17 14:08:12.914 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:08:12.915 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:08:12.915 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:08:12.919 -07:00 [DBG] Start key discovery request
2019-07-17 14:08:16.296 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:08:16.301 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:08:16.301 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:08:16.310 -07:00 [DBG] Start token request.
2019-07-17 14:08:16.315 -07:00 [DBG] Start client validation
2019-07-17 14:08:16.320 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:08:16.323 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:08:16.338 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:08:16.338 -07:00 [DBG] Secret id found: client
2019-07-17 14:08:16.350 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:08:16.359 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:08:16.359 -07:00 [DBG] Client validation success
2019-07-17 14:08:16.368 -07:00 [DBG] Start token request validation
2019-07-17 14:08:16.378 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:10:32.135 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:10:32.177 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:10:32.180 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:10:32.181 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:10:32.181 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:10:32.181 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:10:32.181 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:10:32.481 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:10:32.484 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:10:32.484 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:10:32.484 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:10:32.484 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:10:32.484 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:10:32.484 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:10:42.669 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:10:42.778 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:10:42.778 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:10:42.782 -07:00 [DBG] Start discovery request
2019-07-17 14:10:42.947 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:10:42.949 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:10:42.949 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:10:42.952 -07:00 [DBG] Start key discovery request
2019-07-17 14:10:43.308 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:10:43.315 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:10:43.315 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:10:43.324 -07:00 [DBG] Start token request.
2019-07-17 14:10:43.331 -07:00 [DBG] Start client validation
2019-07-17 14:10:43.338 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:10:43.343 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:10:43.360 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:10:43.360 -07:00 [DBG] Secret id found: client
2019-07-17 14:10:43.373 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:10:43.381 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:10:43.381 -07:00 [DBG] Client validation success
2019-07-17 14:10:43.395 -07:00 [DBG] Start token request validation
2019-07-17 14:10:43.414 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:14:42.277 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:14:42.317 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:14:42.320 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:14:42.320 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:14:42.320 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:14:42.320 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:14:42.320 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:14:42.589 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:14:42.590 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:14:42.590 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:14:42.590 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:14:42.590 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:14:42.590 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:14:42.591 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:14:49.246 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:14:49.358 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:14:49.358 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:14:49.363 -07:00 [DBG] Start discovery request
2019-07-17 14:14:49.495 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:14:49.496 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:14:49.496 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:14:49.499 -07:00 [DBG] Start key discovery request
2019-07-17 14:14:49.752 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:14:49.757 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:14:49.757 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:14:49.765 -07:00 [DBG] Start token request.
2019-07-17 14:14:49.771 -07:00 [DBG] Start client validation
2019-07-17 14:14:49.776 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:14:49.780 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:14:49.796 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:14:49.796 -07:00 [DBG] Secret id found: client
2019-07-17 14:14:49.808 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:14:49.816 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:14:49.816 -07:00 [DBG] Client validation success
2019-07-17 14:14:49.828 -07:00 [DBG] Start token request validation
2019-07-17 14:14:49.845 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:16:10.322 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:16:10.359 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:16:10.362 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:16:10.362 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:16:10.362 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:16:10.362 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:16:10.362 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:16:10.790 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:16:10.792 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:16:10.792 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:16:10.792 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:16:10.792 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:16:10.792 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:16:10.792 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:16:15.241 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:16:15.340 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:16:15.340 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:16:15.343 -07:00 [DBG] Start discovery request
2019-07-17 14:16:15.467 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:16:15.468 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:16:15.468 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:16:15.473 -07:00 [DBG] Start key discovery request
2019-07-17 14:16:15.738 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:16:15.746 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:16:15.746 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:16:15.756 -07:00 [DBG] Start token request.
2019-07-17 14:16:15.764 -07:00 [DBG] Start client validation
2019-07-17 14:16:15.775 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:16:15.779 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:16:15.802 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:16:15.802 -07:00 [DBG] Secret id found: client
2019-07-17 14:16:15.816 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:16:15.826 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:16:15.827 -07:00 [DBG] Client validation success
2019-07-17 14:16:15.837 -07:00 [DBG] Start token request validation
2019-07-17 14:16:15.851 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:20:54.129 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:20:54.171 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:20:54.176 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:20:54.176 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:20:54.176 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:20:54.176 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:20:54.176 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:20:54.513 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:20:54.515 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:20:54.515 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:20:54.515 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:20:54.515 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:20:54.515 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:20:54.515 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:21:07.388 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:21:07.498 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:21:07.498 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:21:07.502 -07:00 [DBG] Start discovery request
2019-07-17 14:21:07.631 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:21:07.632 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:21:07.632 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:21:07.637 -07:00 [DBG] Start key discovery request
2019-07-17 14:21:07.911 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:21:07.916 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:21:07.917 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:21:07.925 -07:00 [DBG] Start token request.
2019-07-17 14:21:07.933 -07:00 [DBG] Start client validation
2019-07-17 14:21:07.941 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:21:07.945 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:21:07.964 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:21:07.964 -07:00 [DBG] Secret id found: client
2019-07-17 14:21:07.977 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:21:07.985 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:21:07.985 -07:00 [DBG] Client validation success
2019-07-17 14:21:07.994 -07:00 [DBG] Start token request validation
2019-07-17 14:21:08.004 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:21:16.618 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:21:16.629 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:21:16.696 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:21:16.697 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:21:35.905 -07:00 [DBG] Token request success.
2019-07-17 14:34:00.276 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:34:00.323 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:34:00.326 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:34:00.326 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:34:00.326 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:34:00.326 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:34:00.326 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:34:00.596 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:34:00.598 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:34:00.598 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:34:00.598 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:34:00.598 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:34:00.598 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:34:00.598 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:34:45.948 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:34:46.045 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:34:46.045 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:34:46.048 -07:00 [DBG] Start discovery request
2019-07-17 14:34:46.196 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:34:46.197 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:34:46.197 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:34:46.200 -07:00 [DBG] Start key discovery request
2019-07-17 14:34:46.472 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:34:46.479 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:34:46.479 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:34:46.487 -07:00 [DBG] Start token request.
2019-07-17 14:34:46.494 -07:00 [DBG] Start client validation
2019-07-17 14:34:46.500 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:34:46.504 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:34:46.529 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:34:46.530 -07:00 [DBG] Secret id found: client
2019-07-17 14:34:46.544 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:34:46.555 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:34:46.555 -07:00 [DBG] Client validation success
2019-07-17 14:34:46.565 -07:00 [DBG] Start token request validation
2019-07-17 14:34:46.579 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:34:55.436 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:34:55.448 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:34:55.478 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:34:55.478 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:34:59.519 -07:00 [DBG] Token request success.
2019-07-17 14:53:40.491 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 14:53:40.541 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 14:53:40.544 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 14:53:40.544 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 14:53:40.544 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 14:53:40.544 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 14:53:40.544 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 14:53:41.199 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 14:53:41.202 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 14:53:41.202 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 14:53:41.202 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 14:53:41.202 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 14:53:41.202 -07:00 [DBG] Error Url: /home/error
2019-07-17 14:53:41.202 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 14:54:19.956 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:54:21.538 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:54:21.538 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:54:21.577 -07:00 [DBG] Start discovery request
2019-07-17 14:54:22.096 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:54:22.098 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:54:22.098 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:54:22.102 -07:00 [DBG] Start key discovery request
2019-07-17 14:54:22.511 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:54:22.542 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:54:22.542 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:54:22.560 -07:00 [DBG] Start token request.
2019-07-17 14:54:22.574 -07:00 [DBG] Start client validation
2019-07-17 14:54:22.603 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:54:22.612 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:54:22.747 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:54:22.747 -07:00 [DBG] Secret id found: client
2019-07-17 14:54:22.776 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:54:22.794 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:54:22.794 -07:00 [DBG] Client validation success
2019-07-17 14:54:22.821 -07:00 [DBG] Start token request validation
2019-07-17 14:54:22.841 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:54:25.521 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:54:25.552 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:54:25.643 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:54:25.644 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:54:25.915 -07:00 [DBG] Token request success.
2019-07-17 14:54:50.572 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:54:50.572 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:54:50.573 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:54:50.573 -07:00 [DBG] Start discovery request
2019-07-17 14:54:50.715 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:54:50.715 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:54:50.715 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:54:50.715 -07:00 [DBG] Start key discovery request
2019-07-17 14:54:51.134 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:54:51.135 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:54:51.135 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:54:51.136 -07:00 [DBG] Start token request.
2019-07-17 14:54:51.136 -07:00 [DBG] Start client validation
2019-07-17 14:54:51.136 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:54:51.136 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:54:51.137 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:54:51.137 -07:00 [DBG] Secret id found: client
2019-07-17 14:54:51.137 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:54:51.137 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:54:51.138 -07:00 [DBG] Client validation success
2019-07-17 14:54:51.138 -07:00 [DBG] Start token request validation
2019-07-17 14:54:51.138 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:54:51.164 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:54:51.165 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:54:51.165 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:54:51.165 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:54:51.174 -07:00 [DBG] Token request success.
2019-07-17 14:55:05.519 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:55:05.519 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:55:05.520 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:55:05.520 -07:00 [DBG] Start discovery request
2019-07-17 14:55:05.669 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:55:05.669 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:55:05.669 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:55:05.669 -07:00 [DBG] Start key discovery request
2019-07-17 14:55:06.168 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:55:06.203 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:55:06.203 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:55:06.203 -07:00 [DBG] Start token request.
2019-07-17 14:55:06.203 -07:00 [DBG] Start client validation
2019-07-17 14:55:06.203 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:55:06.204 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:55:06.204 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:55:06.204 -07:00 [DBG] Secret id found: client
2019-07-17 14:55:06.204 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:55:06.204 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:55:06.204 -07:00 [DBG] Client validation success
2019-07-17 14:55:06.205 -07:00 [DBG] Start token request validation
2019-07-17 14:55:06.205 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:55:06.216 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:55:06.216 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:55:06.216 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:55:06.216 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:55:06.224 -07:00 [DBG] Token request success.
2019-07-17 14:55:51.854 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:55:51.855 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:55:51.855 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:55:51.855 -07:00 [DBG] Start discovery request
2019-07-17 14:55:51.998 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:55:51.999 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:55:51.999 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:55:51.999 -07:00 [DBG] Start key discovery request
2019-07-17 14:55:52.406 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:55:52.406 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:55:52.406 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:55:52.406 -07:00 [DBG] Start token request.
2019-07-17 14:55:52.406 -07:00 [DBG] Start client validation
2019-07-17 14:55:52.407 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:55:52.407 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:55:52.407 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:55:52.407 -07:00 [DBG] Secret id found: client
2019-07-17 14:55:52.407 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:55:52.407 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:55:52.408 -07:00 [DBG] Client validation success
2019-07-17 14:55:52.408 -07:00 [DBG] Start token request validation
2019-07-17 14:55:52.408 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:55:52.417 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:55:52.417 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:55:52.417 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:55:52.417 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:55:52.425 -07:00 [DBG] Token request success.
2019-07-17 14:57:33.514 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 14:57:33.515 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 14:57:33.515 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 14:57:33.515 -07:00 [DBG] Start discovery request
2019-07-17 14:57:33.710 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 14:57:33.711 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 14:57:33.711 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 14:57:33.711 -07:00 [DBG] Start key discovery request
2019-07-17 14:57:34.094 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 14:57:34.095 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 14:57:34.095 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 14:57:34.095 -07:00 [DBG] Start token request.
2019-07-17 14:57:34.095 -07:00 [DBG] Start client validation
2019-07-17 14:57:34.095 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 14:57:34.095 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 14:57:34.096 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 14:57:34.096 -07:00 [DBG] Secret id found: client
2019-07-17 14:57:34.096 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 14:57:34.096 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 14:57:34.096 -07:00 [DBG] Client validation success
2019-07-17 14:57:34.096 -07:00 [DBG] Start token request validation
2019-07-17 14:57:34.096 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 14:57:34.104 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 14:57:34.104 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 14:57:34.104 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 14:57:34.105 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 14:57:34.113 -07:00 [DBG] Token request success.
2019-07-17 15:01:29.248 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 15:01:29.313 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 15:01:29.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 15:01:29.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 15:01:29.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 15:01:29.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 15:01:29.319 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 15:01:29.778 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 15:01:29.781 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 15:01:29.781 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 15:01:29.781 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 15:01:29.781 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 15:01:29.781 -07:00 [DBG] Error Url: /home/error
2019-07-17 15:01:29.781 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:01:58.323 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:01:58.521 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:01:58.522 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:01:58.531 -07:00 [DBG] Start discovery request
2019-07-17 15:01:58.784 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:01:58.786 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:01:58.786 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:01:58.793 -07:00 [DBG] Start key discovery request
2019-07-17 15:01:59.216 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:01:59.227 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:01:59.227 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:01:59.243 -07:00 [DBG] Start token request.
2019-07-17 15:01:59.253 -07:00 [DBG] Start client validation
2019-07-17 15:01:59.264 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:01:59.271 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:01:59.298 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:01:59.298 -07:00 [DBG] Secret id found: client
2019-07-17 15:01:59.318 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:01:59.330 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:01:59.330 -07:00 [DBG] Client validation success
2019-07-17 15:01:59.351 -07:00 [DBG] Start token request validation
2019-07-17 15:01:59.377 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:02:00.105 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:02:00.123 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:02:00.163 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:02:00.164 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:02:00.316 -07:00 [DBG] Token request success.
2019-07-17 15:02:41.708 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:02:41.708 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:02:41.709 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:02:41.709 -07:00 [DBG] Start discovery request
2019-07-17 15:02:41.853 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:02:41.854 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:02:41.854 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:02:41.854 -07:00 [DBG] Start key discovery request
2019-07-17 15:02:42.304 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:02:42.305 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:02:42.305 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:02:42.305 -07:00 [DBG] Start token request.
2019-07-17 15:02:42.305 -07:00 [DBG] Start client validation
2019-07-17 15:02:42.305 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:02:42.305 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:02:42.306 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:02:42.306 -07:00 [DBG] Secret id found: client
2019-07-17 15:02:42.306 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:02:42.307 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:02:42.307 -07:00 [DBG] Client validation success
2019-07-17 15:02:42.307 -07:00 [DBG] Start token request validation
2019-07-17 15:02:42.307 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:02:42.331 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:02:42.331 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:02:42.332 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:02:42.332 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:02:42.339 -07:00 [DBG] Token request success.
2019-07-17 15:13:31.861 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 15:13:31.920 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 15:13:31.924 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 15:13:31.924 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 15:13:31.924 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 15:13:31.924 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 15:13:31.925 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 15:13:32.485 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 15:13:32.489 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 15:13:32.490 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 15:13:32.490 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 15:13:32.490 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 15:13:32.490 -07:00 [DBG] Error Url: /home/error
2019-07-17 15:13:32.490 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:14:23.292 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:14:23.471 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:14:23.471 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:14:23.476 -07:00 [DBG] Start discovery request
2019-07-17 15:14:23.702 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:14:23.703 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:14:23.703 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:14:23.711 -07:00 [DBG] Start key discovery request
2019-07-17 15:14:24.133 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:14:24.144 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:14:24.144 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:14:24.161 -07:00 [DBG] Start token request.
2019-07-17 15:14:24.173 -07:00 [DBG] Start client validation
2019-07-17 15:14:24.184 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:14:24.191 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:14:24.215 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:14:24.215 -07:00 [DBG] Secret id found: client
2019-07-17 15:14:24.233 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:14:24.245 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:14:24.245 -07:00 [DBG] Client validation success
2019-07-17 15:14:24.259 -07:00 [DBG] Start token request validation
2019-07-17 15:14:24.276 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:14:25.058 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:14:25.078 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:14:25.128 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:14:25.129 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:14:25.291 -07:00 [DBG] Token request success.
2019-07-17 15:20:18.926 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 15:20:18.985 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 15:20:18.989 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 15:20:18.989 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 15:20:18.989 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 15:20:18.989 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 15:20:18.990 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 15:20:19.593 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 15:20:19.597 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 15:20:19.597 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 15:20:19.597 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 15:20:19.597 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 15:20:19.598 -07:00 [DBG] Error Url: /home/error
2019-07-17 15:20:19.598 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:20:55.097 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:20:55.300 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:20:55.300 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:20:55.308 -07:00 [DBG] Start discovery request
2019-07-17 15:20:55.542 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:20:55.543 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:20:55.543 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:20:55.549 -07:00 [DBG] Start key discovery request
2019-07-17 15:20:55.967 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:20:55.979 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:20:55.979 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:20:55.998 -07:00 [DBG] Start token request.
2019-07-17 15:20:56.013 -07:00 [DBG] Start client validation
2019-07-17 15:20:56.024 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:20:56.032 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:20:56.065 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:20:56.065 -07:00 [DBG] Secret id found: client
2019-07-17 15:20:56.085 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:20:56.100 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:20:56.101 -07:00 [DBG] Client validation success
2019-07-17 15:20:56.119 -07:00 [DBG] Start token request validation
2019-07-17 15:20:56.140 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:20:56.903 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:20:56.927 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:20:56.973 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:20:56.974 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:20:57.126 -07:00 [DBG] Token request success.
2019-07-17 15:21:48.142 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:21:48.143 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:21:48.143 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:21:48.143 -07:00 [DBG] Start discovery request
2019-07-17 15:21:48.293 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:21:48.293 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:21:48.294 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:21:48.294 -07:00 [DBG] Start key discovery request
2019-07-17 15:21:48.713 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:21:48.714 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:21:48.714 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:21:48.714 -07:00 [DBG] Start token request.
2019-07-17 15:21:48.714 -07:00 [DBG] Start client validation
2019-07-17 15:21:48.714 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:21:48.714 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:21:48.715 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:21:48.715 -07:00 [DBG] Secret id found: client
2019-07-17 15:21:48.716 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:21:48.716 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:21:48.716 -07:00 [DBG] Client validation success
2019-07-17 15:21:48.716 -07:00 [DBG] Start token request validation
2019-07-17 15:21:48.717 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:21:48.770 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:21:48.770 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:21:48.771 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:21:48.771 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:21:48.790 -07:00 [DBG] Token request success.
2019-07-17 15:23:04.319 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:23:04.320 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:23:04.320 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:23:04.320 -07:00 [DBG] Start discovery request
2019-07-17 15:23:04.495 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:23:04.496 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:23:04.496 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:23:04.496 -07:00 [DBG] Start key discovery request
2019-07-17 15:23:04.890 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:23:04.891 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:23:04.891 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:23:04.891 -07:00 [DBG] Start token request.
2019-07-17 15:23:04.891 -07:00 [DBG] Start client validation
2019-07-17 15:23:04.891 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:23:04.891 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:23:04.892 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:23:04.892 -07:00 [DBG] Secret id found: client
2019-07-17 15:23:04.892 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:23:04.892 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:23:04.892 -07:00 [DBG] Client validation success
2019-07-17 15:23:04.893 -07:00 [DBG] Start token request validation
2019-07-17 15:23:04.893 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:23:04.901 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:23:04.901 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:23:04.901 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:23:04.901 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:23:04.909 -07:00 [DBG] Token request success.
2019-07-17 15:26:31.111 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 15:26:31.177 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 15:26:31.183 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 15:26:31.183 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 15:26:31.184 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 15:26:31.184 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 15:26:31.184 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 15:26:31.733 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 15:26:31.737 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 15:26:31.737 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 15:26:31.737 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 15:26:31.737 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 15:26:31.738 -07:00 [DBG] Error Url: /home/error
2019-07-17 15:26:31.738 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 15:26:52.619 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:26:52.768 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:26:52.768 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:26:52.773 -07:00 [DBG] Start discovery request
2019-07-17 15:26:52.945 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:26:52.947 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:26:52.947 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:26:52.952 -07:00 [DBG] Start key discovery request
2019-07-17 15:26:53.353 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 15:26:53.364 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 15:26:53.364 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 15:26:53.377 -07:00 [DBG] Start token request.
2019-07-17 15:26:53.386 -07:00 [DBG] Start client validation
2019-07-17 15:26:53.392 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 15:26:53.397 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 15:26:53.420 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 15:26:53.420 -07:00 [DBG] Secret id found: client
2019-07-17 15:26:53.437 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 15:26:53.449 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 15:26:53.449 -07:00 [DBG] Client validation success
2019-07-17 15:26:53.463 -07:00 [DBG] Start token request validation
2019-07-17 15:26:53.476 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 15:26:54.021 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 15:26:54.042 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 15:26:54.088 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 15:26:54.088 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 15:26:54.251 -07:00 [DBG] Token request success.
2019-07-17 15:26:54.417 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 15:26:54.417 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 15:26:54.418 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 15:26:54.418 -07:00 [DBG] Start discovery request
2019-07-17 15:26:54.622 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 15:26:54.622 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 15:26:54.622 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 15:26:54.622 -07:00 [DBG] Start key discovery request
2019-07-17 17:16:13.727 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 17:16:13.808 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 17:16:13.813 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 17:16:13.813 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 17:16:13.814 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 17:16:13.814 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 17:16:13.814 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 17:16:14.430 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 17:16:14.438 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 17:16:14.438 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 17:16:14.438 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 17:16:14.438 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 17:16:14.438 -07:00 [DBG] Error Url: /home/error
2019-07-17 17:16:14.438 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 17:21:09.947 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:21:10.550 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:21:10.550 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:21:10.563 -07:00 [DBG] Start discovery request
2019-07-17 17:21:11.302 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:21:11.303 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:21:11.303 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:21:11.310 -07:00 [DBG] Start key discovery request
2019-07-17 17:21:18.932 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:21:18.940 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:21:18.941 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:21:18.951 -07:00 [DBG] Start token request.
2019-07-17 17:21:18.959 -07:00 [DBG] Start client validation
2019-07-17 17:21:18.966 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:21:18.971 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:21:18.993 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:21:18.993 -07:00 [DBG] Secret id found: client
2019-07-17 17:21:19.010 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:21:19.024 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:21:19.024 -07:00 [DBG] Client validation success
2019-07-17 17:21:19.042 -07:00 [DBG] Start token request validation
2019-07-17 17:21:19.063 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:21:24.129 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:21:24.151 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:21:24.212 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:21:24.213 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:21:24.608 -07:00 [DBG] Token request success.
2019-07-17 17:24:01.489 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:24:01.490 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:24:01.490 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:24:01.500 -07:00 [DBG] Start discovery request
2019-07-17 17:24:01.693 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:24:01.694 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:24:01.694 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:24:01.694 -07:00 [DBG] Start key discovery request
2019-07-17 17:24:02.117 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:24:02.118 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:24:02.118 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:24:02.118 -07:00 [DBG] Start token request.
2019-07-17 17:24:02.118 -07:00 [DBG] Start client validation
2019-07-17 17:24:02.119 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:24:02.119 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:24:02.119 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:24:02.120 -07:00 [DBG] Secret id found: client
2019-07-17 17:24:02.120 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:24:02.120 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:24:02.120 -07:00 [DBG] Client validation success
2019-07-17 17:24:02.120 -07:00 [DBG] Start token request validation
2019-07-17 17:24:02.120 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:24:02.221 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:24:02.223 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:24:02.223 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:24:02.223 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:24:02.230 -07:00 [DBG] Token request success.
2019-07-17 17:24:45.992 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:24:45.992 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:24:45.992 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:24:45.992 -07:00 [DBG] Start discovery request
2019-07-17 17:24:46.178 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:24:46.179 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:24:46.179 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:24:46.179 -07:00 [DBG] Start key discovery request
2019-07-17 17:24:46.683 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:24:46.683 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:24:46.683 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:24:46.684 -07:00 [DBG] Start token request.
2019-07-17 17:24:46.684 -07:00 [DBG] Start client validation
2019-07-17 17:24:46.684 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:24:46.684 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:24:46.684 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:24:46.685 -07:00 [DBG] Secret id found: client
2019-07-17 17:24:46.685 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:24:46.685 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:24:46.685 -07:00 [DBG] Client validation success
2019-07-17 17:24:46.685 -07:00 [DBG] Start token request validation
2019-07-17 17:24:46.685 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:24:46.694 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:24:46.694 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:24:46.694 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:24:46.694 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:24:46.702 -07:00 [DBG] Token request success.
2019-07-17 17:25:30.610 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 17:25:30.672 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 17:25:30.678 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 17:25:30.679 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 17:25:30.679 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 17:25:30.679 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 17:25:30.679 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 17:25:31.217 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 17:25:31.222 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 17:25:31.222 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 17:25:31.222 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 17:25:31.223 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 17:25:31.223 -07:00 [DBG] Error Url: /home/error
2019-07-17 17:25:31.223 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 17:25:36.405 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:25:36.572 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:25:36.572 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:25:36.578 -07:00 [DBG] Start discovery request
2019-07-17 17:25:36.777 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:25:36.779 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:25:36.779 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:25:36.786 -07:00 [DBG] Start key discovery request
2019-07-17 17:25:37.313 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:25:37.328 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:25:37.328 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:25:37.346 -07:00 [DBG] Start token request.
2019-07-17 17:25:37.358 -07:00 [DBG] Start client validation
2019-07-17 17:25:37.371 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:25:37.377 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:25:37.408 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:25:37.408 -07:00 [DBG] Secret id found: client
2019-07-17 17:25:37.432 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:25:37.446 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:25:37.446 -07:00 [DBG] Client validation success
2019-07-17 17:25:37.461 -07:00 [DBG] Start token request validation
2019-07-17 17:25:37.482 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:25:38.260 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:25:38.282 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:25:38.356 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:25:38.357 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:25:38.562 -07:00 [DBG] Token request success.
2019-07-17 17:25:41.176 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:25:41.177 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:25:41.177 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:25:41.177 -07:00 [DBG] Start discovery request
2019-07-17 17:25:41.306 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:25:41.306 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:25:41.306 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:25:41.306 -07:00 [DBG] Start key discovery request
2019-07-17 17:26:10.589 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:26:10.589 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:26:10.589 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:26:10.589 -07:00 [DBG] Start discovery request
2019-07-17 17:26:10.769 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:26:10.770 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:26:10.770 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:26:10.770 -07:00 [DBG] Start key discovery request
2019-07-17 17:26:14.236 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:26:14.237 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:26:14.237 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:26:14.237 -07:00 [DBG] Start token request.
2019-07-17 17:26:14.238 -07:00 [DBG] Start client validation
2019-07-17 17:26:14.238 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:26:14.238 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:26:14.239 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:26:14.240 -07:00 [DBG] Secret id found: client
2019-07-17 17:26:14.240 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:26:14.240 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:26:14.241 -07:00 [DBG] Client validation success
2019-07-17 17:26:14.241 -07:00 [DBG] Start token request validation
2019-07-17 17:26:14.241 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:26:14.294 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:26:14.294 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:26:14.295 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:26:14.295 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:26:14.304 -07:00 [DBG] Token request success.
2019-07-17 17:26:35.518 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:26:35.519 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:26:35.519 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:26:35.519 -07:00 [DBG] Start discovery request
2019-07-17 17:26:35.674 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:26:35.675 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:26:35.675 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:26:35.675 -07:00 [DBG] Start key discovery request
2019-07-17 17:27:22.129 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:27:22.129 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:27:22.129 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:27:22.130 -07:00 [DBG] Start token request.
2019-07-17 17:27:22.130 -07:00 [DBG] Start client validation
2019-07-17 17:27:22.130 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:27:22.130 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:27:22.131 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:27:22.131 -07:00 [DBG] Secret id found: client
2019-07-17 17:27:22.131 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:27:22.131 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:27:22.131 -07:00 [DBG] Client validation success
2019-07-17 17:27:22.131 -07:00 [DBG] Start token request validation
2019-07-17 17:27:22.131 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:27:22.141 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:27:22.141 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:27:22.141 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:27:22.141 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:27:22.150 -07:00 [DBG] Token request success.
2019-07-17 17:29:16.178 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:29:16.179 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:29:16.179 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:29:16.179 -07:00 [DBG] Start discovery request
2019-07-17 17:29:16.314 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:29:16.314 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:29:16.314 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:29:16.314 -07:00 [DBG] Start key discovery request
2019-07-17 17:29:19.550 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:29:19.550 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:29:19.550 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:29:19.550 -07:00 [DBG] Start token request.
2019-07-17 17:29:19.550 -07:00 [DBG] Start client validation
2019-07-17 17:29:19.550 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:29:19.550 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:29:19.551 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:29:19.551 -07:00 [DBG] Secret id found: client
2019-07-17 17:29:19.551 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:29:19.551 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:29:19.551 -07:00 [DBG] Client validation success
2019-07-17 17:29:19.551 -07:00 [DBG] Start token request validation
2019-07-17 17:29:19.552 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:29:19.559 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:29:19.559 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:29:19.559 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:29:19.559 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:29:19.568 -07:00 [DBG] Token request success.
2019-07-17 17:32:15.176 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:32:15.177 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:32:15.177 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:32:15.178 -07:00 [DBG] Start discovery request
2019-07-17 17:32:15.343 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:32:15.344 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:32:15.344 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:32:15.344 -07:00 [DBG] Start key discovery request
2019-07-17 17:32:56.248 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:32:56.249 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:32:56.249 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:32:56.249 -07:00 [DBG] Start token request.
2019-07-17 17:32:56.249 -07:00 [DBG] Start client validation
2019-07-17 17:32:56.249 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:32:56.249 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:32:56.250 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:32:56.250 -07:00 [DBG] Secret id found: client
2019-07-17 17:32:56.250 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:32:56.250 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:32:56.250 -07:00 [DBG] Client validation success
2019-07-17 17:32:56.250 -07:00 [DBG] Start token request validation
2019-07-17 17:32:56.250 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:32:56.260 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:32:56.260 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:32:56.260 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:32:56.260 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:32:56.268 -07:00 [DBG] Token request success.
2019-07-17 17:35:13.024 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:35:13.025 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:35:13.025 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:35:13.025 -07:00 [DBG] Start discovery request
2019-07-17 17:35:13.173 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:35:13.173 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:35:13.173 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:35:13.173 -07:00 [DBG] Start key discovery request
2019-07-17 17:36:00.608 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:36:00.608 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:36:00.608 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:36:00.609 -07:00 [DBG] Start token request.
2019-07-17 17:36:00.609 -07:00 [DBG] Start client validation
2019-07-17 17:36:00.609 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:36:00.609 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:36:00.610 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:36:00.610 -07:00 [DBG] Secret id found: client
2019-07-17 17:36:00.610 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:36:00.610 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:36:00.610 -07:00 [DBG] Client validation success
2019-07-17 17:36:00.610 -07:00 [DBG] Start token request validation
2019-07-17 17:36:00.610 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:36:00.618 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:36:00.618 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:36:00.619 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:36:00.619 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:36:00.627 -07:00 [DBG] Token request success.
2019-07-17 17:40:53.848 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 17:40:53.917 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 17:40:53.922 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 17:40:53.923 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 17:40:53.923 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 17:40:53.923 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 17:40:53.923 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 17:40:54.408 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 17:40:54.415 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 17:40:54.415 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 17:40:54.415 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 17:40:54.415 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 17:40:54.415 -07:00 [DBG] Error Url: /home/error
2019-07-17 17:40:54.415 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 17:42:05.880 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:42:06.142 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:42:06.143 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:42:06.148 -07:00 [DBG] Start discovery request
2019-07-17 17:42:06.430 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:42:06.432 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:42:06.432 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:42:06.438 -07:00 [DBG] Start key discovery request
2019-07-17 17:42:06.858 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:42:06.870 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:42:06.871 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:42:06.889 -07:00 [DBG] Start token request.
2019-07-17 17:42:06.906 -07:00 [DBG] Start client validation
2019-07-17 17:42:06.924 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:42:06.933 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:42:06.961 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:42:06.961 -07:00 [DBG] Secret id found: client
2019-07-17 17:42:06.979 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:42:06.993 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:42:06.993 -07:00 [DBG] Client validation success
2019-07-17 17:42:07.008 -07:00 [DBG] Start token request validation
2019-07-17 17:42:07.023 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:42:07.635 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:42:07.658 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:42:07.708 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:42:07.709 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:42:07.861 -07:00 [DBG] Token request success.
2019-07-17 17:43:15.655 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 17:43:15.655 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 17:43:15.655 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 17:43:15.655 -07:00 [DBG] Start discovery request
2019-07-17 17:43:15.803 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 17:43:15.804 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 17:43:15.804 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 17:43:15.804 -07:00 [DBG] Start key discovery request
2019-07-17 17:43:16.225 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 17:43:16.226 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 17:43:16.226 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 17:43:16.226 -07:00 [DBG] Start token request.
2019-07-17 17:43:16.226 -07:00 [DBG] Start client validation
2019-07-17 17:43:16.227 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 17:43:16.227 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 17:43:16.228 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 17:43:16.228 -07:00 [DBG] Secret id found: client
2019-07-17 17:43:16.229 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 17:43:16.229 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 17:43:16.229 -07:00 [DBG] Client validation success
2019-07-17 17:43:16.229 -07:00 [DBG] Start token request validation
2019-07-17 17:43:16.229 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 17:43:16.266 -07:00 [DBG] Resource owner password token request validation success.
2019-07-17 17:43:16.266 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 17:43:16.266 -07:00 [DBG] Getting claims for access token for client: client
2019-07-17 17:43:16.266 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-17 17:43:16.275 -07:00 [DBG] Token request success.
2019-07-17 18:21:41.384 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 18:21:41.792 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 18:21:41.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 18:21:41.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 18:21:41.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 18:21:41.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 18:21:41.796 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 18:21:42.353 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 18:21:42.358 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 18:21:42.358 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 18:21:42.359 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 18:21:42.359 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 18:21:42.359 -07:00 [DBG] Error Url: /home/error
2019-07-17 18:21:42.359 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 18:21:42.474 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 18:21:44.439 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 18:21:44.440 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 18:21:44.455 -07:00 [DBG] Start discovery request
2019-07-17 18:21:45.992 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 18:21:45.995 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 18:21:45.995 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 18:21:46.012 -07:00 [DBG] Start key discovery request
2019-07-17 18:26:49.203 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 18:26:49.203 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 18:26:49.203 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 18:26:49.204 -07:00 [DBG] Start discovery request
2019-07-17 18:26:49.323 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 18:26:49.323 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 18:26:49.324 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 18:26:49.324 -07:00 [DBG] Start key discovery request
2019-07-17 18:27:01.301 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 18:27:01.411 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 18:27:01.411 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 18:27:01.411 -07:00 [DBG] Start discovery request
2019-07-17 18:27:01.576 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 18:27:01.576 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 18:27:01.576 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 18:27:01.576 -07:00 [DBG] Start key discovery request
2019-07-17 19:25:46.792 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 19:25:47.387 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 19:25:47.390 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 19:25:47.390 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 19:25:47.390 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 19:25:47.390 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 19:25:47.390 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 19:25:50.544 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 19:25:50.546 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 19:25:50.546 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 19:25:50.546 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 19:25:50.546 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 19:25:50.547 -07:00 [DBG] Error Url: /home/error
2019-07-17 19:25:50.547 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 19:46:22.237 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 19:46:23.121 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 19:46:23.121 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 19:46:23.138 -07:00 [DBG] Start discovery request
2019-07-17 19:46:23.590 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 19:46:23.592 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 19:46:23.592 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 19:46:23.595 -07:00 [DBG] Start key discovery request
2019-07-17 19:46:23.869 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 19:46:23.875 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 19:46:23.875 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 19:46:23.883 -07:00 [DBG] Start token request.
2019-07-17 19:46:23.892 -07:00 [DBG] Start client validation
2019-07-17 19:46:23.898 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 19:46:23.903 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 19:46:24.020 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 19:46:24.020 -07:00 [DBG] Secret id found: client
2019-07-17 19:46:24.037 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 19:46:24.046 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 19:46:24.047 -07:00 [DBG] Client validation success
2019-07-17 19:46:24.079 -07:00 [DBG] Start token request validation
2019-07-17 19:46:24.135 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 19:46:26.658 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 19:47:24.467 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 19:47:24.467 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 19:47:24.467 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 19:47:24.467 -07:00 [DBG] Start discovery request
2019-07-17 19:47:24.515 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 19:47:24.516 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 19:47:24.516 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 19:47:24.516 -07:00 [DBG] Start key discovery request
2019-07-17 19:47:24.638 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 19:47:24.639 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 19:47:24.639 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 19:47:24.639 -07:00 [DBG] Start token request.
2019-07-17 19:47:24.639 -07:00 [DBG] Start client validation
2019-07-17 19:47:24.639 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 19:47:24.639 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 19:47:24.657 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 19:47:24.657 -07:00 [DBG] Secret id found: client
2019-07-17 19:47:24.659 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 19:47:24.659 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 19:47:24.659 -07:00 [DBG] Client validation success
2019-07-17 19:47:24.659 -07:00 [DBG] Start token request validation
2019-07-17 19:47:24.659 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 19:47:24.660 -07:00 [ERR] Requested scope not allowed: AuthorizationService
2019-07-17 19:47:24.661 -07:00 [ERR] {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"AuthorizationService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 19:48:09.762 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 19:48:09.763 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 19:48:09.763 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 19:48:09.763 -07:00 [DBG] Start discovery request
2019-07-17 19:48:09.818 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 19:48:09.819 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 19:48:09.819 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 19:48:09.819 -07:00 [DBG] Start key discovery request
2019-07-17 19:48:09.956 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 19:48:09.956 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 19:48:09.956 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 19:48:09.956 -07:00 [DBG] Start token request.
2019-07-17 19:48:09.956 -07:00 [DBG] Start client validation
2019-07-17 19:48:09.956 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 19:48:09.956 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 19:48:09.957 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 19:48:09.957 -07:00 [DBG] Secret id found: client
2019-07-17 19:48:09.957 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 19:48:09.957 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 19:48:09.957 -07:00 [DBG] Client validation success
2019-07-17 19:48:09.957 -07:00 [DBG] Start token request validation
2019-07-17 19:48:09.957 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 19:48:09.957 -07:00 [ERR] Requested scope not allowed: AuthorizationService
2019-07-17 19:48:09.957 -07:00 [ERR] {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":null,"AuthorizationCode":null,"RefreshToken":null,"UserName":null,"AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"AuthorizationService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 19:50:38.818 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 19:50:38.897 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 19:50:38.901 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 19:50:38.901 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 19:50:38.901 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 19:50:38.901 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 19:50:38.901 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 19:50:39.569 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 19:50:39.574 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 19:50:39.574 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 19:50:39.574 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 19:50:39.574 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 19:50:39.574 -07:00 [DBG] Error Url: /home/error
2019-07-17 19:50:39.574 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 19:50:39.611 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 19:50:40.277 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 19:50:40.278 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 19:50:40.291 -07:00 [DBG] Start discovery request
2019-07-17 19:50:56.687 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 19:50:56.688 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 19:50:56.689 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 19:50:56.689 -07:00 [DBG] Start discovery request
2019-07-17 19:50:56.797 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 19:50:56.798 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 19:50:56.798 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 19:50:56.806 -07:00 [DBG] Start key discovery request
2019-07-17 19:50:57.104 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 19:50:57.113 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 19:50:57.113 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 19:50:57.131 -07:00 [DBG] Start token request.
2019-07-17 19:50:57.142 -07:00 [DBG] Start client validation
2019-07-17 19:50:57.149 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 19:50:57.155 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 19:50:57.181 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 19:50:57.181 -07:00 [DBG] Secret id found: client
2019-07-17 19:50:57.203 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 19:50:57.221 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 19:50:57.221 -07:00 [DBG] Client validation success
2019-07-17 19:50:57.236 -07:00 [DBG] Start token request validation
2019-07-17 19:50:57.263 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 19:50:58.208 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-17 19:56:09.760 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-17 19:56:09.798 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-17 19:56:09.801 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-17 19:56:09.801 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-17 19:56:09.801 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-17 19:56:09.802 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-17 19:56:09.803 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-17 19:56:10.122 -07:00 [DBG] Login Url: /Account/Login
2019-07-17 19:56:10.123 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-17 19:56:10.123 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-17 19:56:10.123 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-17 19:56:10.123 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-17 19:56:10.123 -07:00 [DBG] Error Url: /home/error
2019-07-17 19:56:10.124 -07:00 [DBG] Error Id Parameter: errorId
2019-07-17 19:56:31.476 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-17 19:56:31.872 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-17 19:56:31.872 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-17 19:56:31.875 -07:00 [DBG] Start discovery request
2019-07-17 19:56:31.965 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-17 19:56:31.966 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-17 19:56:31.966 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-17 19:56:31.971 -07:00 [DBG] Start key discovery request
2019-07-17 19:56:32.105 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-17 19:56:32.115 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-17 19:56:32.115 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-17 19:56:32.123 -07:00 [DBG] Start token request.
2019-07-17 19:56:32.131 -07:00 [DBG] Start client validation
2019-07-17 19:56:32.137 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-17 19:56:32.140 -07:00 [DBG] Start parsing for secret in post body
2019-07-17 19:56:32.170 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-17 19:56:32.170 -07:00 [DBG] Secret id found: client
2019-07-17 19:56:32.181 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-17 19:56:32.189 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-17 19:56:32.189 -07:00 [DBG] Client validation success
2019-07-17 19:56:32.202 -07:00 [DBG] Start token request validation
2019-07-17 19:56:32.218 -07:00 [DBG] Start resource owner password token request validation
2019-07-17 19:56:33.200 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-18 14:25:18.645 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 14:25:18.806 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-18 14:25:18.808 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-18 14:25:18.808 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-18 14:25:18.808 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-18 14:25:18.808 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-18 14:25:18.808 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-18 14:25:19.544 -07:00 [DBG] Login Url: /Account/Login
2019-07-18 14:25:19.547 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 14:25:19.547 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-18 14:25:19.547 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-18 14:25:19.547 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 14:25:19.547 -07:00 [DBG] Error Url: /home/error
2019-07-18 14:25:19.547 -07:00 [DBG] Error Id Parameter: errorId
2019-07-18 14:27:21.845 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:27:22.394 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:27:22.394 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:27:22.414 -07:00 [DBG] Start discovery request
2019-07-18 14:27:22.772 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 14:27:22.773 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 14:27:22.773 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 14:27:22.777 -07:00 [DBG] Start key discovery request
2019-07-18 14:27:23.247 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 14:27:23.253 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 14:27:23.253 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 14:27:23.293 -07:00 [DBG] Start token request.
2019-07-18 14:27:23.298 -07:00 [DBG] Start client validation
2019-07-18 14:27:23.303 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 14:27:23.306 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 14:27:23.471 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 14:27:23.471 -07:00 [DBG] Secret id found: client
2019-07-18 14:27:23.485 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 14:27:23.511 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 14:27:23.511 -07:00 [DBG] Client validation success
2019-07-18 14:27:23.531 -07:00 [DBG] Start token request validation
2019-07-18 14:27:23.543 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 14:27:25.078 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-18 14:28:25.081 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 14:28:25.120 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-18 14:28:25.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-18 14:28:25.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-18 14:28:25.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-18 14:28:25.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-18 14:28:25.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-18 14:28:25.582 -07:00 [DBG] Login Url: /Account/Login
2019-07-18 14:28:25.584 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 14:28:25.584 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-18 14:28:25.584 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-18 14:28:25.584 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 14:28:25.584 -07:00 [DBG] Error Url: /home/error
2019-07-18 14:28:25.584 -07:00 [DBG] Error Id Parameter: errorId
2019-07-18 14:29:09.678 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:29:09.767 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:29:09.767 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:29:09.771 -07:00 [DBG] Start discovery request
2019-07-18 14:29:09.871 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 14:29:09.872 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 14:29:09.872 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 14:29:09.876 -07:00 [DBG] Start key discovery request
2019-07-18 14:29:10.004 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 14:29:10.010 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 14:29:10.010 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 14:29:10.018 -07:00 [DBG] Start token request.
2019-07-18 14:29:10.026 -07:00 [DBG] Start client validation
2019-07-18 14:29:10.031 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 14:29:10.034 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 14:29:10.051 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 14:29:10.051 -07:00 [DBG] Secret id found: client
2019-07-18 14:29:10.064 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 14:29:10.073 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 14:29:10.073 -07:00 [DBG] Client validation success
2019-07-18 14:29:10.083 -07:00 [DBG] Start token request validation
2019-07-18 14:29:10.095 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 14:29:10.524 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-18 14:30:36.170 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 14:30:36.173 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 14:30:36.174 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 14:30:36.179 -07:00 [DBG] Start discovery request
2019-07-18 14:30:36.237 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 14:30:36.237 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 14:30:36.237 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 14:30:36.237 -07:00 [DBG] Start key discovery request
2019-07-18 14:32:43.599 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 14:32:43.600 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 14:32:43.600 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 14:32:43.601 -07:00 [DBG] Start token request.
2019-07-18 14:32:43.601 -07:00 [DBG] Start client validation
2019-07-18 14:32:43.601 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 14:32:43.601 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 14:32:43.603 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 14:32:43.603 -07:00 [DBG] Secret id found: client
2019-07-18 14:32:43.603 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 14:32:43.604 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 14:32:43.604 -07:00 [DBG] Client validation success
2019-07-18 14:32:43.604 -07:00 [DBG] Start token request validation
2019-07-18 14:32:43.604 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 14:32:43.686 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-18 15:22:22.264 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 15:22:22.381 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-18 15:22:22.386 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-18 15:22:22.386 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-18 15:22:22.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-18 15:22:22.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-18 15:22:22.387 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-18 15:22:23.334 -07:00 [DBG] Login Url: /Account/Login
2019-07-18 15:22:23.336 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 15:22:23.336 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-18 15:22:23.336 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-18 15:22:23.337 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 15:22:23.337 -07:00 [DBG] Error Url: /home/error
2019-07-18 15:22:23.337 -07:00 [DBG] Error Id Parameter: errorId
2019-07-18 15:27:56.766 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 15:27:57.263 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 15:27:57.264 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 15:27:57.290 -07:00 [DBG] Start discovery request
2019-07-18 15:27:57.634 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 15:27:57.639 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 15:27:57.639 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 15:27:57.643 -07:00 [DBG] Start key discovery request
2019-07-18 15:28:00.717 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 15:28:00.732 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 15:28:00.732 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 15:28:00.781 -07:00 [DBG] Start token request.
2019-07-18 15:28:00.787 -07:00 [DBG] Start client validation
2019-07-18 15:28:00.791 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 15:28:00.795 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 15:28:00.975 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 15:28:00.975 -07:00 [DBG] Secret id found: client
2019-07-18 15:28:00.987 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 15:28:01.016 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 15:28:01.017 -07:00 [DBG] Client validation success
2019-07-18 15:28:01.037 -07:00 [DBG] Start token request validation
2019-07-18 15:28:01.048 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 15:36:58.260 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 15:36:58.291 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-18 15:36:58.293 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-18 15:36:58.293 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-18 15:36:58.293 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-18 15:36:58.293 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-18 15:36:58.293 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-18 15:36:58.667 -07:00 [DBG] Login Url: /Account/Login
2019-07-18 15:36:58.669 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 15:36:58.669 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-18 15:36:58.669 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-18 15:36:58.669 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 15:36:58.669 -07:00 [DBG] Error Url: /home/error
2019-07-18 15:36:58.669 -07:00 [DBG] Error Id Parameter: errorId
2019-07-18 15:36:58.691 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 15:36:58.741 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 15:36:58.741 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 15:36:58.744 -07:00 [DBG] Start discovery request
2019-07-18 15:36:58.833 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 15:36:58.836 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 15:36:58.836 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 15:36:58.840 -07:00 [DBG] Start key discovery request
2019-07-18 15:36:58.964 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 15:36:58.970 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 15:36:58.970 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 15:36:58.977 -07:00 [DBG] Start token request.
2019-07-18 15:36:58.982 -07:00 [DBG] Start client validation
2019-07-18 15:36:58.986 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 15:36:58.989 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 15:36:59.006 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 15:36:59.006 -07:00 [DBG] Secret id found: client
2019-07-18 15:36:59.020 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 15:36:59.027 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 15:36:59.027 -07:00 [DBG] Client validation success
2019-07-18 15:36:59.036 -07:00 [DBG] Start token request validation
2019-07-18 15:36:59.046 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 15:36:59.401 -07:00 [DBG] Resource owner password token request validation success.
2019-07-18 15:36:59.413 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-18 15:36:59.520 -07:00 [DBG] Getting claims for access token for client: client
2019-07-18 15:36:59.521 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-18 15:36:59.808 -07:00 [DBG] Token request success.
2019-07-18 16:17:31.798 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-18 16:17:31.969 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-18 16:17:31.972 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-18 16:17:31.972 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-18 16:17:31.972 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-18 16:17:31.972 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-18 16:17:31.972 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-18 16:17:32.939 -07:00 [DBG] Login Url: /Account/Login
2019-07-18 16:17:32.943 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-18 16:17:32.943 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-18 16:17:32.943 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-18 16:17:32.944 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-18 16:17:32.944 -07:00 [DBG] Error Url: /home/error
2019-07-18 16:17:32.944 -07:00 [DBG] Error Id Parameter: errorId
2019-07-18 16:18:29.517 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:18:29.993 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:18:29.993 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:18:29.999 -07:00 [DBG] Start discovery request
2019-07-18 16:18:30.211 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 16:18:30.212 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 16:18:30.212 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 16:18:30.217 -07:00 [DBG] Start key discovery request
2019-07-18 16:18:30.742 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 16:18:30.749 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 16:18:30.749 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 16:18:30.811 -07:00 [DBG] Start token request.
2019-07-18 16:18:30.818 -07:00 [DBG] Start client validation
2019-07-18 16:18:30.827 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 16:18:30.832 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 16:18:30.870 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 16:18:30.870 -07:00 [DBG] Secret id found: client
2019-07-18 16:18:30.891 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 16:18:30.904 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 16:18:30.904 -07:00 [DBG] Client validation success
2019-07-18 16:18:30.929 -07:00 [DBG] Start token request validation
2019-07-18 16:18:30.946 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 16:18:32.200 -07:00 [DBG] Resource owner password token request validation success.
2019-07-18 16:18:32.218 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-18 16:18:32.264 -07:00 [DBG] Getting claims for access token for client: client
2019-07-18 16:18:32.265 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-18 16:18:55.210 -07:00 [DBG] Token request success.
2019-07-18 16:20:12.886 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-18 16:20:12.887 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-18 16:20:12.887 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-18 16:20:12.887 -07:00 [DBG] Start discovery request
2019-07-18 16:20:12.985 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-18 16:20:12.985 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-18 16:20:12.985 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-18 16:20:12.985 -07:00 [DBG] Start key discovery request
2019-07-18 16:20:13.173 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-18 16:20:13.174 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-18 16:20:13.174 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-18 16:20:13.174 -07:00 [DBG] Start token request.
2019-07-18 16:20:13.175 -07:00 [DBG] Start client validation
2019-07-18 16:20:13.175 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-18 16:20:13.175 -07:00 [DBG] Start parsing for secret in post body
2019-07-18 16:20:13.176 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-18 16:20:13.176 -07:00 [DBG] Secret id found: client
2019-07-18 16:20:13.176 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-18 16:20:13.176 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-18 16:20:13.176 -07:00 [DBG] Client validation success
2019-07-18 16:20:13.177 -07:00 [DBG] Start token request validation
2019-07-18 16:20:13.177 -07:00 [DBG] Start resource owner password token request validation
2019-07-18 16:20:13.194 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:17:41.322 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 13:17:41.407 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 13:17:41.410 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 13:17:41.410 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 13:17:41.410 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 13:17:41.410 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 13:17:41.410 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 13:17:41.841 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 13:17:41.864 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 13:17:41.864 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 13:17:41.864 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 13:17:41.864 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 13:17:41.864 -07:00 [DBG] Error Url: /home/error
2019-07-19 13:17:41.864 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 13:20:43.198 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:20:43.307 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:20:43.307 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:20:43.310 -07:00 [DBG] Start discovery request
2019-07-19 13:20:43.705 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:20:43.706 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:20:43.706 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:20:43.713 -07:00 [DBG] Start key discovery request
2019-07-19 13:20:43.783 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:20:43.789 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:20:43.789 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:20:43.798 -07:00 [DBG] Start token request.
2019-07-19 13:20:43.803 -07:00 [DBG] Start client validation
2019-07-19 13:20:43.808 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:20:43.811 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:20:43.900 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:20:43.900 -07:00 [DBG] Secret id found: client
2019-07-19 13:20:43.911 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:20:43.938 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:20:43.939 -07:00 [DBG] Client validation success
2019-07-19 13:20:43.969 -07:00 [DBG] Start token request validation
2019-07-19 13:20:43.981 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:20:44.675 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 13:20:44.687 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"OKAreg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"OKAreg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:20:44.731 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 13:20:44.732 -07:00 [DBG] Getting claims for access token for subject: 2005
2019-07-19 13:20:44.907 -07:00 [DBG] Token request success.
2019-07-19 13:21:23.861 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:21:23.861 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:21:23.862 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:21:23.862 -07:00 [DBG] Start discovery request
2019-07-19 13:21:23.910 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:21:23.910 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:21:23.910 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:21:23.910 -07:00 [DBG] Start key discovery request
2019-07-19 13:21:24.022 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:21:24.023 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:21:24.023 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:21:24.023 -07:00 [DBG] Start token request.
2019-07-19 13:21:24.023 -07:00 [DBG] Start client validation
2019-07-19 13:21:24.023 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:21:24.023 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:21:24.024 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:21:24.024 -07:00 [DBG] Secret id found: client
2019-07-19 13:21:24.024 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:21:24.024 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:21:24.024 -07:00 [DBG] Client validation success
2019-07-19 13:21:24.025 -07:00 [DBG] Start token request validation
2019-07-19 13:21:24.025 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:21:24.080 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"OKAreg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"OKAreg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:21:33.026 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:21:33.026 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:21:33.026 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:21:33.026 -07:00 [DBG] Start discovery request
2019-07-19 13:21:33.029 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:21:33.029 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:21:33.029 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:21:33.029 -07:00 [DBG] Start key discovery request
2019-07-19 13:21:33.031 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:21:33.031 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:21:33.031 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:21:33.032 -07:00 [DBG] Start token request.
2019-07-19 13:21:33.032 -07:00 [DBG] Start client validation
2019-07-19 13:21:33.032 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:21:33.032 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:21:33.032 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:21:33.032 -07:00 [DBG] Secret id found: client
2019-07-19 13:21:33.032 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:21:33.032 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:21:33.032 -07:00 [DBG] Client validation success
2019-07-19 13:21:33.032 -07:00 [DBG] Start token request validation
2019-07-19 13:21:33.032 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:21:33.035 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 13:21:33.035 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"OKAreg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"OKAreg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:21:33.035 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 13:21:33.035 -07:00 [DBG] Getting claims for access token for subject: 2005
2019-07-19 13:21:33.040 -07:00 [DBG] Token request success.
2019-07-19 13:21:52.681 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:21:52.681 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:21:52.681 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:21:52.681 -07:00 [DBG] Start discovery request
2019-07-19 13:21:52.728 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:21:52.729 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:21:52.729 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:21:52.729 -07:00 [DBG] Start key discovery request
2019-07-19 13:21:52.841 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:21:52.841 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:21:52.841 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:21:52.841 -07:00 [DBG] Start token request.
2019-07-19 13:21:52.841 -07:00 [DBG] Start client validation
2019-07-19 13:21:52.841 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:21:52.841 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:21:52.842 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:21:52.842 -07:00 [DBG] Secret id found: client
2019-07-19 13:21:52.842 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:21:52.842 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:21:52.842 -07:00 [DBG] Client validation success
2019-07-19 13:21:52.842 -07:00 [DBG] Start token request validation
2019-07-19 13:21:52.842 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:24:50.458 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 13:24:50.495 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 13:24:50.498 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 13:24:50.498 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 13:24:50.498 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 13:24:50.498 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 13:24:50.498 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 13:24:50.776 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 13:24:50.778 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 13:24:50.778 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 13:24:50.778 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 13:24:50.778 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 13:24:50.778 -07:00 [DBG] Error Url: /home/error
2019-07-19 13:24:50.778 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 13:26:10.908 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:26:11.009 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:26:11.010 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:26:11.015 -07:00 [DBG] Start discovery request
2019-07-19 13:26:11.096 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:26:11.097 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:26:11.097 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:26:11.101 -07:00 [DBG] Start key discovery request
2019-07-19 13:26:11.236 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:26:11.242 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:26:11.242 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:26:11.248 -07:00 [DBG] Start token request.
2019-07-19 13:26:11.253 -07:00 [DBG] Start client validation
2019-07-19 13:26:11.258 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:26:11.262 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:26:11.294 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:26:11.295 -07:00 [DBG] Secret id found: client
2019-07-19 13:26:11.306 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:26:11.315 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:26:11.315 -07:00 [DBG] Client validation success
2019-07-19 13:26:11.324 -07:00 [DBG] Start token request validation
2019-07-19 13:26:11.334 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:26:33.622 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 13:26:33.682 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 13:26:33.685 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 13:26:33.686 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 13:26:33.686 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 13:26:33.686 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 13:26:33.686 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 13:26:34.049 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 13:26:34.052 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 13:26:34.052 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 13:26:34.053 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 13:26:34.053 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 13:26:34.053 -07:00 [DBG] Error Url: /home/error
2019-07-19 13:26:34.053 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 13:27:08.722 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:27:08.823 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:27:08.823 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:27:08.826 -07:00 [DBG] Start discovery request
2019-07-19 13:27:08.913 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:27:08.914 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:27:08.914 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:27:08.917 -07:00 [DBG] Start key discovery request
2019-07-19 13:27:09.045 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:27:09.053 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:27:09.053 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:27:09.063 -07:00 [DBG] Start token request.
2019-07-19 13:27:09.068 -07:00 [DBG] Start client validation
2019-07-19 13:27:09.075 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:27:09.079 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:27:09.094 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:27:09.094 -07:00 [DBG] Secret id found: client
2019-07-19 13:27:09.105 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:27:09.112 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:27:09.112 -07:00 [DBG] Client validation success
2019-07-19 13:27:09.121 -07:00 [DBG] Start token request validation
2019-07-19 13:27:09.131 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:27:09.511 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"սաֆ","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"սաֆ","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:27:41.639 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:27:41.640 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:27:41.640 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:27:41.640 -07:00 [DBG] Start discovery request
2019-07-19 13:27:41.651 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:27:41.651 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:27:41.651 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:27:41.651 -07:00 [DBG] Start key discovery request
2019-07-19 13:27:41.655 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:27:41.656 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:27:41.656 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:27:41.657 -07:00 [DBG] Start token request.
2019-07-19 13:27:41.657 -07:00 [DBG] Start client validation
2019-07-19 13:27:41.657 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:27:41.657 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:27:41.676 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:27:41.676 -07:00 [DBG] Secret id found: client
2019-07-19 13:27:41.676 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:27:41.676 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:27:41.676 -07:00 [DBG] Client validation success
2019-07-19 13:27:41.676 -07:00 [DBG] Start token request validation
2019-07-19 13:27:41.676 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:27:41.690 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"սաֆ","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"սաֆ","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:27:50.508 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 13:27:50.508 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 13:27:50.508 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 13:27:50.508 -07:00 [DBG] Start discovery request
2019-07-19 13:27:50.511 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 13:27:50.511 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 13:27:50.511 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 13:27:50.511 -07:00 [DBG] Start key discovery request
2019-07-19 13:27:50.514 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 13:27:50.514 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 13:27:50.514 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 13:27:50.514 -07:00 [DBG] Start token request.
2019-07-19 13:27:50.514 -07:00 [DBG] Start client validation
2019-07-19 13:27:50.514 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 13:27:50.514 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 13:27:50.514 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 13:27:50.514 -07:00 [DBG] Secret id found: client
2019-07-19 13:27:50.515 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 13:27:50.515 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 13:27:50.515 -07:00 [DBG] Client validation success
2019-07-19 13:27:50.515 -07:00 [DBG] Start token request validation
2019-07-19 13:27:50.515 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 13:27:50.566 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 13:27:50.567 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 13:27:50.585 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 13:27:50.585 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 13:27:50.679 -07:00 [DBG] Token request success.
2019-07-19 14:08:57.337 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 14:08:57.390 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 14:08:57.394 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 14:08:57.394 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 14:08:57.394 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 14:08:57.394 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 14:08:57.394 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 14:08:57.986 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 14:08:57.989 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 14:08:57.990 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 14:08:57.990 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 14:08:57.990 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 14:08:57.990 -07:00 [DBG] Error Url: /home/error
2019-07-19 14:08:57.990 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 14:12:41.432 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:12:41.850 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:12:41.850 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:12:41.858 -07:00 [DBG] Start discovery request
2019-07-19 14:12:42.141 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:12:42.142 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:12:42.142 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:12:42.151 -07:00 [DBG] Start key discovery request
2019-07-19 14:12:42.563 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:12:42.582 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:12:42.583 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:12:42.602 -07:00 [DBG] Start token request.
2019-07-19 14:12:42.617 -07:00 [DBG] Start client validation
2019-07-19 14:12:42.627 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:12:42.641 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:12:42.680 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:12:42.680 -07:00 [DBG] Secret id found: client
2019-07-19 14:12:42.707 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:12:42.724 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:12:42.724 -07:00 [DBG] Client validation success
2019-07-19 14:12:42.749 -07:00 [DBG] Start token request validation
2019-07-19 14:12:42.778 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:12:44.901 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 14:12:44.928 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:12:45.016 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 14:12:45.017 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 14:12:45.374 -07:00 [DBG] Token request success.
2019-07-19 14:15:01.295 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:15:01.296 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:15:01.296 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:15:01.296 -07:00 [DBG] Start discovery request
2019-07-19 14:15:01.372 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:15:01.373 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:15:01.373 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:15:01.373 -07:00 [DBG] Start key discovery request
2019-07-19 14:15:01.571 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:15:01.572 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:15:01.573 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:15:01.573 -07:00 [DBG] Start token request.
2019-07-19 14:15:01.573 -07:00 [DBG] Start client validation
2019-07-19 14:15:01.573 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:15:01.573 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:15:01.575 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:15:01.575 -07:00 [DBG] Secret id found: client
2019-07-19 14:15:01.575 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:15:01.576 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:15:01.576 -07:00 [DBG] Client validation success
2019-07-19 14:15:01.576 -07:00 [DBG] Start token request validation
2019-07-19 14:15:01.576 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:15:01.591 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Aren","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Aren","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:15:08.290 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:15:08.290 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:15:08.290 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:15:08.290 -07:00 [DBG] Start discovery request
2019-07-19 14:15:08.295 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:15:08.297 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:15:08.297 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:15:08.297 -07:00 [DBG] Start key discovery request
2019-07-19 14:15:08.301 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:15:08.301 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:15:08.301 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:15:08.301 -07:00 [DBG] Start token request.
2019-07-19 14:15:08.301 -07:00 [DBG] Start client validation
2019-07-19 14:15:08.301 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:15:08.301 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:15:08.302 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:15:08.302 -07:00 [DBG] Secret id found: client
2019-07-19 14:15:08.302 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:15:08.302 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:15:08.302 -07:00 [DBG] Client validation success
2019-07-19 14:15:08.302 -07:00 [DBG] Start token request validation
2019-07-19 14:15:08.303 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:15:08.309 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 14:15:08.310 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:15:08.310 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 14:15:08.310 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 14:15:08.318 -07:00 [DBG] Token request success.
2019-07-19 14:22:56.837 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:22:56.837 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:22:56.837 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:22:56.837 -07:00 [DBG] Start discovery request
2019-07-19 14:22:56.927 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:22:56.927 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:22:56.927 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:22:56.927 -07:00 [DBG] Start key discovery request
2019-07-19 14:22:57.120 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:22:57.121 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:22:57.121 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:22:57.121 -07:00 [DBG] Start token request.
2019-07-19 14:22:57.121 -07:00 [DBG] Start client validation
2019-07-19 14:22:57.121 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:22:57.121 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:22:57.122 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:22:57.122 -07:00 [DBG] Secret id found: client
2019-07-19 14:22:57.122 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:22:57.122 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:22:57.122 -07:00 [DBG] Client validation success
2019-07-19 14:22:57.123 -07:00 [DBG] Start token request validation
2019-07-19 14:22:57.123 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:22:57.138 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 14:22:57.139 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:22:57.139 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 14:22:57.139 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 14:22:57.145 -07:00 [DBG] Token request success.
2019-07-19 14:44:00.457 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 14:44:00.553 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 14:44:00.558 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 14:44:00.559 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 14:44:00.559 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 14:44:00.559 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 14:44:00.559 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 14:44:01.036 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 14:44:01.041 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 14:44:01.041 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 14:44:01.041 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 14:44:01.042 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 14:44:01.042 -07:00 [DBG] Error Url: /home/error
2019-07-19 14:44:01.042 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 14:45:05.147 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:45:05.349 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:45:05.349 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:45:05.355 -07:00 [DBG] Start discovery request
2019-07-19 14:45:05.511 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:45:05.512 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:45:05.512 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:45:05.518 -07:00 [DBG] Start key discovery request
2019-07-19 14:45:05.771 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:45:05.781 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:45:05.781 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:45:05.793 -07:00 [DBG] Start token request.
2019-07-19 14:45:05.804 -07:00 [DBG] Start client validation
2019-07-19 14:45:05.814 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:45:05.820 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:45:05.844 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:45:05.844 -07:00 [DBG] Secret id found: client
2019-07-19 14:45:05.872 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:45:05.889 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:45:05.889 -07:00 [DBG] Client validation success
2019-07-19 14:45:05.904 -07:00 [DBG] Start token request validation
2019-07-19 14:45:05.923 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:45:06.639 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 14:45:06.660 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:45:06.711 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 14:45:06.711 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 14:45:06.878 -07:00 [DBG] Token request success.
2019-07-19 14:45:57.479 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:45:57.480 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:45:57.480 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:45:57.480 -07:00 [DBG] Start discovery request
2019-07-19 14:45:57.570 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:45:57.570 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:45:57.570 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:45:57.571 -07:00 [DBG] Start key discovery request
2019-07-19 14:45:57.751 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:45:57.752 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:45:57.752 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:45:57.752 -07:00 [DBG] Start token request.
2019-07-19 14:45:57.752 -07:00 [DBG] Start client validation
2019-07-19 14:45:57.753 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:45:57.753 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:45:57.754 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:45:57.754 -07:00 [DBG] Secret id found: client
2019-07-19 14:45:57.754 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:45:57.754 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:45:57.754 -07:00 [DBG] Client validation success
2019-07-19 14:45:57.755 -07:00 [DBG] Start token request validation
2019-07-19 14:45:57.755 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:45:57.802 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 14:45:57.802 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:45:57.803 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 14:45:57.803 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 14:45:57.810 -07:00 [DBG] Token request success.
2019-07-19 14:49:48.089 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 14:49:48.089 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 14:49:48.089 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 14:49:48.089 -07:00 [DBG] Start discovery request
2019-07-19 14:49:48.145 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 14:49:48.146 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 14:49:48.146 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 14:49:48.146 -07:00 [DBG] Start key discovery request
2019-07-19 14:49:48.261 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 14:49:48.262 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 14:49:48.262 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 14:49:48.262 -07:00 [DBG] Start token request.
2019-07-19 14:49:48.262 -07:00 [DBG] Start client validation
2019-07-19 14:49:48.262 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 14:49:48.262 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 14:49:48.262 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 14:49:48.262 -07:00 [DBG] Secret id found: client
2019-07-19 14:49:48.262 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 14:49:48.262 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 14:49:48.262 -07:00 [DBG] Client validation success
2019-07-19 14:49:48.263 -07:00 [DBG] Start token request validation
2019-07-19 14:49:48.263 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 14:49:48.267 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 14:49:48.267 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 14:49:48.268 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 14:49:48.268 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 14:49:48.272 -07:00 [DBG] Token request success.
2019-07-19 15:44:15.272 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:44:15.284 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:44:15.285 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:44:15.285 -07:00 [DBG] Start discovery request
2019-07-19 15:44:15.539 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:44:15.539 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:44:15.539 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:44:15.539 -07:00 [DBG] Start key discovery request
2019-07-19 15:44:15.937 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 15:44:15.937 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 15:44:15.937 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 15:44:15.937 -07:00 [DBG] Start token request.
2019-07-19 15:44:15.937 -07:00 [DBG] Start client validation
2019-07-19 15:44:15.937 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 15:44:15.937 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 15:44:15.938 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 15:44:15.938 -07:00 [DBG] Secret id found: client
2019-07-19 15:44:15.938 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 15:44:15.938 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 15:44:15.938 -07:00 [DBG] Client validation success
2019-07-19 15:44:15.938 -07:00 [DBG] Start token request validation
2019-07-19 15:44:15.938 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 15:44:16.241 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 15:44:16.241 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 15:44:16.241 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 15:44:16.241 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 15:44:16.246 -07:00 [DBG] Token request success.
2019-07-19 15:45:37.799 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:45:37.805 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:45:37.805 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:45:37.805 -07:00 [DBG] Start discovery request
2019-07-19 15:45:37.872 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:45:37.872 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:45:37.872 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:45:37.872 -07:00 [DBG] Start key discovery request
2019-07-19 15:45:37.986 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 15:45:37.986 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 15:45:37.986 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 15:45:37.987 -07:00 [DBG] Start token request.
2019-07-19 15:45:37.987 -07:00 [DBG] Start client validation
2019-07-19 15:45:37.987 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 15:45:37.987 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 15:45:37.987 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 15:45:37.987 -07:00 [DBG] Secret id found: client
2019-07-19 15:45:37.987 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 15:45:37.987 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 15:45:37.988 -07:00 [DBG] Client validation success
2019-07-19 15:45:37.988 -07:00 [DBG] Start token request validation
2019-07-19 15:45:37.988 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 15:45:37.993 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 15:45:37.993 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 15:45:37.993 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 15:45:37.993 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 15:45:37.999 -07:00 [DBG] Token request success.
2019-07-19 15:49:28.358 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 15:49:28.390 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 15:49:28.393 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 15:49:28.393 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 15:49:28.393 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 15:49:28.393 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 15:49:28.393 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 15:49:28.628 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 15:49:28.630 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 15:49:28.630 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 15:49:28.630 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 15:49:28.630 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 15:49:28.630 -07:00 [DBG] Error Url: /home/error
2019-07-19 15:49:28.630 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 15:49:28.653 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:49:28.899 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:49:28.899 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:49:28.903 -07:00 [DBG] Start discovery request
2019-07-19 15:49:29.003 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:49:29.004 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:49:29.004 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:49:29.009 -07:00 [DBG] Start key discovery request
2019-07-19 15:49:29.139 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 15:49:29.147 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 15:49:29.147 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 15:49:29.157 -07:00 [DBG] Start token request.
2019-07-19 15:49:29.165 -07:00 [DBG] Start client validation
2019-07-19 15:49:29.170 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 15:49:29.174 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 15:49:29.187 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 15:49:29.188 -07:00 [DBG] Secret id found: client
2019-07-19 15:49:29.198 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 15:49:29.208 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 15:49:29.208 -07:00 [DBG] Client validation success
2019-07-19 15:49:29.220 -07:00 [DBG] Start token request validation
2019-07-19 15:49:29.234 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 15:49:30.182 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 15:49:30.195 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 15:49:30.234 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 15:49:30.235 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 15:49:30.355 -07:00 [DBG] Token request success.
2019-07-19 15:49:44.443 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:49:44.443 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:49:44.443 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:49:44.443 -07:00 [DBG] Start discovery request
2019-07-19 15:49:44.736 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:49:44.736 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:49:44.736 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:49:44.736 -07:00 [DBG] Start key discovery request
2019-07-19 15:54:25.833 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:54:25.833 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:54:25.833 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:54:25.833 -07:00 [DBG] Start discovery request
2019-07-19 15:54:25.919 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:54:25.919 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:54:25.919 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:54:25.919 -07:00 [DBG] Start key discovery request
2019-07-19 15:54:26.065 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 15:54:26.066 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 15:54:26.066 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 15:54:26.066 -07:00 [DBG] Start token request.
2019-07-19 15:54:26.066 -07:00 [DBG] Start client validation
2019-07-19 15:54:26.066 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 15:54:26.067 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 15:54:26.067 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 15:54:26.068 -07:00 [DBG] Secret id found: client
2019-07-19 15:54:26.068 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 15:54:26.068 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 15:54:26.068 -07:00 [DBG] Client validation success
2019-07-19 15:54:26.068 -07:00 [DBG] Start token request validation
2019-07-19 15:54:26.068 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 15:54:26.089 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 15:54:26.089 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 15:54:26.090 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 15:54:26.090 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 15:54:26.095 -07:00 [DBG] Token request success.
2019-07-19 15:56:23.348 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 15:56:23.349 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 15:56:23.349 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 15:56:23.349 -07:00 [DBG] Start discovery request
2019-07-19 15:56:23.398 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 15:56:23.398 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 15:56:23.398 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 15:56:23.398 -07:00 [DBG] Start key discovery request
2019-07-19 15:56:23.515 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 15:56:23.515 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 15:56:23.515 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 15:56:23.515 -07:00 [DBG] Start token request.
2019-07-19 15:56:23.515 -07:00 [DBG] Start client validation
2019-07-19 15:56:23.515 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 15:56:23.515 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 15:56:23.515 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 15:56:23.516 -07:00 [DBG] Secret id found: client
2019-07-19 15:56:23.516 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 15:56:23.516 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 15:56:23.516 -07:00 [DBG] Client validation success
2019-07-19 15:56:23.516 -07:00 [DBG] Start token request validation
2019-07-19 15:56:23.516 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 15:56:23.520 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 15:56:23.521 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 15:56:23.521 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 15:56:23.521 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 15:56:23.526 -07:00 [DBG] Token request success.
2019-07-19 16:13:11.812 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 16:13:11.842 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 16:13:11.844 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 16:13:11.844 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 16:13:11.844 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 16:13:11.844 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 16:13:11.844 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 16:13:12.116 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 16:13:12.118 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 16:13:12.118 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 16:13:12.118 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 16:13:12.118 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 16:13:12.118 -07:00 [DBG] Error Url: /home/error
2019-07-19 16:13:12.118 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 16:13:12.140 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:13:12.188 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:13:12.188 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:13:12.191 -07:00 [DBG] Start discovery request
2019-07-19 16:13:12.279 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 16:13:12.280 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 16:13:12.280 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 16:13:12.284 -07:00 [DBG] Start key discovery request
2019-07-19 16:13:12.407 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 16:13:12.412 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 16:13:12.412 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 16:13:12.418 -07:00 [DBG] Start token request.
2019-07-19 16:13:12.423 -07:00 [DBG] Start client validation
2019-07-19 16:13:12.428 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 16:13:12.432 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 16:13:12.445 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 16:13:12.445 -07:00 [DBG] Secret id found: client
2019-07-19 16:13:12.455 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 16:13:12.462 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 16:13:12.462 -07:00 [DBG] Client validation success
2019-07-19 16:13:12.472 -07:00 [DBG] Start token request validation
2019-07-19 16:13:12.481 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 16:13:12.761 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 16:13:12.772 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 16:13:12.801 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 16:13:12.802 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 16:13:12.869 -07:00 [DBG] Token request success.
2019-07-19 16:13:19.119 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:13:19.119 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:13:19.119 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:13:19.119 -07:00 [DBG] Start discovery request
2019-07-19 16:13:19.191 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 16:13:19.191 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 16:13:19.192 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 16:13:19.192 -07:00 [DBG] Start key discovery request
2019-07-19 16:14:23.326 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:14:23.326 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:14:23.326 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:14:23.326 -07:00 [DBG] Start discovery request
2019-07-19 16:14:23.378 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 16:14:23.378 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 16:14:23.379 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 16:14:23.379 -07:00 [DBG] Start key discovery request
2019-07-19 16:14:23.489 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 16:14:23.490 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 16:14:23.490 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 16:14:23.490 -07:00 [DBG] Start token request.
2019-07-19 16:14:23.490 -07:00 [DBG] Start client validation
2019-07-19 16:14:23.490 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 16:14:23.490 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 16:14:23.491 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 16:14:23.491 -07:00 [DBG] Secret id found: client
2019-07-19 16:14:23.491 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 16:14:23.491 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 16:14:23.491 -07:00 [DBG] Client validation success
2019-07-19 16:14:23.491 -07:00 [DBG] Start token request validation
2019-07-19 16:14:23.491 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 16:14:23.498 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 16:14:23.498 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 16:14:23.499 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 16:14:23.499 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 16:14:23.503 -07:00 [DBG] Token request success.
2019-07-19 16:15:11.751 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:15:11.751 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:15:11.752 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:15:11.752 -07:00 [DBG] Start discovery request
2019-07-19 16:15:11.820 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 16:15:11.820 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 16:15:11.820 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 16:15:11.820 -07:00 [DBG] Start key discovery request
2019-07-19 16:15:11.946 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 16:15:11.946 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 16:15:11.946 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 16:15:11.946 -07:00 [DBG] Start token request.
2019-07-19 16:15:11.946 -07:00 [DBG] Start client validation
2019-07-19 16:15:11.946 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 16:15:11.947 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 16:15:11.947 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 16:15:11.947 -07:00 [DBG] Secret id found: client
2019-07-19 16:15:11.947 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 16:15:11.947 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 16:15:11.947 -07:00 [DBG] Client validation success
2019-07-19 16:15:11.947 -07:00 [DBG] Start token request validation
2019-07-19 16:15:11.947 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 16:15:11.951 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 16:15:11.951 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 16:15:11.951 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 16:15:11.951 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 16:15:11.955 -07:00 [DBG] Token request success.
2019-07-19 16:20:04.255 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 16:20:04.255 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 16:20:04.255 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 16:20:04.256 -07:00 [DBG] Start discovery request
2019-07-19 16:20:04.323 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 16:20:04.323 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 16:20:04.324 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 16:20:04.324 -07:00 [DBG] Start key discovery request
2019-07-19 16:20:04.470 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 16:20:04.470 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 16:20:04.470 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 16:20:04.470 -07:00 [DBG] Start token request.
2019-07-19 16:20:04.470 -07:00 [DBG] Start client validation
2019-07-19 16:20:04.470 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 16:20:04.471 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 16:20:04.471 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 16:20:04.471 -07:00 [DBG] Secret id found: client
2019-07-19 16:20:04.471 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 16:20:04.471 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 16:20:04.471 -07:00 [DBG] Client validation success
2019-07-19 16:20:04.471 -07:00 [DBG] Start token request validation
2019-07-19 16:20:04.471 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 16:20:04.527 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 16:20:04.527 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 16:20:04.527 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 16:20:04.527 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 16:20:04.531 -07:00 [DBG] Token request success.
2019-07-19 17:39:54.707 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 17:39:54.815 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 17:39:54.816 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 17:39:54.816 -07:00 [DBG] Start discovery request
2019-07-19 17:39:55.247 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 17:39:55.248 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 17:39:55.248 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 17:39:55.249 -07:00 [DBG] Start key discovery request
2019-07-19 17:39:55.975 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 17:39:55.976 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 17:39:55.976 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 17:39:55.976 -07:00 [DBG] Start token request.
2019-07-19 17:39:55.976 -07:00 [DBG] Start client validation
2019-07-19 17:39:55.977 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 17:39:55.977 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 17:39:56.017 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 17:39:56.017 -07:00 [DBG] Secret id found: client
2019-07-19 17:39:56.017 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 17:39:56.018 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 17:39:56.018 -07:00 [DBG] Client validation success
2019-07-19 17:39:56.034 -07:00 [DBG] Start token request validation
2019-07-19 17:39:56.035 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 17:39:56.958 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 17:39:56.970 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 17:39:56.970 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 17:39:56.970 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-19 17:39:56.999 -07:00 [DBG] Token request success.
2019-07-19 17:40:09.929 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 17:40:09.930 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 17:40:09.930 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 17:40:09.930 -07:00 [DBG] Start discovery request
2019-07-19 17:40:10.468 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 17:40:10.469 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 17:40:10.469 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 17:40:10.469 -07:00 [DBG] Start key discovery request
2019-07-19 17:40:14.534 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 17:40:14.534 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 17:40:14.535 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 17:40:14.535 -07:00 [DBG] Start discovery request
2019-07-19 17:40:14.655 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 17:40:14.656 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 17:40:14.656 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 17:40:14.656 -07:00 [DBG] Start key discovery request
2019-07-19 17:40:14.917 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 17:40:14.918 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 17:40:14.918 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 17:40:14.918 -07:00 [DBG] Start token request.
2019-07-19 17:40:14.918 -07:00 [DBG] Start client validation
2019-07-19 17:40:14.919 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 17:40:14.953 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 17:40:14.960 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 17:40:14.960 -07:00 [DBG] Secret id found: client
2019-07-19 17:40:14.960 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 17:40:14.961 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 17:40:14.961 -07:00 [DBG] Client validation success
2019-07-19 17:40:14.961 -07:00 [DBG] Start token request validation
2019-07-19 17:40:14.961 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 17:40:14.971 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 17:40:14.971 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 17:40:14.971 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 17:40:14.971 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 17:40:14.980 -07:00 [DBG] Token request success.
2019-07-19 17:53:36.743 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 17:53:36.830 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 17:53:36.833 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 17:53:36.834 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 17:53:36.834 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 17:53:36.834 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 17:53:36.834 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 17:53:37.109 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 17:53:37.113 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 17:53:37.113 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 17:53:37.113 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 17:53:37.113 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 17:53:37.113 -07:00 [DBG] Error Url: /home/error
2019-07-19 17:53:37.113 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 17:54:08.392 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 17:54:09.232 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 17:54:09.232 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 17:54:09.240 -07:00 [DBG] Start discovery request
2019-07-19 17:54:09.462 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 17:54:09.463 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 17:54:09.463 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 17:54:09.472 -07:00 [DBG] Start key discovery request
2019-07-19 17:54:09.715 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 17:54:09.729 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 17:54:09.729 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 17:54:09.747 -07:00 [DBG] Start token request.
2019-07-19 17:54:09.757 -07:00 [DBG] Start client validation
2019-07-19 17:54:09.770 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 17:54:09.778 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 17:54:09.847 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 17:54:09.847 -07:00 [DBG] Secret id found: client
2019-07-19 17:54:09.876 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 17:54:09.892 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 17:54:09.892 -07:00 [DBG] Client validation success
2019-07-19 17:54:09.909 -07:00 [DBG] Start token request validation
2019-07-19 17:54:09.929 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 17:54:11.444 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 17:54:11.467 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 17:54:11.552 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 17:54:11.553 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 17:54:11.772 -07:00 [DBG] Token request success.
2019-07-19 17:54:12.706 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 17:54:12.707 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 17:54:12.707 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 17:54:12.707 -07:00 [DBG] Start discovery request
2019-07-19 17:54:12.915 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 17:54:12.916 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 17:54:12.916 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 17:54:12.916 -07:00 [DBG] Start key discovery request
2019-07-19 17:55:30.970 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 17:55:30.971 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 17:55:30.972 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 17:55:30.972 -07:00 [DBG] Start discovery request
2019-07-19 17:55:31.123 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 17:55:31.123 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 17:55:31.124 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 17:55:31.124 -07:00 [DBG] Start key discovery request
2019-07-19 18:03:44.278 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 18:03:44.278 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 18:03:44.279 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 18:03:44.279 -07:00 [DBG] Start discovery request
2019-07-19 18:03:44.380 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 18:03:44.380 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 18:03:44.381 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 18:03:44.381 -07:00 [DBG] Start key discovery request
2019-07-19 18:03:44.583 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 18:03:44.584 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 18:03:44.584 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 18:03:44.584 -07:00 [DBG] Start token request.
2019-07-19 18:03:44.584 -07:00 [DBG] Start client validation
2019-07-19 18:03:44.585 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 18:03:44.585 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 18:03:44.586 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 18:03:44.586 -07:00 [DBG] Secret id found: client
2019-07-19 18:03:44.586 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 18:03:44.587 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 18:03:44.587 -07:00 [DBG] Client validation success
2019-07-19 18:03:44.587 -07:00 [DBG] Start token request validation
2019-07-19 18:03:44.587 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 18:03:44.607 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 18:03:44.610 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 18:03:44.611 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 18:03:44.611 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 18:03:44.618 -07:00 [DBG] Token request success.
2019-07-19 18:04:35.319 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 18:04:35.320 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 18:04:35.320 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 18:04:35.320 -07:00 [DBG] Start discovery request
2019-07-19 18:04:35.434 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 18:04:35.435 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 18:04:35.435 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 18:04:35.435 -07:00 [DBG] Start key discovery request
2019-07-19 18:04:35.677 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 18:04:35.678 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 18:04:35.678 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 18:04:35.678 -07:00 [DBG] Start token request.
2019-07-19 18:04:35.679 -07:00 [DBG] Start client validation
2019-07-19 18:04:35.679 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 18:04:35.679 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 18:04:35.725 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 18:04:35.725 -07:00 [DBG] Secret id found: client
2019-07-19 18:04:35.728 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 18:04:35.729 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 18:04:35.729 -07:00 [DBG] Client validation success
2019-07-19 18:04:35.729 -07:00 [DBG] Start token request validation
2019-07-19 18:04:35.729 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 18:04:35.736 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 18:04:35.737 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 18:04:35.737 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 18:04:35.737 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-19 18:04:35.744 -07:00 [DBG] Token request success.
2019-07-19 19:19:58.331 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 19:19:58.331 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 19:19:58.331 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 19:19:58.331 -07:00 [DBG] Start discovery request
2019-07-19 19:19:58.465 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 19:19:58.465 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 19:19:58.465 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 19:19:58.465 -07:00 [DBG] Start key discovery request
2019-07-19 19:19:58.712 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 19:19:58.712 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 19:19:58.712 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 19:19:58.712 -07:00 [DBG] Start token request.
2019-07-19 19:19:58.712 -07:00 [DBG] Start client validation
2019-07-19 19:19:58.713 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 19:19:58.713 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 19:19:58.713 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 19:19:58.713 -07:00 [DBG] Secret id found: client
2019-07-19 19:19:58.713 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 19:19:58.714 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 19:19:58.714 -07:00 [DBG] Client validation success
2019-07-19 19:19:58.714 -07:00 [DBG] Start token request validation
2019-07-19 19:19:58.714 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 19:19:58.759 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 19:19:58.759 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 19:19:58.759 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 19:19:58.759 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-19 19:19:58.768 -07:00 [DBG] Token request success.
2019-07-19 19:26:59.543 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 19:26:59.544 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 19:26:59.544 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 19:26:59.544 -07:00 [DBG] Start discovery request
2019-07-19 19:26:59.678 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 19:26:59.678 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 19:26:59.678 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 19:26:59.678 -07:00 [DBG] Start key discovery request
2019-07-19 19:26:59.890 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 19:26:59.891 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 19:26:59.891 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 19:26:59.891 -07:00 [DBG] Start token request.
2019-07-19 19:26:59.891 -07:00 [DBG] Start client validation
2019-07-19 19:26:59.891 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 19:26:59.891 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 19:26:59.904 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 19:26:59.904 -07:00 [DBG] Secret id found: client
2019-07-19 19:26:59.905 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 19:26:59.905 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 19:26:59.905 -07:00 [DBG] Client validation success
2019-07-19 19:26:59.905 -07:00 [DBG] Start token request validation
2019-07-19 19:26:59.905 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 19:26:59.921 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 19:26:59.921 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 19:26:59.921 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 19:26:59.921 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-19 19:31:47.130 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-19 19:31:47.239 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-19 19:31:47.244 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-19 19:31:47.244 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-19 19:31:47.244 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-19 19:31:47.244 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-19 19:31:47.244 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-19 19:31:47.625 -07:00 [DBG] Login Url: /Account/Login
2019-07-19 19:31:47.628 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-19 19:31:47.628 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-19 19:31:47.629 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-19 19:31:47.629 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-19 19:31:47.629 -07:00 [DBG] Error Url: /home/error
2019-07-19 19:31:47.629 -07:00 [DBG] Error Id Parameter: errorId
2019-07-19 19:32:28.045 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 19:32:28.333 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 19:32:28.334 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 19:32:28.340 -07:00 [DBG] Start discovery request
2019-07-19 19:32:28.520 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 19:32:28.521 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 19:32:28.521 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 19:32:28.526 -07:00 [DBG] Start key discovery request
2019-07-19 19:32:28.727 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 19:32:28.736 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 19:32:28.736 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 19:32:28.748 -07:00 [DBG] Start token request.
2019-07-19 19:32:28.757 -07:00 [DBG] Start client validation
2019-07-19 19:32:28.766 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 19:32:28.774 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 19:32:28.799 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 19:32:28.799 -07:00 [DBG] Secret id found: client
2019-07-19 19:32:28.825 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 19:32:28.838 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 19:32:28.838 -07:00 [DBG] Client validation success
2019-07-19 19:32:28.852 -07:00 [DBG] Start token request validation
2019-07-19 19:32:28.866 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 19:32:29.977 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 19:32:29.996 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 19:32:30.052 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 19:32:30.053 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-19 19:32:30.183 -07:00 [DBG] Token request success.
2019-07-19 20:19:05.167 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-19 20:19:06.314 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-19 20:19:06.314 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-19 20:19:06.315 -07:00 [DBG] Start discovery request
2019-07-19 20:19:08.570 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-19 20:19:08.571 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-19 20:19:08.571 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-19 20:19:08.631 -07:00 [DBG] Start key discovery request
2019-07-19 20:19:09.558 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-19 20:19:09.600 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-19 20:19:09.600 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-19 20:19:09.601 -07:00 [DBG] Start token request.
2019-07-19 20:19:09.601 -07:00 [DBG] Start client validation
2019-07-19 20:19:09.778 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-19 20:19:09.778 -07:00 [DBG] Start parsing for secret in post body
2019-07-19 20:19:10.310 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-19 20:19:10.311 -07:00 [DBG] Secret id found: client
2019-07-19 20:19:10.311 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-19 20:19:10.311 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-19 20:19:10.312 -07:00 [DBG] Client validation success
2019-07-19 20:19:10.312 -07:00 [DBG] Start token request validation
2019-07-19 20:19:10.312 -07:00 [DBG] Start resource owner password token request validation
2019-07-19 20:19:12.180 -07:00 [DBG] Resource owner password token request validation success.
2019-07-19 20:19:12.181 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-19 20:19:12.181 -07:00 [DBG] Getting claims for access token for client: client
2019-07-19 20:19:12.182 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-19 20:19:12.349 -07:00 [DBG] Token request success.
2019-07-20 14:12:39.522 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 14:12:39.736 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-20 14:12:39.742 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-20 14:12:39.742 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-20 14:12:39.742 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-20 14:12:39.742 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-20 14:12:39.742 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-20 14:12:40.964 -07:00 [DBG] Login Url: /Account/Login
2019-07-20 14:12:40.968 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 14:12:40.968 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-20 14:12:40.968 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-20 14:12:40.968 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 14:12:40.968 -07:00 [DBG] Error Url: /home/error
2019-07-20 14:12:40.968 -07:00 [DBG] Error Id Parameter: errorId
2019-07-20 15:59:33.383 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-20 15:59:33.447 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-20 15:59:33.451 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-20 15:59:33.451 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-20 15:59:33.451 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-20 15:59:33.451 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-20 15:59:33.451 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-20 15:59:34.101 -07:00 [DBG] Login Url: /Account/Login
2019-07-20 15:59:34.104 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-20 15:59:34.104 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-20 15:59:34.104 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-20 15:59:34.104 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-20 15:59:34.104 -07:00 [DBG] Error Url: /home/error
2019-07-20 15:59:34.104 -07:00 [DBG] Error Id Parameter: errorId
2019-07-20 16:01:57.440 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 16:01:58.560 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 16:01:58.560 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 16:01:58.578 -07:00 [DBG] Start discovery request
2019-07-20 16:01:58.972 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 16:01:58.974 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 16:01:58.974 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 16:01:58.978 -07:00 [DBG] Start key discovery request
2019-07-20 16:01:59.258 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-20 16:01:59.268 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-20 16:01:59.268 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-20 16:01:59.281 -07:00 [DBG] Start token request.
2019-07-20 16:01:59.295 -07:00 [DBG] Start client validation
2019-07-20 16:01:59.305 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-20 16:01:59.313 -07:00 [DBG] Start parsing for secret in post body
2019-07-20 16:01:59.604 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-20 16:01:59.605 -07:00 [DBG] Secret id found: client
2019-07-20 16:01:59.622 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-20 16:01:59.652 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-20 16:01:59.652 -07:00 [DBG] Client validation success
2019-07-20 16:01:59.682 -07:00 [DBG] Start token request validation
2019-07-20 16:01:59.693 -07:00 [DBG] Start resource owner password token request validation
2019-07-20 16:02:01.537 -07:00 [DBG] Resource owner password token request validation success.
2019-07-20 16:02:01.551 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-20 16:02:01.605 -07:00 [DBG] Getting claims for access token for client: client
2019-07-20 16:02:01.606 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-20 16:02:01.887 -07:00 [DBG] Token request success.
2019-07-20 16:02:16.851 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 16:02:16.852 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 16:02:16.852 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 16:02:16.853 -07:00 [DBG] Start discovery request
2019-07-20 16:02:17.227 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 16:02:17.228 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 16:02:17.228 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 16:02:17.228 -07:00 [DBG] Start key discovery request
2019-07-20 16:02:37.927 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-20 16:02:37.927 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-20 16:02:37.927 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-20 16:02:37.927 -07:00 [DBG] Start discovery request
2019-07-20 16:02:38.097 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-20 16:02:38.098 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-20 16:02:38.098 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-20 16:02:38.098 -07:00 [DBG] Start key discovery request
2019-07-21 16:38:35.081 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 16:38:35.248 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 16:38:35.256 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 16:38:35.256 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 16:38:35.257 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 16:38:35.257 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 16:38:35.257 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 16:38:37.330 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 16:38:37.337 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 16:38:37.337 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 16:38:37.337 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 16:38:37.337 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 16:38:37.337 -07:00 [DBG] Error Url: /home/error
2019-07-21 16:38:37.338 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 17:04:11.783 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 17:04:11.866 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 17:04:11.874 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 17:04:11.874 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 17:04:11.874 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 17:04:11.874 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 17:04:11.874 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 17:04:12.468 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 17:04:12.471 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 17:04:12.472 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 17:04:12.472 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 17:04:12.472 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 17:04:12.472 -07:00 [DBG] Error Url: /home/error
2019-07-21 17:04:12.473 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 17:12:25.785 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 17:12:25.844 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 17:12:25.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 17:12:25.848 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 17:12:25.849 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 17:12:25.849 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 17:12:25.849 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 17:12:26.326 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 17:12:26.329 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 17:12:26.330 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 17:12:26.330 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 17:12:26.330 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 17:12:26.330 -07:00 [DBG] Error Url: /home/error
2019-07-21 17:12:26.330 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 17:13:09.990 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:13:10.770 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:13:10.771 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:13:10.802 -07:00 [DBG] Start discovery request
2019-07-21 17:13:11.184 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:13:11.185 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:13:11.186 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:13:11.191 -07:00 [DBG] Start key discovery request
2019-07-21 17:13:11.571 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:13:11.580 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:13:11.580 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:13:11.595 -07:00 [DBG] Start token request.
2019-07-21 17:13:11.604 -07:00 [DBG] Start client validation
2019-07-21 17:13:11.616 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:13:11.624 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:13:11.781 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:13:11.782 -07:00 [DBG] Secret id found: client
2019-07-21 17:13:11.800 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:13:11.823 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:13:11.823 -07:00 [DBG] Client validation success
2019-07-21 17:13:11.859 -07:00 [DBG] Start token request validation
2019-07-21 17:13:11.875 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:13:43.404 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:13:43.434 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:13:43.589 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:13:43.590 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:13:44.774 -07:00 [DBG] Token request success.
2019-07-21 17:13:57.216 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:13:57.216 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:13:57.216 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:13:57.217 -07:00 [DBG] Start discovery request
2019-07-21 17:13:57.816 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:13:57.817 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:13:57.817 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:13:57.817 -07:00 [DBG] Start key discovery request
2019-07-21 17:20:47.455 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:20:47.455 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:20:47.455 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:20:47.455 -07:00 [DBG] Start discovery request
2019-07-21 17:20:47.561 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:20:47.562 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:20:47.562 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:20:47.562 -07:00 [DBG] Start key discovery request
2019-07-21 17:20:47.790 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:20:47.791 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:20:47.791 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:20:47.791 -07:00 [DBG] Start token request.
2019-07-21 17:20:47.791 -07:00 [DBG] Start client validation
2019-07-21 17:20:47.792 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:20:47.792 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:20:47.793 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:20:47.793 -07:00 [DBG] Secret id found: client
2019-07-21 17:20:47.793 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:20:47.793 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:20:47.793 -07:00 [DBG] Client validation success
2019-07-21 17:20:47.794 -07:00 [DBG] Start token request validation
2019-07-21 17:20:47.794 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:20:48.571 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:20:48.572 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:20:48.572 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:20:48.572 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:20:48.581 -07:00 [DBG] Token request success.
2019-07-21 17:22:25.164 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:22:25.176 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:22:25.176 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:22:25.176 -07:00 [DBG] Start discovery request
2019-07-21 17:22:25.267 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:22:25.267 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:22:25.267 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:22:25.267 -07:00 [DBG] Start key discovery request
2019-07-21 17:22:25.491 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:22:25.491 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:22:25.492 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:22:25.492 -07:00 [DBG] Start token request.
2019-07-21 17:22:25.492 -07:00 [DBG] Start client validation
2019-07-21 17:22:25.492 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:22:25.492 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:22:25.493 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:22:25.494 -07:00 [DBG] Secret id found: client
2019-07-21 17:22:25.494 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:22:25.494 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:22:25.494 -07:00 [DBG] Client validation success
2019-07-21 17:22:25.495 -07:00 [DBG] Start token request validation
2019-07-21 17:22:25.495 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:22:25.501 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:22:25.501 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:22:25.502 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:22:25.502 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:22:25.512 -07:00 [DBG] Token request success.
2019-07-21 17:24:49.084 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 17:24:49.284 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 17:24:49.291 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 17:24:49.291 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 17:24:49.291 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 17:24:49.291 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 17:24:49.292 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 17:24:49.939 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 17:24:49.942 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 17:24:49.942 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 17:24:49.942 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 17:24:49.942 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 17:24:49.942 -07:00 [DBG] Error Url: /home/error
2019-07-21 17:24:49.942 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 17:25:27.084 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:25:27.281 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:25:27.281 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:25:27.288 -07:00 [DBG] Start discovery request
2019-07-21 17:25:27.479 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:25:27.481 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:25:27.481 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:25:27.486 -07:00 [DBG] Start key discovery request
2019-07-21 17:25:27.730 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:25:27.741 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:25:27.742 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:25:27.754 -07:00 [DBG] Start token request.
2019-07-21 17:25:27.764 -07:00 [DBG] Start client validation
2019-07-21 17:25:27.771 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:25:27.778 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:25:27.811 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:25:27.811 -07:00 [DBG] Secret id found: client
2019-07-21 17:25:27.835 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:25:27.855 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:25:27.855 -07:00 [DBG] Client validation success
2019-07-21 17:25:27.871 -07:00 [DBG] Start token request validation
2019-07-21 17:25:27.888 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:25:32.765 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:25:32.793 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:25:32.846 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:25:32.847 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:25:33.026 -07:00 [DBG] Token request success.
2019-07-21 17:25:33.887 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:25:33.888 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:25:33.888 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:25:33.888 -07:00 [DBG] Start discovery request
2019-07-21 17:25:34.105 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:25:34.105 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:25:34.105 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:25:34.105 -07:00 [DBG] Start key discovery request
2019-07-21 17:26:24.621 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:26:24.622 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:26:24.622 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:26:24.623 -07:00 [DBG] Start discovery request
2019-07-21 17:26:24.726 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:26:24.726 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:26:24.726 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:26:24.727 -07:00 [DBG] Start key discovery request
2019-07-21 17:26:24.939 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:26:24.941 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:26:24.941 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:26:24.941 -07:00 [DBG] Start token request.
2019-07-21 17:26:24.941 -07:00 [DBG] Start client validation
2019-07-21 17:26:24.941 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:26:24.942 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:26:24.943 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:26:24.943 -07:00 [DBG] Secret id found: client
2019-07-21 17:26:24.943 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:26:24.943 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:26:24.943 -07:00 [DBG] Client validation success
2019-07-21 17:26:24.944 -07:00 [DBG] Start token request validation
2019-07-21 17:26:24.944 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:26:25.013 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:26:25.014 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:26:25.014 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:26:25.014 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:26:25.025 -07:00 [DBG] Token request success.
2019-07-21 17:28:53.109 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:28:53.109 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:28:53.109 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:28:53.109 -07:00 [DBG] Start discovery request
2019-07-21 17:28:53.207 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:28:53.207 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:28:53.208 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:28:53.208 -07:00 [DBG] Start key discovery request
2019-07-21 17:28:53.447 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:28:53.447 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:28:53.447 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:28:53.448 -07:00 [DBG] Start token request.
2019-07-21 17:28:53.448 -07:00 [DBG] Start client validation
2019-07-21 17:28:53.448 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:28:53.448 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:28:53.515 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:28:53.515 -07:00 [DBG] Secret id found: client
2019-07-21 17:28:53.519 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:28:53.519 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:28:53.519 -07:00 [DBG] Client validation success
2019-07-21 17:28:53.520 -07:00 [DBG] Start token request validation
2019-07-21 17:28:53.520 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:28:53.528 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:28:53.529 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:28:53.529 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:28:53.529 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:28:53.536 -07:00 [DBG] Token request success.
2019-07-21 17:32:31.886 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 17:32:31.954 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 17:32:31.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 17:32:31.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 17:32:31.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 17:32:31.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 17:32:31.958 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 17:32:32.475 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 17:32:32.477 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 17:32:32.478 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 17:32:32.478 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 17:32:32.478 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 17:32:32.478 -07:00 [DBG] Error Url: /home/error
2019-07-21 17:32:32.478 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 17:33:45.174 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:33:45.360 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:33:45.361 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:33:45.370 -07:00 [DBG] Start discovery request
2019-07-21 17:33:45.546 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:33:45.547 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:33:45.547 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:33:45.555 -07:00 [DBG] Start key discovery request
2019-07-21 17:33:45.834 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:33:45.845 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:33:45.845 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:33:45.859 -07:00 [DBG] Start token request.
2019-07-21 17:33:45.869 -07:00 [DBG] Start client validation
2019-07-21 17:33:45.879 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:33:45.884 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:33:45.910 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:33:45.910 -07:00 [DBG] Secret id found: client
2019-07-21 17:33:45.928 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:33:45.940 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:33:45.941 -07:00 [DBG] Client validation success
2019-07-21 17:33:45.956 -07:00 [DBG] Start token request validation
2019-07-21 17:33:45.980 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:33:50.604 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:33:50.628 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"TIgran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"TIgran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:33:50.682 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:33:50.683 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:33:50.882 -07:00 [DBG] Token request success.
2019-07-21 17:33:51.835 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:33:51.836 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:33:51.836 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:33:51.836 -07:00 [DBG] Start discovery request
2019-07-21 17:33:52.108 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:33:52.108 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:33:52.108 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:33:52.109 -07:00 [DBG] Start key discovery request
2019-07-21 17:33:59.302 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:33:59.302 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:33:59.303 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:33:59.303 -07:00 [DBG] Start discovery request
2019-07-21 17:33:59.485 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:33:59.486 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:33:59.486 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:33:59.486 -07:00 [DBG] Start key discovery request
2019-07-21 17:35:27.686 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:35:27.687 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:35:27.687 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:35:27.687 -07:00 [DBG] Start discovery request
2019-07-21 17:35:27.782 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:35:27.782 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:35:27.782 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:35:27.782 -07:00 [DBG] Start key discovery request
2019-07-21 17:35:28.005 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:35:28.006 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:35:28.006 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:35:28.007 -07:00 [DBG] Start token request.
2019-07-21 17:35:28.007 -07:00 [DBG] Start client validation
2019-07-21 17:35:28.007 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:35:28.007 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:35:28.008 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:35:28.009 -07:00 [DBG] Secret id found: client
2019-07-21 17:35:28.009 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:35:28.009 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:35:28.009 -07:00 [DBG] Client validation success
2019-07-21 17:35:28.009 -07:00 [DBG] Start token request validation
2019-07-21 17:35:28.010 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:35:28.030 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:35:28.031 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:35:28.031 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:35:28.031 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:35:28.041 -07:00 [DBG] Token request success.
2019-07-21 17:54:39.551 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 17:54:39.613 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 17:54:39.616 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 17:54:39.616 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 17:54:39.616 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 17:54:39.616 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 17:54:39.616 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 17:54:41.597 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 17:54:41.600 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 17:54:41.600 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 17:54:41.600 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 17:54:41.600 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 17:54:41.600 -07:00 [DBG] Error Url: /home/error
2019-07-21 17:54:41.600 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 17:56:21.580 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:56:22.054 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:56:22.055 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:56:22.079 -07:00 [DBG] Start discovery request
2019-07-21 17:56:22.265 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:56:22.266 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:56:22.266 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:56:22.269 -07:00 [DBG] Start key discovery request
2019-07-21 17:56:22.488 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:56:22.495 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:56:22.495 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:56:22.503 -07:00 [DBG] Start token request.
2019-07-21 17:56:22.511 -07:00 [DBG] Start client validation
2019-07-21 17:56:22.516 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:56:22.519 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:56:22.537 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:56:22.537 -07:00 [DBG] Secret id found: client
2019-07-21 17:56:22.548 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:56:22.559 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:56:22.559 -07:00 [DBG] Client validation success
2019-07-21 17:56:22.568 -07:00 [DBG] Start token request validation
2019-07-21 17:56:22.584 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:56:23.458 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:56:23.470 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:56:23.501 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:56:23.502 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:56:23.704 -07:00 [DBG] Token request success.
2019-07-21 17:56:26.288 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:56:26.289 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:56:26.289 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:56:26.289 -07:00 [DBG] Start discovery request
2019-07-21 17:56:26.401 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:56:26.401 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:56:26.401 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:56:26.401 -07:00 [DBG] Start key discovery request
2019-07-21 17:56:33.433 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:56:33.433 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:56:33.433 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:56:33.433 -07:00 [DBG] Start discovery request
2019-07-21 17:56:33.529 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:56:33.530 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:56:33.530 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:56:33.530 -07:00 [DBG] Start key discovery request
2019-07-21 17:56:55.422 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:56:55.423 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:56:55.423 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:56:55.423 -07:00 [DBG] Start discovery request
2019-07-21 17:56:55.488 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:56:55.489 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:56:55.489 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:56:55.489 -07:00 [DBG] Start key discovery request
2019-07-21 17:56:55.602 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:56:55.603 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:56:55.603 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:56:55.603 -07:00 [DBG] Start token request.
2019-07-21 17:56:55.603 -07:00 [DBG] Start client validation
2019-07-21 17:56:55.603 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:56:55.603 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:56:55.604 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:56:55.604 -07:00 [DBG] Secret id found: client
2019-07-21 17:56:55.604 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:56:55.604 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:56:55.604 -07:00 [DBG] Client validation success
2019-07-21 17:56:55.604 -07:00 [DBG] Start token request validation
2019-07-21 17:56:55.604 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:56:55.821 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:56:55.822 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:56:55.822 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:56:55.822 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 17:56:55.827 -07:00 [DBG] Token request success.
2019-07-21 17:57:57.443 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:57:57.455 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:57:57.455 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:57:57.455 -07:00 [DBG] Start discovery request
2019-07-21 17:57:57.512 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:57:57.515 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:57:57.515 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:57:57.515 -07:00 [DBG] Start key discovery request
2019-07-21 17:57:57.626 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:57:57.626 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:57:57.626 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:57:57.626 -07:00 [DBG] Start token request.
2019-07-21 17:57:57.626 -07:00 [DBG] Start client validation
2019-07-21 17:57:57.626 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:57:57.626 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:57:57.627 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:57:57.627 -07:00 [DBG] Secret id found: client
2019-07-21 17:57:57.627 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:57:57.627 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:57:57.627 -07:00 [DBG] Client validation success
2019-07-21 17:57:57.627 -07:00 [DBG] Start token request validation
2019-07-21 17:57:57.627 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:57:57.632 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:57:57.632 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:57:57.633 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:57:57.633 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 17:57:57.637 -07:00 [DBG] Token request success.
2019-07-21 17:59:25.764 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:59:25.764 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:59:25.764 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:59:25.764 -07:00 [DBG] Start discovery request
2019-07-21 17:59:25.813 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:59:25.814 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:59:25.814 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:59:25.814 -07:00 [DBG] Start key discovery request
2019-07-21 17:59:25.927 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:59:25.927 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:59:25.927 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:59:25.927 -07:00 [DBG] Start token request.
2019-07-21 17:59:25.927 -07:00 [DBG] Start client validation
2019-07-21 17:59:25.927 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:59:25.927 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:59:25.928 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:59:25.928 -07:00 [DBG] Secret id found: client
2019-07-21 17:59:25.928 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:59:25.928 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:59:25.928 -07:00 [DBG] Client validation success
2019-07-21 17:59:25.928 -07:00 [DBG] Start token request validation
2019-07-21 17:59:25.928 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:59:25.932 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:59:25.932 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:59:25.934 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:59:25.934 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 17:59:25.938 -07:00 [DBG] Token request success.
2019-07-21 17:59:49.014 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 17:59:49.014 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 17:59:49.014 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 17:59:49.014 -07:00 [DBG] Start discovery request
2019-07-21 17:59:49.068 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 17:59:49.068 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 17:59:49.068 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 17:59:49.068 -07:00 [DBG] Start key discovery request
2019-07-21 17:59:49.181 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 17:59:49.182 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 17:59:49.182 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 17:59:49.182 -07:00 [DBG] Start token request.
2019-07-21 17:59:49.182 -07:00 [DBG] Start client validation
2019-07-21 17:59:49.182 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 17:59:49.182 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 17:59:49.182 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 17:59:49.183 -07:00 [DBG] Secret id found: client
2019-07-21 17:59:49.183 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 17:59:49.183 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 17:59:49.183 -07:00 [DBG] Client validation success
2019-07-21 17:59:49.183 -07:00 [DBG] Start token request validation
2019-07-21 17:59:49.183 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 17:59:49.188 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 17:59:49.188 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 17:59:49.188 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 17:59:49.188 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 17:59:49.195 -07:00 [DBG] Token request success.
2019-07-21 18:02:55.163 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 18:02:55.163 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 18:02:55.163 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 18:02:55.163 -07:00 [DBG] Start discovery request
2019-07-21 18:02:55.223 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 18:02:55.223 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 18:02:55.223 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 18:02:55.223 -07:00 [DBG] Start key discovery request
2019-07-21 18:02:55.351 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 18:02:55.352 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 18:02:55.352 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 18:02:55.352 -07:00 [DBG] Start token request.
2019-07-21 18:02:55.352 -07:00 [DBG] Start client validation
2019-07-21 18:02:55.352 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 18:02:55.352 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 18:02:55.384 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 18:02:55.384 -07:00 [DBG] Secret id found: client
2019-07-21 18:02:55.386 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 18:02:55.386 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 18:02:55.386 -07:00 [DBG] Client validation success
2019-07-21 18:02:55.386 -07:00 [DBG] Start token request validation
2019-07-21 18:02:55.386 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 18:02:55.391 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 18:02:55.391 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 18:02:55.391 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 18:02:55.391 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 18:02:55.396 -07:00 [DBG] Token request success.
2019-07-21 18:32:52.052 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 18:32:52.054 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 18:32:52.054 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 18:32:52.055 -07:00 [DBG] Start discovery request
2019-07-21 18:32:52.109 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 18:32:52.109 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 18:32:52.109 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 18:32:52.109 -07:00 [DBG] Start key discovery request
2019-07-21 18:32:52.226 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 18:32:52.226 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 18:32:52.226 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 18:32:52.227 -07:00 [DBG] Start token request.
2019-07-21 18:32:52.227 -07:00 [DBG] Start client validation
2019-07-21 18:32:52.227 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 18:32:52.227 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 18:32:52.227 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 18:32:52.227 -07:00 [DBG] Secret id found: client
2019-07-21 18:32:52.227 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 18:32:52.228 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 18:32:52.228 -07:00 [DBG] Client validation success
2019-07-21 18:32:52.228 -07:00 [DBG] Start token request validation
2019-07-21 18:32:52.228 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 18:32:52.258 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 18:32:52.259 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 18:32:52.259 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 18:32:52.259 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 18:32:52.264 -07:00 [DBG] Token request success.
2019-07-21 18:40:03.373 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 18:40:04.013 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 18:40:04.013 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 18:40:04.013 -07:00 [DBG] Start discovery request
2019-07-21 18:40:05.455 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 18:40:05.455 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 18:40:05.455 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 18:40:05.455 -07:00 [DBG] Start key discovery request
2019-07-21 18:40:06.339 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 18:40:06.339 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 18:40:06.339 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 18:40:06.399 -07:00 [DBG] Start token request.
2019-07-21 18:40:06.399 -07:00 [DBG] Start client validation
2019-07-21 18:40:06.399 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 18:40:06.399 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 18:40:06.510 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 18:40:06.510 -07:00 [DBG] Secret id found: client
2019-07-21 18:40:06.510 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 18:40:06.663 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 18:40:06.663 -07:00 [DBG] Client validation success
2019-07-21 18:40:06.663 -07:00 [DBG] Start token request validation
2019-07-21 18:40:06.663 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 18:40:07.916 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 18:40:07.916 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 18:40:07.916 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 18:40:07.916 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 18:40:07.957 -07:00 [DBG] Token request success.
2019-07-21 18:44:52.564 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 18:44:52.564 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 18:44:52.565 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 18:44:52.565 -07:00 [DBG] Start discovery request
2019-07-21 18:44:53.418 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 18:44:53.418 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 18:44:53.418 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 18:44:53.418 -07:00 [DBG] Start key discovery request
2019-07-21 18:44:53.972 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 18:44:53.972 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 18:44:53.972 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 18:44:53.972 -07:00 [DBG] Start token request.
2019-07-21 18:44:53.972 -07:00 [DBG] Start client validation
2019-07-21 18:44:53.972 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 18:44:53.972 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 18:44:53.983 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 18:44:53.983 -07:00 [DBG] Secret id found: client
2019-07-21 18:44:53.984 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 18:44:53.984 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 18:44:53.984 -07:00 [DBG] Client validation success
2019-07-21 18:44:53.984 -07:00 [DBG] Start token request validation
2019-07-21 18:44:53.984 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 18:44:54.994 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 18:44:54.995 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 18:44:54.995 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 18:44:54.995 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 18:44:55.029 -07:00 [DBG] Token request success.
2019-07-21 18:47:32.468 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 18:47:32.468 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 18:47:32.468 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 18:47:32.468 -07:00 [DBG] Start discovery request
2019-07-21 18:47:32.551 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 18:47:32.551 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 18:47:32.551 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 18:47:32.551 -07:00 [DBG] Start key discovery request
2019-07-21 18:47:32.662 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 18:47:32.662 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 18:47:32.663 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 18:47:32.663 -07:00 [DBG] Start token request.
2019-07-21 18:47:32.663 -07:00 [DBG] Start client validation
2019-07-21 18:47:32.663 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 18:47:32.663 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 18:47:32.717 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 18:47:32.717 -07:00 [DBG] Secret id found: client
2019-07-21 18:47:32.717 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 18:47:32.718 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 18:47:32.718 -07:00 [DBG] Client validation success
2019-07-21 18:47:32.718 -07:00 [DBG] Start token request validation
2019-07-21 18:47:32.718 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 18:47:32.724 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 18:47:32.724 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 18:47:32.724 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 18:47:32.724 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 18:47:32.728 -07:00 [DBG] Token request success.
2019-07-21 20:24:00.578 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 20:24:00.617 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 20:24:00.620 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 20:24:00.621 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 20:24:00.621 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 20:24:00.621 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 20:24:00.621 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 20:24:01.120 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 20:24:01.122 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 20:24:01.122 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 20:24:01.122 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 20:24:01.122 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 20:24:01.122 -07:00 [DBG] Error Url: /home/error
2019-07-21 20:24:01.122 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 20:26:18.642 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:26:19.070 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:26:19.070 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:26:19.093 -07:00 [DBG] Start discovery request
2019-07-21 20:26:19.372 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:26:19.373 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:26:19.373 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:26:19.376 -07:00 [DBG] Start key discovery request
2019-07-21 20:26:19.532 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 20:26:19.545 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 20:26:19.545 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 20:26:19.552 -07:00 [DBG] Start token request.
2019-07-21 20:26:19.557 -07:00 [DBG] Start client validation
2019-07-21 20:26:19.561 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 20:26:19.565 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 20:26:19.596 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 20:26:19.596 -07:00 [DBG] Secret id found: client
2019-07-21 20:26:19.607 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 20:26:19.614 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 20:26:19.614 -07:00 [DBG] Client validation success
2019-07-21 20:26:19.630 -07:00 [DBG] Start token request validation
2019-07-21 20:26:19.640 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 20:26:30.632 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 20:26:30.656 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 20:26:30.698 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 20:26:30.698 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 20:26:31.093 -07:00 [DBG] Token request success.
2019-07-21 20:43:39.920 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:43:39.921 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:43:39.921 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:43:39.922 -07:00 [DBG] Start discovery request
2019-07-21 20:43:39.983 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:43:39.986 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:43:39.986 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:43:39.986 -07:00 [DBG] Start key discovery request
2019-07-21 20:43:40.100 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 20:43:40.101 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 20:43:40.101 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 20:43:40.101 -07:00 [DBG] Start token request.
2019-07-21 20:43:40.101 -07:00 [DBG] Start client validation
2019-07-21 20:43:40.101 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 20:43:40.101 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 20:43:40.102 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 20:43:40.102 -07:00 [DBG] Secret id found: client
2019-07-21 20:43:40.102 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 20:43:40.102 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 20:43:40.102 -07:00 [DBG] Client validation success
2019-07-21 20:43:40.102 -07:00 [DBG] Start token request validation
2019-07-21 20:43:40.103 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 20:43:44.229 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 20:43:44.230 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 20:43:44.230 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 20:43:44.230 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 20:43:44.234 -07:00 [DBG] Token request success.
2019-07-21 20:43:45.521 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:43:45.521 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:43:45.521 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:43:45.521 -07:00 [DBG] Start discovery request
2019-07-21 20:43:45.848 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:43:45.848 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:43:45.848 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:43:45.848 -07:00 [DBG] Start key discovery request
2019-07-21 20:44:13.785 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:44:13.785 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:44:13.785 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:44:13.785 -07:00 [DBG] Start discovery request
2019-07-21 20:44:13.883 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:44:13.883 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:44:13.883 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:44:13.883 -07:00 [DBG] Start key discovery request
2019-07-21 20:47:03.781 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 20:47:03.814 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 20:47:03.817 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 20:47:03.818 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 20:47:03.818 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 20:47:03.818 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 20:47:03.818 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 20:47:04.249 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 20:47:04.253 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 20:47:04.253 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 20:47:04.253 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 20:47:04.254 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 20:47:04.254 -07:00 [DBG] Error Url: /home/error
2019-07-21 20:47:04.254 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 20:47:53.259 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:47:53.351 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:47:53.351 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:47:53.355 -07:00 [DBG] Start discovery request
2019-07-21 20:47:53.445 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:47:53.446 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:47:53.446 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:47:53.449 -07:00 [DBG] Start key discovery request
2019-07-21 20:47:53.572 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 20:47:53.577 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 20:47:53.577 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 20:47:53.585 -07:00 [DBG] Start token request.
2019-07-21 20:47:53.590 -07:00 [DBG] Start client validation
2019-07-21 20:47:53.595 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 20:47:53.598 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 20:47:53.613 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 20:47:53.613 -07:00 [DBG] Secret id found: client
2019-07-21 20:47:53.623 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 20:47:53.631 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 20:47:53.631 -07:00 [DBG] Client validation success
2019-07-21 20:47:53.640 -07:00 [DBG] Start token request validation
2019-07-21 20:47:53.650 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 20:47:57.090 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 20:47:57.103 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 20:47:57.133 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 20:47:57.134 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 20:47:57.284 -07:00 [DBG] Token request success.
2019-07-21 20:47:57.819 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:47:57.820 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:47:57.820 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:47:57.820 -07:00 [DBG] Start discovery request
2019-07-21 20:47:57.946 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:47:57.946 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:47:57.947 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:47:57.947 -07:00 [DBG] Start key discovery request
2019-07-21 20:48:10.317 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:48:10.317 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:48:10.317 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:48:10.317 -07:00 [DBG] Start discovery request
2019-07-21 20:48:10.425 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:48:10.425 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:48:10.425 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:48:10.425 -07:00 [DBG] Start key discovery request
2019-07-21 20:53:07.868 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 20:53:07.868 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 20:53:07.868 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 20:53:07.868 -07:00 [DBG] Start discovery request
2019-07-21 20:53:07.916 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 20:53:07.916 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 20:53:07.916 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 20:53:07.916 -07:00 [DBG] Start key discovery request
2019-07-21 20:53:08.027 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 20:53:08.028 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 20:53:08.028 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 20:53:08.028 -07:00 [DBG] Start token request.
2019-07-21 20:53:08.028 -07:00 [DBG] Start client validation
2019-07-21 20:53:08.028 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 20:53:08.029 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 20:53:08.029 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 20:53:08.029 -07:00 [DBG] Secret id found: client
2019-07-21 20:53:08.029 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 20:53:08.029 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 20:53:08.030 -07:00 [DBG] Client validation success
2019-07-21 20:53:08.030 -07:00 [DBG] Start token request validation
2019-07-21 20:53:08.030 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 20:53:08.058 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 20:53:08.058 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 20:53:08.058 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 20:53:08.058 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 20:53:08.067 -07:00 [DBG] Token request success.
2019-07-21 21:06:39.900 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:06:39.900 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:06:39.900 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:06:39.900 -07:00 [DBG] Start discovery request
2019-07-21 21:06:39.957 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:06:39.957 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:06:39.958 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:06:39.958 -07:00 [DBG] Start key discovery request
2019-07-21 21:06:40.080 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:06:40.080 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:06:40.080 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:06:40.080 -07:00 [DBG] Start token request.
2019-07-21 21:06:40.080 -07:00 [DBG] Start client validation
2019-07-21 21:06:40.080 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:06:40.080 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:06:40.081 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:06:40.081 -07:00 [DBG] Secret id found: client
2019-07-21 21:06:40.081 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:06:40.081 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:06:40.081 -07:00 [DBG] Client validation success
2019-07-21 21:06:40.081 -07:00 [DBG] Start token request validation
2019-07-21 21:06:40.081 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:06:44.099 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:06:44.099 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:06:44.099 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:06:44.099 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:06:44.104 -07:00 [DBG] Token request success.
2019-07-21 21:08:08.307 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:08:08.307 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:08:08.308 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:08:08.308 -07:00 [DBG] Start discovery request
2019-07-21 21:08:08.365 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:08:08.365 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:08:08.365 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:08:08.365 -07:00 [DBG] Start key discovery request
2019-07-21 21:08:08.480 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:08:08.481 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:08:08.481 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:08:08.481 -07:00 [DBG] Start token request.
2019-07-21 21:08:08.481 -07:00 [DBG] Start client validation
2019-07-21 21:08:08.481 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:08:08.481 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:08:08.481 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:08:08.481 -07:00 [DBG] Secret id found: client
2019-07-21 21:08:08.481 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:08:08.482 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:08:08.482 -07:00 [DBG] Client validation success
2019-07-21 21:08:08.482 -07:00 [DBG] Start token request validation
2019-07-21 21:08:08.482 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:08:08.484 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:08:08.485 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:08:08.485 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:08:08.485 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:08:08.489 -07:00 [DBG] Token request success.
2019-07-21 21:08:57.141 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:08:57.142 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:08:57.142 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:08:57.142 -07:00 [DBG] Start discovery request
2019-07-21 21:08:57.198 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:08:57.198 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:08:57.198 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:08:57.198 -07:00 [DBG] Start key discovery request
2019-07-21 21:08:57.307 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:08:57.307 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:08:57.307 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:08:57.308 -07:00 [DBG] Start token request.
2019-07-21 21:08:57.308 -07:00 [DBG] Start client validation
2019-07-21 21:08:57.308 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:08:57.308 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:08:57.308 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:08:57.308 -07:00 [DBG] Secret id found: client
2019-07-21 21:08:57.308 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:08:57.308 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:08:57.308 -07:00 [DBG] Client validation success
2019-07-21 21:08:57.309 -07:00 [DBG] Start token request validation
2019-07-21 21:08:57.309 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:08:57.311 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:08:57.311 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:08:57.312 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:08:57.312 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:08:57.316 -07:00 [DBG] Token request success.
2019-07-21 21:09:55.179 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:09:55.179 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:09:55.179 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:09:55.179 -07:00 [DBG] Start discovery request
2019-07-21 21:09:55.229 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:09:55.229 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:09:55.229 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:09:55.229 -07:00 [DBG] Start key discovery request
2019-07-21 21:09:55.346 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:09:55.346 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:09:55.346 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:09:55.346 -07:00 [DBG] Start token request.
2019-07-21 21:09:55.346 -07:00 [DBG] Start client validation
2019-07-21 21:09:55.347 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:09:55.347 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:09:55.347 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:09:55.347 -07:00 [DBG] Secret id found: client
2019-07-21 21:09:55.347 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:09:55.347 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:09:55.347 -07:00 [DBG] Client validation success
2019-07-21 21:09:55.347 -07:00 [DBG] Start token request validation
2019-07-21 21:09:55.347 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:09:55.350 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:09:55.350 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:09:55.350 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:09:55.350 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:09:55.355 -07:00 [DBG] Token request success.
2019-07-21 21:19:00.497 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:19:00.497 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:19:00.497 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:19:00.497 -07:00 [DBG] Start discovery request
2019-07-21 21:19:00.568 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:19:00.568 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:19:00.568 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:19:00.568 -07:00 [DBG] Start key discovery request
2019-07-21 21:19:00.731 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:19:00.738 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:19:00.738 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:19:00.738 -07:00 [DBG] Start token request.
2019-07-21 21:19:00.738 -07:00 [DBG] Start client validation
2019-07-21 21:19:00.738 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:19:00.738 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:19:00.738 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:19:00.739 -07:00 [DBG] Secret id found: client
2019-07-21 21:19:00.739 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:19:00.739 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:19:00.739 -07:00 [DBG] Client validation success
2019-07-21 21:19:00.739 -07:00 [DBG] Start token request validation
2019-07-21 21:19:00.739 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:19:01.248 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:19:01.249 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:19:01.249 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:19:01.249 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:19:01.258 -07:00 [DBG] Token request success.
2019-07-21 21:24:35.745 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:24:35.746 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:24:35.746 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:24:35.746 -07:00 [DBG] Start discovery request
2019-07-21 21:24:35.821 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:24:35.822 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:24:35.822 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:24:35.822 -07:00 [DBG] Start key discovery request
2019-07-21 21:24:35.969 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:24:35.970 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:24:35.970 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:24:35.970 -07:00 [DBG] Start token request.
2019-07-21 21:24:35.971 -07:00 [DBG] Start client validation
2019-07-21 21:24:35.971 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:24:35.971 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:24:35.971 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:24:35.971 -07:00 [DBG] Secret id found: client
2019-07-21 21:24:35.972 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:24:35.972 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:24:35.972 -07:00 [DBG] Client validation success
2019-07-21 21:24:35.972 -07:00 [DBG] Start token request validation
2019-07-21 21:24:35.972 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:24:35.976 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:24:35.976 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:24:35.976 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:24:35.976 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:24:35.982 -07:00 [DBG] Token request success.
2019-07-21 21:28:48.471 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:28:48.472 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:28:48.472 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:28:48.472 -07:00 [DBG] Start discovery request
2019-07-21 21:28:48.548 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:28:48.552 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:28:48.552 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:28:48.552 -07:00 [DBG] Start key discovery request
2019-07-21 21:28:48.718 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:28:48.719 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:28:48.719 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:28:48.719 -07:00 [DBG] Start token request.
2019-07-21 21:28:48.719 -07:00 [DBG] Start client validation
2019-07-21 21:28:48.719 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:28:48.719 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:28:48.719 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:28:48.720 -07:00 [DBG] Secret id found: client
2019-07-21 21:28:48.720 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:28:48.720 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:28:48.720 -07:00 [DBG] Client validation success
2019-07-21 21:28:48.720 -07:00 [DBG] Start token request validation
2019-07-21 21:28:48.720 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:28:49.242 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:28:49.242 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:28:49.243 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:28:49.243 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:28:49.258 -07:00 [DBG] Token request success.
2019-07-21 21:35:35.190 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:35:35.190 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:35:35.190 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:35:35.190 -07:00 [DBG] Start discovery request
2019-07-21 21:35:35.262 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:35:35.263 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:35:35.263 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:35:35.263 -07:00 [DBG] Start key discovery request
2019-07-21 21:35:35.431 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:35:35.432 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:35:35.432 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:35:35.432 -07:00 [DBG] Start token request.
2019-07-21 21:35:35.432 -07:00 [DBG] Start client validation
2019-07-21 21:35:35.432 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:35:35.432 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:35:35.433 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:35:35.433 -07:00 [DBG] Secret id found: client
2019-07-21 21:35:35.434 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:35:35.434 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:35:35.434 -07:00 [DBG] Client validation success
2019-07-21 21:35:35.434 -07:00 [DBG] Start token request validation
2019-07-21 21:35:35.434 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:35:36.021 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:35:36.022 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:35:36.022 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:35:36.022 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:35:36.028 -07:00 [DBG] Token request success.
2019-07-21 21:36:20.106 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:36:20.107 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:36:20.107 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:36:20.107 -07:00 [DBG] Start discovery request
2019-07-21 21:36:20.176 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:36:20.176 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:36:20.176 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:36:20.176 -07:00 [DBG] Start key discovery request
2019-07-21 21:36:20.332 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:36:20.332 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:36:20.332 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:36:20.333 -07:00 [DBG] Start token request.
2019-07-21 21:36:20.333 -07:00 [DBG] Start client validation
2019-07-21 21:36:20.333 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:36:20.333 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:36:20.337 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:36:20.337 -07:00 [DBG] Secret id found: client
2019-07-21 21:36:20.337 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:36:20.337 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:36:20.337 -07:00 [DBG] Client validation success
2019-07-21 21:36:20.337 -07:00 [DBG] Start token request validation
2019-07-21 21:36:20.337 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:36:20.344 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:36:20.345 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:36:20.345 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:36:20.345 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 21:36:20.352 -07:00 [DBG] Token request success.
2019-07-21 21:38:32.721 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:38:32.722 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:38:32.722 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:38:32.722 -07:00 [DBG] Start discovery request
2019-07-21 21:38:32.784 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:38:32.784 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:38:32.784 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:38:32.784 -07:00 [DBG] Start key discovery request
2019-07-21 21:38:32.945 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:38:32.946 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:38:32.946 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:38:32.946 -07:00 [DBG] Start token request.
2019-07-21 21:38:32.946 -07:00 [DBG] Start client validation
2019-07-21 21:38:32.946 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:38:32.947 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:38:32.947 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:38:32.947 -07:00 [DBG] Secret id found: client
2019-07-21 21:38:32.947 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:38:32.948 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:38:32.948 -07:00 [DBG] Client validation success
2019-07-21 21:38:32.948 -07:00 [DBG] Start token request validation
2019-07-21 21:38:32.948 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:38:32.956 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:38:32.956 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:38:32.957 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:38:32.957 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:38:32.964 -07:00 [DBG] Token request success.
2019-07-21 21:39:32.618 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:39:32.618 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:39:32.619 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:39:32.619 -07:00 [DBG] Start discovery request
2019-07-21 21:39:32.697 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:39:32.698 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:39:32.698 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:39:32.698 -07:00 [DBG] Start key discovery request
2019-07-21 21:39:32.906 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:39:32.907 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:39:32.907 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:39:32.907 -07:00 [DBG] Start token request.
2019-07-21 21:39:32.907 -07:00 [DBG] Start client validation
2019-07-21 21:39:32.907 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:39:32.907 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:39:32.908 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:39:32.908 -07:00 [DBG] Secret id found: client
2019-07-21 21:39:32.908 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:39:32.908 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:39:32.908 -07:00 [DBG] Client validation success
2019-07-21 21:39:32.908 -07:00 [DBG] Start token request validation
2019-07-21 21:39:32.908 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:39:32.917 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:39:32.917 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:39:32.917 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:39:32.917 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 21:39:32.926 -07:00 [DBG] Token request success.
2019-07-21 21:49:52.425 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 21:49:52.467 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 21:49:52.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 21:49:52.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 21:49:52.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 21:49:52.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 21:49:52.470 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 21:49:52.864 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 21:49:52.866 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 21:49:52.866 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 21:49:52.866 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 21:49:52.866 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 21:49:52.866 -07:00 [DBG] Error Url: /home/error
2019-07-21 21:49:52.866 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 21:49:52.892 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:49:52.962 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:49:52.962 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:49:52.966 -07:00 [DBG] Start discovery request
2019-07-21 21:49:53.079 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:49:53.080 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:49:53.080 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:49:53.090 -07:00 [DBG] Start key discovery request
2019-07-21 21:49:53.250 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:49:53.257 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:49:53.257 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:49:53.267 -07:00 [DBG] Start token request.
2019-07-21 21:49:53.273 -07:00 [DBG] Start client validation
2019-07-21 21:49:53.281 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:49:53.287 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:49:53.305 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:49:53.305 -07:00 [DBG] Secret id found: client
2019-07-21 21:49:53.327 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:49:53.337 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:49:53.337 -07:00 [DBG] Client validation success
2019-07-21 21:49:53.351 -07:00 [DBG] Start token request validation
2019-07-21 21:49:53.363 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:49:57.228 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:49:57.243 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:49:57.280 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:49:57.281 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-21 21:49:57.381 -07:00 [DBG] Token request success.
2019-07-21 21:49:59.132 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:49:59.132 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:49:59.132 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:49:59.132 -07:00 [DBG] Start discovery request
2019-07-21 21:49:59.220 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:49:59.221 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:49:59.221 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:49:59.221 -07:00 [DBG] Start key discovery request
2019-07-21 21:50:03.706 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:50:03.707 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:50:03.707 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:50:03.707 -07:00 [DBG] Start discovery request
2019-07-21 21:50:03.802 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:50:03.803 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:50:03.803 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:50:03.803 -07:00 [DBG] Start key discovery request
2019-07-21 21:52:25.279 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:52:25.279 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:52:25.279 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:52:25.279 -07:00 [DBG] Start discovery request
2019-07-21 21:52:25.360 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:52:25.360 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:52:25.360 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:52:25.360 -07:00 [DBG] Start key discovery request
2019-07-21 21:52:25.512 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:52:25.513 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:52:25.513 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:52:25.513 -07:00 [DBG] Start token request.
2019-07-21 21:52:25.513 -07:00 [DBG] Start client validation
2019-07-21 21:52:25.514 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:52:25.514 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:52:25.514 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:52:25.515 -07:00 [DBG] Secret id found: client
2019-07-21 21:52:25.515 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:52:25.515 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:52:25.515 -07:00 [DBG] Client validation success
2019-07-21 21:52:25.515 -07:00 [DBG] Start token request validation
2019-07-21 21:52:25.516 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:52:25.524 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:52:25.524 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:52:25.524 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:52:25.525 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 21:52:25.533 -07:00 [DBG] Token request success.
2019-07-21 21:55:23.833 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-21 21:55:23.914 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-21 21:55:23.921 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-21 21:55:23.921 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-21 21:55:23.921 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-21 21:55:23.921 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-21 21:55:23.922 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-21 21:55:24.291 -07:00 [DBG] Login Url: /Account/Login
2019-07-21 21:55:24.294 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-21 21:55:24.294 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-21 21:55:24.294 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-21 21:55:24.294 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-21 21:55:24.294 -07:00 [DBG] Error Url: /home/error
2019-07-21 21:55:24.295 -07:00 [DBG] Error Id Parameter: errorId
2019-07-21 21:55:33.166 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-21 21:55:33.323 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-21 21:55:33.323 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-21 21:55:33.330 -07:00 [DBG] Start discovery request
2019-07-21 21:55:33.437 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-21 21:55:33.438 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-21 21:55:33.438 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-21 21:55:33.444 -07:00 [DBG] Start key discovery request
2019-07-21 21:55:33.634 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-21 21:55:33.643 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-21 21:55:33.643 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-21 21:55:33.655 -07:00 [DBG] Start token request.
2019-07-21 21:55:33.664 -07:00 [DBG] Start client validation
2019-07-21 21:55:33.670 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-21 21:55:33.675 -07:00 [DBG] Start parsing for secret in post body
2019-07-21 21:55:33.693 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-21 21:55:33.693 -07:00 [DBG] Secret id found: client
2019-07-21 21:55:33.713 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-21 21:55:33.721 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-21 21:55:33.721 -07:00 [DBG] Client validation success
2019-07-21 21:55:33.736 -07:00 [DBG] Start token request validation
2019-07-21 21:55:33.752 -07:00 [DBG] Start resource owner password token request validation
2019-07-21 21:55:37.049 -07:00 [DBG] Resource owner password token request validation success.
2019-07-21 21:55:37.069 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-21 21:55:37.121 -07:00 [DBG] Getting claims for access token for client: client
2019-07-21 21:55:37.122 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-21 21:55:37.250 -07:00 [DBG] Token request success.
2019-07-22 02:38:35.122 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 02:38:35.197 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-22 02:38:35.203 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-22 02:38:35.204 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-22 02:38:35.204 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-22 02:38:35.204 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-22 02:38:35.204 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-22 02:38:35.720 -07:00 [DBG] Login Url: /Account/Login
2019-07-22 02:38:35.722 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 02:38:35.722 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-22 02:38:35.723 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-22 02:38:35.723 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 02:38:35.723 -07:00 [DBG] Error Url: /home/error
2019-07-22 02:38:35.723 -07:00 [DBG] Error Id Parameter: errorId
2019-07-22 02:41:17.848 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 02:41:20.157 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 02:41:20.157 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 02:41:20.173 -07:00 [DBG] Start discovery request
2019-07-22 02:41:20.997 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 02:41:20.998 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 02:41:20.998 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 02:41:21.007 -07:00 [DBG] Start key discovery request
2019-07-22 02:41:22.126 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 02:41:22.140 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 02:41:22.141 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 02:41:22.156 -07:00 [DBG] Start token request.
2019-07-22 02:41:22.165 -07:00 [DBG] Start client validation
2019-07-22 02:41:22.178 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 02:41:22.186 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 02:41:22.566 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 02:41:22.566 -07:00 [DBG] Secret id found: client
2019-07-22 02:41:22.586 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 02:41:22.620 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 02:41:22.620 -07:00 [DBG] Client validation success
2019-07-22 02:41:22.737 -07:00 [DBG] Start token request validation
2019-07-22 02:41:22.878 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 02:41:55.699 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 02:41:55.722 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 02:41:56.019 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 02:41:56.020 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 02:41:57.603 -07:00 [DBG] Token request success.
2019-07-22 02:42:05.020 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 02:42:05.020 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 02:42:05.021 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 02:42:05.021 -07:00 [DBG] Start discovery request
2019-07-22 02:42:05.915 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 02:42:05.915 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 02:42:05.915 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 02:42:05.916 -07:00 [DBG] Start key discovery request
2019-07-22 02:42:13.221 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 02:42:13.221 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 02:42:13.221 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 02:42:13.222 -07:00 [DBG] Start discovery request
2019-07-22 02:42:13.419 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 02:42:13.420 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 02:42:13.420 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 02:42:13.420 -07:00 [DBG] Start key discovery request
2019-07-22 02:44:48.230 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 02:44:48.230 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 02:44:48.230 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 02:44:48.230 -07:00 [DBG] Start discovery request
2019-07-22 02:44:48.323 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 02:44:48.323 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 02:44:48.324 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 02:44:48.324 -07:00 [DBG] Start key discovery request
2019-07-22 02:44:48.545 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 02:44:48.546 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 02:44:48.546 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 02:44:48.547 -07:00 [DBG] Start token request.
2019-07-22 02:44:48.547 -07:00 [DBG] Start client validation
2019-07-22 02:44:48.547 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 02:44:48.547 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 02:44:48.548 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 02:44:48.548 -07:00 [DBG] Secret id found: client
2019-07-22 02:44:48.549 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 02:44:48.549 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 02:44:48.549 -07:00 [DBG] Client validation success
2019-07-22 02:44:48.550 -07:00 [DBG] Start token request validation
2019-07-22 02:44:48.550 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 02:44:48.579 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 02:44:48.581 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 02:44:48.581 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 02:44:48.581 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 02:44:48.590 -07:00 [DBG] Token request success.
2019-07-22 02:53:50.476 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 02:53:50.477 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 02:53:50.477 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 02:53:50.477 -07:00 [DBG] Start discovery request
2019-07-22 02:53:50.576 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 02:53:50.576 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 02:53:50.576 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 02:53:50.576 -07:00 [DBG] Start key discovery request
2019-07-22 02:53:50.755 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 02:53:50.755 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 02:53:50.755 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 02:53:50.755 -07:00 [DBG] Start token request.
2019-07-22 02:53:50.755 -07:00 [DBG] Start client validation
2019-07-22 02:53:50.755 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 02:53:50.756 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 02:53:50.756 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 02:53:50.756 -07:00 [DBG] Secret id found: client
2019-07-22 02:53:50.756 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 02:53:50.756 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 02:53:50.756 -07:00 [DBG] Client validation success
2019-07-22 02:53:50.757 -07:00 [DBG] Start token request validation
2019-07-22 02:53:50.757 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 02:53:51.208 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 02:53:51.208 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 02:53:51.209 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 02:53:51.209 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 02:53:51.216 -07:00 [DBG] Token request success.
2019-07-22 02:57:24.685 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 02:57:24.685 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 02:57:24.685 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 02:57:24.685 -07:00 [DBG] Start discovery request
2019-07-22 02:57:24.801 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 02:57:24.801 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 02:57:24.801 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 02:57:24.802 -07:00 [DBG] Start key discovery request
2019-07-22 02:57:24.980 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 02:57:24.981 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 02:57:24.981 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 02:57:24.981 -07:00 [DBG] Start token request.
2019-07-22 02:57:24.982 -07:00 [DBG] Start client validation
2019-07-22 02:57:24.982 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 02:57:24.982 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 02:57:24.984 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 02:57:24.984 -07:00 [DBG] Secret id found: client
2019-07-22 02:57:24.984 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 02:57:24.984 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 02:57:24.984 -07:00 [DBG] Client validation success
2019-07-22 02:57:24.985 -07:00 [DBG] Start token request validation
2019-07-22 02:57:24.985 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 02:57:24.993 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 02:57:24.993 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 02:57:24.993 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 02:57:24.993 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 02:57:25.001 -07:00 [DBG] Token request success.
2019-07-22 03:03:06.075 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:03:06.076 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:03:06.076 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:03:06.076 -07:00 [DBG] Start discovery request
2019-07-22 03:03:06.182 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:03:06.182 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:03:06.183 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:03:06.183 -07:00 [DBG] Start key discovery request
2019-07-22 03:03:06.381 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:03:06.382 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:03:06.382 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:03:06.383 -07:00 [DBG] Start token request.
2019-07-22 03:03:06.383 -07:00 [DBG] Start client validation
2019-07-22 03:03:06.383 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:03:06.383 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:03:06.384 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:03:06.384 -07:00 [DBG] Secret id found: client
2019-07-22 03:03:06.384 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:03:06.384 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:03:06.384 -07:00 [DBG] Client validation success
2019-07-22 03:03:06.384 -07:00 [DBG] Start token request validation
2019-07-22 03:03:06.384 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:03:07.343 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:03:07.343 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:03:07.343 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:03:07.343 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:03:07.356 -07:00 [DBG] Token request success.
2019-07-22 03:07:27.843 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:07:27.844 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:07:27.844 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:07:27.844 -07:00 [DBG] Start discovery request
2019-07-22 03:07:27.943 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:07:27.944 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:07:27.944 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:07:27.944 -07:00 [DBG] Start key discovery request
2019-07-22 03:07:28.217 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:07:28.217 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:07:28.218 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:07:28.218 -07:00 [DBG] Start token request.
2019-07-22 03:07:28.218 -07:00 [DBG] Start client validation
2019-07-22 03:07:28.218 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:07:28.218 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:07:28.219 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:07:28.219 -07:00 [DBG] Secret id found: client
2019-07-22 03:07:28.219 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:07:28.219 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:07:28.219 -07:00 [DBG] Client validation success
2019-07-22 03:07:28.219 -07:00 [DBG] Start token request validation
2019-07-22 03:07:28.219 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:07:28.423 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:07:28.423 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:07:28.424 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:07:28.424 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:07:28.434 -07:00 [DBG] Token request success.
2019-07-22 03:10:24.313 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:10:24.313 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:10:24.313 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:10:24.313 -07:00 [DBG] Start discovery request
2019-07-22 03:10:24.412 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:10:24.413 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:10:24.413 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:10:24.413 -07:00 [DBG] Start key discovery request
2019-07-22 03:10:24.646 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:10:24.647 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:10:24.647 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:10:24.647 -07:00 [DBG] Start token request.
2019-07-22 03:10:24.647 -07:00 [DBG] Start client validation
2019-07-22 03:10:24.647 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:10:24.647 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:10:24.648 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:10:24.648 -07:00 [DBG] Secret id found: client
2019-07-22 03:10:24.648 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:10:24.648 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:10:24.648 -07:00 [DBG] Client validation success
2019-07-22 03:10:24.648 -07:00 [DBG] Start token request validation
2019-07-22 03:10:24.649 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:10:24.659 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:10:24.660 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:10:24.660 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:10:24.660 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:10:24.674 -07:00 [DBG] Token request success.
2019-07-22 03:11:23.860 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:11:23.860 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:11:23.860 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:11:23.860 -07:00 [DBG] Start discovery request
2019-07-22 03:11:23.965 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:11:23.966 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:11:23.966 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:11:23.966 -07:00 [DBG] Start key discovery request
2019-07-22 03:11:24.195 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:11:24.196 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:11:24.197 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:11:24.197 -07:00 [DBG] Start token request.
2019-07-22 03:11:24.197 -07:00 [DBG] Start client validation
2019-07-22 03:11:24.197 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:11:24.198 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:11:24.198 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:11:24.198 -07:00 [DBG] Secret id found: client
2019-07-22 03:11:24.198 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:11:24.198 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:11:24.199 -07:00 [DBG] Client validation success
2019-07-22 03:11:24.199 -07:00 [DBG] Start token request validation
2019-07-22 03:11:24.199 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:11:24.441 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:11:24.442 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:11:24.442 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:11:24.442 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:11:24.450 -07:00 [DBG] Token request success.
2019-07-22 03:15:13.306 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:15:13.306 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:15:13.306 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:15:13.306 -07:00 [DBG] Start discovery request
2019-07-22 03:15:13.393 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:15:13.393 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:15:13.393 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:15:13.393 -07:00 [DBG] Start key discovery request
2019-07-22 03:15:13.630 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:15:13.630 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:15:13.630 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:15:13.630 -07:00 [DBG] Start token request.
2019-07-22 03:15:13.630 -07:00 [DBG] Start client validation
2019-07-22 03:15:13.630 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:15:13.631 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:15:13.632 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:15:13.632 -07:00 [DBG] Secret id found: client
2019-07-22 03:15:13.633 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:15:13.633 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:15:13.633 -07:00 [DBG] Client validation success
2019-07-22 03:15:13.633 -07:00 [DBG] Start token request validation
2019-07-22 03:15:13.634 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:15:14.123 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:15:14.123 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:15:14.124 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:15:14.124 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:15:14.131 -07:00 [DBG] Token request success.
2019-07-22 03:18:30.664 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:18:30.665 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:18:30.665 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:18:30.665 -07:00 [DBG] Start discovery request
2019-07-22 03:18:30.771 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:18:30.772 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:18:30.772 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:18:30.772 -07:00 [DBG] Start key discovery request
2019-07-22 03:18:30.980 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:18:30.981 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:18:30.981 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:18:30.981 -07:00 [DBG] Start token request.
2019-07-22 03:18:30.981 -07:00 [DBG] Start client validation
2019-07-22 03:18:30.981 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:18:30.982 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:18:30.982 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:18:30.982 -07:00 [DBG] Secret id found: client
2019-07-22 03:18:30.982 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:18:30.982 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:18:30.982 -07:00 [DBG] Client validation success
2019-07-22 03:18:30.982 -07:00 [DBG] Start token request validation
2019-07-22 03:18:30.982 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:18:30.991 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:18:30.992 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:18:30.992 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:18:30.992 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:18:31.000 -07:00 [DBG] Token request success.
2019-07-22 03:44:36.951 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:44:37.147 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:44:37.147 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:44:37.147 -07:00 [DBG] Start discovery request
2019-07-22 03:44:38.320 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:44:38.321 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:44:38.321 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:44:38.321 -07:00 [DBG] Start key discovery request
2019-07-22 03:44:38.872 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:44:38.873 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:44:38.873 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:44:38.873 -07:00 [DBG] Start token request.
2019-07-22 03:44:38.873 -07:00 [DBG] Start client validation
2019-07-22 03:44:38.873 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:44:38.873 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:44:38.922 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:44:38.923 -07:00 [DBG] Secret id found: client
2019-07-22 03:44:38.923 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:44:38.951 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:44:38.951 -07:00 [DBG] Client validation success
2019-07-22 03:44:38.951 -07:00 [DBG] Start token request validation
2019-07-22 03:44:38.951 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:44:59.292 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:44:59.318 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:44:59.318 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:44:59.318 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:44:59.395 -07:00 [DBG] Token request success.
2019-07-22 03:50:23.739 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:50:23.739 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:50:23.739 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:50:23.739 -07:00 [DBG] Start discovery request
2019-07-22 03:50:23.826 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:50:23.827 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:50:23.827 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:50:23.827 -07:00 [DBG] Start key discovery request
2019-07-22 03:50:24.020 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:50:24.020 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:50:24.036 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:50:24.037 -07:00 [DBG] Start token request.
2019-07-22 03:50:24.037 -07:00 [DBG] Start client validation
2019-07-22 03:50:24.037 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:50:24.037 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:50:24.062 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:50:24.062 -07:00 [DBG] Secret id found: client
2019-07-22 03:50:24.062 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:50:24.070 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:50:24.070 -07:00 [DBG] Client validation success
2019-07-22 03:50:24.075 -07:00 [DBG] Start token request validation
2019-07-22 03:50:24.075 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:50:24.686 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:50:24.686 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:50:24.700 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:50:24.701 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:50:24.736 -07:00 [DBG] Token request success.
2019-07-22 03:51:34.990 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:51:34.990 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:51:34.991 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:51:34.991 -07:00 [DBG] Start discovery request
2019-07-22 03:51:35.044 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:51:35.044 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:51:35.044 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:51:35.044 -07:00 [DBG] Start key discovery request
2019-07-22 03:51:35.158 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:51:35.158 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:51:35.158 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:51:35.158 -07:00 [DBG] Start token request.
2019-07-22 03:51:35.158 -07:00 [DBG] Start client validation
2019-07-22 03:51:35.158 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:51:35.158 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:51:35.159 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:51:35.159 -07:00 [DBG] Secret id found: client
2019-07-22 03:51:35.159 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:51:35.159 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:51:35.159 -07:00 [DBG] Client validation success
2019-07-22 03:51:35.159 -07:00 [DBG] Start token request validation
2019-07-22 03:51:35.160 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:51:35.170 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:51:35.170 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:51:35.170 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:51:35.171 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:51:35.191 -07:00 [DBG] Token request success.
2019-07-22 03:52:04.811 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:52:04.811 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:52:04.811 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:52:04.811 -07:00 [DBG] Start discovery request
2019-07-22 03:52:04.865 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:52:04.866 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:52:04.900 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:52:04.900 -07:00 [DBG] Start key discovery request
2019-07-22 03:52:05.032 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:52:05.033 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:52:05.033 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:52:05.033 -07:00 [DBG] Start token request.
2019-07-22 03:52:05.033 -07:00 [DBG] Start client validation
2019-07-22 03:52:05.033 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:52:05.033 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:52:05.268 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:52:05.268 -07:00 [DBG] Secret id found: client
2019-07-22 03:52:05.268 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:52:05.268 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:52:05.269 -07:00 [DBG] Client validation success
2019-07-22 03:52:05.269 -07:00 [DBG] Start token request validation
2019-07-22 03:52:05.269 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:52:05.272 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:52:05.272 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:52:05.272 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:52:05.272 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:52:05.304 -07:00 [DBG] Token request success.
2019-07-22 03:53:47.521 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:53:47.521 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:53:47.521 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:53:47.522 -07:00 [DBG] Start discovery request
2019-07-22 03:53:47.573 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:53:47.573 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:53:47.573 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:53:47.573 -07:00 [DBG] Start key discovery request
2019-07-22 03:53:47.697 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:53:47.698 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:53:47.894 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:53:47.894 -07:00 [DBG] Start token request.
2019-07-22 03:53:47.894 -07:00 [DBG] Start client validation
2019-07-22 03:53:47.895 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:53:47.895 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:53:47.895 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:53:47.895 -07:00 [DBG] Secret id found: client
2019-07-22 03:53:47.895 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:53:47.895 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:53:47.895 -07:00 [DBG] Client validation success
2019-07-22 03:53:47.895 -07:00 [DBG] Start token request validation
2019-07-22 03:53:47.895 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:53:47.898 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:53:47.898 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:53:47.898 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:53:47.898 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:53:47.903 -07:00 [DBG] Token request success.
2019-07-22 03:55:12.886 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:55:12.892 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:55:12.895 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:55:12.895 -07:00 [DBG] Start discovery request
2019-07-22 03:55:13.172 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:55:13.172 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:55:13.173 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:55:13.173 -07:00 [DBG] Start key discovery request
2019-07-22 03:55:13.282 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:55:13.283 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:55:13.283 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:55:13.283 -07:00 [DBG] Start token request.
2019-07-22 03:55:13.283 -07:00 [DBG] Start client validation
2019-07-22 03:55:13.283 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:55:13.283 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:55:13.284 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:55:13.284 -07:00 [DBG] Secret id found: client
2019-07-22 03:55:13.284 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:55:13.284 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:55:13.284 -07:00 [DBG] Client validation success
2019-07-22 03:55:13.302 -07:00 [DBG] Start token request validation
2019-07-22 03:55:13.302 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:55:13.305 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:55:13.305 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:55:13.305 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:55:13.305 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:55:13.308 -07:00 [DBG] Token request success.
2019-07-22 03:58:54.923 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:58:54.924 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:58:54.924 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:58:54.924 -07:00 [DBG] Start discovery request
2019-07-22 03:58:54.982 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:58:54.982 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:58:55.001 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:58:55.001 -07:00 [DBG] Start key discovery request
2019-07-22 03:58:55.109 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:58:55.109 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:58:55.109 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:58:55.109 -07:00 [DBG] Start token request.
2019-07-22 03:58:55.109 -07:00 [DBG] Start client validation
2019-07-22 03:58:55.109 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:58:55.109 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:58:55.110 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:58:55.110 -07:00 [DBG] Secret id found: client
2019-07-22 03:58:55.110 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:58:55.110 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:58:55.110 -07:00 [DBG] Client validation success
2019-07-22 03:58:55.110 -07:00 [DBG] Start token request validation
2019-07-22 03:58:55.110 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:58:55.117 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:58:55.117 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:58:55.117 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:58:55.118 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:58:55.122 -07:00 [DBG] Token request success.
2019-07-22 03:59:59.422 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 03:59:59.443 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 03:59:59.443 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 03:59:59.443 -07:00 [DBG] Start discovery request
2019-07-22 03:59:59.511 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 03:59:59.512 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 03:59:59.512 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 03:59:59.512 -07:00 [DBG] Start key discovery request
2019-07-22 03:59:59.625 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 03:59:59.625 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 03:59:59.625 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 03:59:59.626 -07:00 [DBG] Start token request.
2019-07-22 03:59:59.626 -07:00 [DBG] Start client validation
2019-07-22 03:59:59.626 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 03:59:59.626 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 03:59:59.626 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 03:59:59.626 -07:00 [DBG] Secret id found: client
2019-07-22 03:59:59.626 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 03:59:59.626 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 03:59:59.626 -07:00 [DBG] Client validation success
2019-07-22 03:59:59.627 -07:00 [DBG] Start token request validation
2019-07-22 03:59:59.627 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 03:59:59.631 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 03:59:59.631 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 03:59:59.631 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 03:59:59.631 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 03:59:59.637 -07:00 [DBG] Token request success.
2019-07-22 04:16:30.019 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:16:30.019 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:16:30.019 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:16:30.019 -07:00 [DBG] Start discovery request
2019-07-22 04:16:30.076 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:16:30.076 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:16:30.076 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:16:30.076 -07:00 [DBG] Start key discovery request
2019-07-22 04:16:30.208 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:16:30.208 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:16:30.208 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:16:30.208 -07:00 [DBG] Start token request.
2019-07-22 04:16:30.208 -07:00 [DBG] Start client validation
2019-07-22 04:16:30.208 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:16:30.209 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:16:30.209 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:16:30.209 -07:00 [DBG] Secret id found: client
2019-07-22 04:16:30.209 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:16:30.210 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:16:30.210 -07:00 [DBG] Client validation success
2019-07-22 04:16:30.211 -07:00 [DBG] Start token request validation
2019-07-22 04:16:30.212 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:16:34.647 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:16:34.647 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:16:34.647 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:16:34.647 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 04:16:34.651 -07:00 [DBG] Token request success.
2019-07-22 04:17:55.485 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:17:55.486 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:17:55.486 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:17:55.486 -07:00 [DBG] Start discovery request
2019-07-22 04:17:55.585 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:17:55.586 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:17:55.586 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:17:55.586 -07:00 [DBG] Start key discovery request
2019-07-22 04:17:55.722 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:17:55.722 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:17:55.722 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:17:55.722 -07:00 [DBG] Start token request.
2019-07-22 04:17:55.722 -07:00 [DBG] Start client validation
2019-07-22 04:17:55.722 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:17:55.722 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:17:55.723 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:17:55.723 -07:00 [DBG] Secret id found: client
2019-07-22 04:17:55.723 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:17:55.723 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:17:55.723 -07:00 [DBG] Client validation success
2019-07-22 04:17:55.723 -07:00 [DBG] Start token request validation
2019-07-22 04:17:55.723 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:17:55.729 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:17:55.729 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:17:55.729 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:17:55.729 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 04:17:55.752 -07:00 [DBG] Token request success.
2019-07-22 04:18:54.385 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:18:54.385 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:18:54.385 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:18:54.385 -07:00 [DBG] Start discovery request
2019-07-22 04:18:54.461 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:18:54.461 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:18:54.461 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:18:54.461 -07:00 [DBG] Start key discovery request
2019-07-22 04:18:54.582 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:18:54.582 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:18:54.582 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:18:54.582 -07:00 [DBG] Start token request.
2019-07-22 04:18:54.582 -07:00 [DBG] Start client validation
2019-07-22 04:18:54.582 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:18:54.582 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:18:54.596 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:18:54.596 -07:00 [DBG] Secret id found: client
2019-07-22 04:18:54.596 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:18:54.596 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:18:54.596 -07:00 [DBG] Client validation success
2019-07-22 04:18:54.596 -07:00 [DBG] Start token request validation
2019-07-22 04:18:54.596 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:18:54.599 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:18:54.599 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:18:54.599 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:18:54.599 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 04:18:54.619 -07:00 [DBG] Token request success.
2019-07-22 04:43:47.205 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:43:47.206 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:43:47.206 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:43:47.206 -07:00 [DBG] Start discovery request
2019-07-22 04:43:47.316 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:43:47.316 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:43:47.316 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:43:47.317 -07:00 [DBG] Start key discovery request
2019-07-22 04:43:47.483 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:43:47.483 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:43:47.483 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:43:47.484 -07:00 [DBG] Start token request.
2019-07-22 04:43:47.484 -07:00 [DBG] Start client validation
2019-07-22 04:43:47.484 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:43:47.484 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:43:47.484 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:43:47.484 -07:00 [DBG] Secret id found: client
2019-07-22 04:43:47.484 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:43:47.485 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:43:47.485 -07:00 [DBG] Client validation success
2019-07-22 04:43:47.485 -07:00 [DBG] Start token request validation
2019-07-22 04:43:47.485 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:43:51.299 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:43:51.321 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:43:51.322 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:43:51.322 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 04:43:51.328 -07:00 [DBG] Token request success.
2019-07-22 04:44:51.789 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:44:51.789 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:44:51.790 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:44:51.790 -07:00 [DBG] Start discovery request
2019-07-22 04:44:51.909 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:44:51.910 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:44:51.910 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:44:51.910 -07:00 [DBG] Start key discovery request
2019-07-22 04:44:52.082 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:44:52.082 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:44:52.082 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:44:52.082 -07:00 [DBG] Start token request.
2019-07-22 04:44:52.082 -07:00 [DBG] Start client validation
2019-07-22 04:44:52.082 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:44:52.083 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:44:52.083 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:44:52.083 -07:00 [DBG] Secret id found: client
2019-07-22 04:44:52.083 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:44:52.083 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:44:52.084 -07:00 [DBG] Client validation success
2019-07-22 04:44:52.084 -07:00 [DBG] Start token request validation
2019-07-22 04:44:52.084 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:44:52.088 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:44:52.088 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:44:52.088 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:44:52.089 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 04:44:52.118 -07:00 [DBG] Token request success.
2019-07-22 04:45:39.289 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:45:39.312 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:45:39.312 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:45:39.312 -07:00 [DBG] Start discovery request
2019-07-22 04:45:39.402 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:45:39.402 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:45:39.402 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:45:39.402 -07:00 [DBG] Start key discovery request
2019-07-22 04:45:39.575 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:45:39.575 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:45:39.576 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:45:39.576 -07:00 [DBG] Start token request.
2019-07-22 04:45:39.576 -07:00 [DBG] Start client validation
2019-07-22 04:45:39.576 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:45:39.576 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:45:39.582 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:45:39.582 -07:00 [DBG] Secret id found: client
2019-07-22 04:45:39.583 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:45:39.583 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:45:39.583 -07:00 [DBG] Client validation success
2019-07-22 04:45:39.583 -07:00 [DBG] Start token request validation
2019-07-22 04:45:39.583 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:45:39.588 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:45:39.588 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:45:39.588 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:45:39.588 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 04:45:39.597 -07:00 [DBG] Token request success.
2019-07-22 04:52:53.201 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 04:52:53.201 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 04:52:53.201 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 04:52:53.202 -07:00 [DBG] Start discovery request
2019-07-22 04:52:53.278 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 04:52:53.283 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 04:52:53.284 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 04:52:53.284 -07:00 [DBG] Start key discovery request
2019-07-22 04:52:53.472 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 04:52:53.472 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 04:52:53.472 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 04:52:53.472 -07:00 [DBG] Start token request.
2019-07-22 04:52:53.473 -07:00 [DBG] Start client validation
2019-07-22 04:52:53.473 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 04:52:53.473 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 04:52:53.473 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 04:52:53.473 -07:00 [DBG] Secret id found: client
2019-07-22 04:52:53.473 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 04:52:53.474 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 04:52:53.474 -07:00 [DBG] Client validation success
2019-07-22 04:52:53.474 -07:00 [DBG] Start token request validation
2019-07-22 04:52:53.474 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 04:52:53.484 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 04:52:53.485 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 04:52:53.485 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 04:52:53.485 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 04:52:53.493 -07:00 [DBG] Token request success.
2019-07-22 14:31:33.783 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 14:31:33.846 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-22 14:31:33.854 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-22 14:31:33.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-22 14:31:33.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-22 14:31:33.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-22 14:31:33.855 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-22 14:31:34.264 -07:00 [DBG] Login Url: /Account/Login
2019-07-22 14:31:34.266 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 14:31:34.266 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-22 14:31:34.266 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-22 14:31:34.266 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 14:31:34.266 -07:00 [DBG] Error Url: /home/error
2019-07-22 14:31:34.266 -07:00 [DBG] Error Id Parameter: errorId
2019-07-22 14:33:31.705 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:33:32.049 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:33:32.049 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:33:32.052 -07:00 [DBG] Start discovery request
2019-07-22 14:33:32.264 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:33:32.264 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:33:32.265 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:33:32.268 -07:00 [DBG] Start key discovery request
2019-07-22 14:33:32.402 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 14:33:32.459 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 14:33:32.459 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 14:33:32.466 -07:00 [DBG] Start token request.
2019-07-22 14:33:32.606 -07:00 [DBG] Start client validation
2019-07-22 14:33:32.611 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 14:33:32.615 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 14:33:32.652 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 14:33:32.652 -07:00 [DBG] Secret id found: client
2019-07-22 14:33:32.663 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 14:33:32.671 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 14:33:32.671 -07:00 [DBG] Client validation success
2019-07-22 14:33:32.697 -07:00 [DBG] Start token request validation
2019-07-22 14:33:32.707 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 14:33:43.232 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 14:33:43.244 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 14:33:43.274 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 14:33:43.275 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-22 14:33:43.690 -07:00 [DBG] Token request success.
2019-07-22 14:33:45.989 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:33:45.989 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:33:45.989 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:33:45.989 -07:00 [DBG] Start discovery request
2019-07-22 14:33:46.107 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:33:46.108 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:33:46.108 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:33:46.108 -07:00 [DBG] Start key discovery request
2019-07-22 14:33:49.279 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:33:49.279 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:33:49.279 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:33:49.279 -07:00 [DBG] Start discovery request
2019-07-22 14:33:49.373 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:33:49.374 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:33:49.374 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:33:49.374 -07:00 [DBG] Start key discovery request
2019-07-22 14:34:55.266 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 14:34:55.270 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 14:34:55.270 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 14:34:55.270 -07:00 [DBG] Start discovery request
2019-07-22 14:34:55.322 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 14:34:55.322 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 14:34:55.322 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 14:34:55.322 -07:00 [DBG] Start key discovery request
2019-07-22 14:34:55.434 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 14:34:55.434 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 14:34:55.434 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 14:34:55.434 -07:00 [DBG] Start token request.
2019-07-22 14:34:55.434 -07:00 [DBG] Start client validation
2019-07-22 14:34:55.434 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 14:34:55.434 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 14:34:55.435 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 14:34:55.435 -07:00 [DBG] Secret id found: client
2019-07-22 14:34:55.435 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 14:34:55.435 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 14:34:55.435 -07:00 [DBG] Client validation success
2019-07-22 14:34:55.436 -07:00 [DBG] Start token request validation
2019-07-22 14:34:55.436 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 14:34:55.444 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 14:34:55.444 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 14:34:55.444 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 14:34:55.444 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 14:34:55.452 -07:00 [DBG] Token request success.
2019-07-22 15:50:10.436 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 15:50:10.491 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 15:50:10.491 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 15:50:10.491 -07:00 [DBG] Start discovery request
2019-07-22 15:50:10.653 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 15:50:10.653 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 15:50:10.653 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 15:50:10.653 -07:00 [DBG] Start key discovery request
2019-07-22 15:50:10.806 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 15:50:10.807 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 15:50:10.807 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 15:50:10.807 -07:00 [DBG] Start token request.
2019-07-22 15:50:10.807 -07:00 [DBG] Start client validation
2019-07-22 15:50:10.807 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 15:50:10.807 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 15:50:10.820 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 15:50:10.821 -07:00 [DBG] Secret id found: client
2019-07-22 15:50:10.821 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 15:50:10.821 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 15:50:10.821 -07:00 [DBG] Client validation success
2019-07-22 15:50:10.829 -07:00 [DBG] Start token request validation
2019-07-22 15:50:10.829 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 15:50:11.435 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 15:50:11.435 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 15:50:11.436 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 15:50:11.436 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 15:50:11.448 -07:00 [DBG] Token request success.
2019-07-22 17:34:38.545 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 17:34:38.547 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 17:34:38.547 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 17:34:38.547 -07:00 [DBG] Start discovery request
2019-07-22 17:34:38.603 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 17:34:38.603 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 17:34:38.603 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 17:34:38.604 -07:00 [DBG] Start key discovery request
2019-07-22 17:34:38.714 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 17:34:38.715 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 17:34:38.715 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 17:34:38.715 -07:00 [DBG] Start token request.
2019-07-22 17:34:38.715 -07:00 [DBG] Start client validation
2019-07-22 17:34:38.715 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 17:34:38.715 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 17:34:38.732 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 17:34:38.732 -07:00 [DBG] Secret id found: client
2019-07-22 17:34:38.732 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 17:34:38.732 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 17:34:38.732 -07:00 [DBG] Client validation success
2019-07-22 17:34:38.733 -07:00 [DBG] Start token request validation
2019-07-22 17:34:38.733 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 17:34:38.756 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 17:34:38.756 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 17:34:38.756 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 17:34:38.757 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 17:34:38.761 -07:00 [DBG] Token request success.
2019-07-22 17:35:42.368 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-22 17:35:42.484 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-22 17:35:42.487 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-22 17:35:42.487 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-22 17:35:42.487 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-22 17:35:42.487 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-22 17:35:42.487 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-22 17:35:42.663 -07:00 [DBG] Login Url: /Account/Login
2019-07-22 17:35:42.665 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-22 17:35:42.665 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-22 17:35:42.665 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-22 17:35:42.665 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-22 17:35:42.665 -07:00 [DBG] Error Url: /home/error
2019-07-22 17:35:42.665 -07:00 [DBG] Error Id Parameter: errorId
2019-07-22 17:35:42.789 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 17:35:43.072 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 17:35:43.073 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 17:35:43.076 -07:00 [DBG] Start discovery request
2019-07-22 17:35:43.307 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 17:35:43.308 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 17:35:43.309 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 17:35:43.312 -07:00 [DBG] Start key discovery request
2019-07-22 18:42:05.958 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 18:42:05.985 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 18:42:05.986 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 18:42:05.986 -07:00 [DBG] Start discovery request
2019-07-22 18:42:06.050 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 18:42:06.051 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 18:42:06.051 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 18:42:06.051 -07:00 [DBG] Start key discovery request
2019-07-22 18:42:06.205 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 18:42:06.213 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 18:42:06.213 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 18:42:06.242 -07:00 [DBG] Start token request.
2019-07-22 18:42:06.247 -07:00 [DBG] Start client validation
2019-07-22 18:42:06.252 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 18:42:06.256 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 18:42:06.270 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 18:42:06.271 -07:00 [DBG] Secret id found: client
2019-07-22 18:42:06.282 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 18:42:06.312 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 18:42:06.312 -07:00 [DBG] Client validation success
2019-07-22 18:42:06.368 -07:00 [DBG] Start token request validation
2019-07-22 18:42:06.399 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 18:42:15.073 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 18:42:15.086 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 18:42:15.235 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 18:42:15.236 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 18:42:15.741 -07:00 [DBG] Token request success.
2019-07-22 18:43:03.135 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 18:43:03.135 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 18:43:03.135 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 18:43:03.135 -07:00 [DBG] Start discovery request
2019-07-22 18:43:03.203 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 18:43:03.204 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 18:43:03.204 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 18:43:03.204 -07:00 [DBG] Start key discovery request
2019-07-22 18:43:03.326 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 18:43:03.327 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 18:43:03.327 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 18:43:03.327 -07:00 [DBG] Start token request.
2019-07-22 18:43:03.327 -07:00 [DBG] Start client validation
2019-07-22 18:43:03.327 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 18:43:03.327 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 18:43:03.371 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 18:43:03.371 -07:00 [DBG] Secret id found: client
2019-07-22 18:43:03.373 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 18:43:03.374 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 18:43:03.374 -07:00 [DBG] Client validation success
2019-07-22 18:43:03.374 -07:00 [DBG] Start token request validation
2019-07-22 18:43:03.374 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 18:43:03.439 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 18:43:03.439 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 18:43:03.440 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 18:43:03.440 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 18:43:03.444 -07:00 [DBG] Token request success.
2019-07-22 18:44:40.310 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 18:44:40.310 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 18:44:40.310 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 18:44:40.310 -07:00 [DBG] Start discovery request
2019-07-22 18:44:40.361 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 18:44:40.362 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 18:44:40.362 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 18:44:40.362 -07:00 [DBG] Start key discovery request
2019-07-22 18:44:40.478 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 18:44:40.478 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 18:44:40.478 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 18:44:40.478 -07:00 [DBG] Start token request.
2019-07-22 18:44:40.478 -07:00 [DBG] Start client validation
2019-07-22 18:44:40.478 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 18:44:40.478 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 18:44:40.479 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 18:44:40.479 -07:00 [DBG] Secret id found: client
2019-07-22 18:44:40.479 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 18:44:40.479 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 18:44:40.479 -07:00 [DBG] Client validation success
2019-07-22 18:44:40.479 -07:00 [DBG] Start token request validation
2019-07-22 18:44:40.479 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 18:44:40.483 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 18:44:40.484 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 18:44:40.484 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 18:44:40.484 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 18:44:40.489 -07:00 [DBG] Token request success.
2019-07-22 21:02:46.462 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 21:02:46.465 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 21:02:46.465 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 21:02:46.465 -07:00 [DBG] Start discovery request
2019-07-22 21:02:46.610 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 21:02:46.610 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 21:02:46.610 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 21:02:46.611 -07:00 [DBG] Start key discovery request
2019-07-22 21:02:46.839 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 21:02:46.840 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 21:02:46.840 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 21:02:46.840 -07:00 [DBG] Start token request.
2019-07-22 21:02:46.840 -07:00 [DBG] Start client validation
2019-07-22 21:02:46.840 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 21:02:46.840 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 21:02:46.841 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 21:02:46.841 -07:00 [DBG] Secret id found: client
2019-07-22 21:02:46.841 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 21:02:46.842 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 21:02:46.842 -07:00 [DBG] Client validation success
2019-07-22 21:02:46.842 -07:00 [DBG] Start token request validation
2019-07-22 21:02:46.842 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 21:02:56.961 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 21:02:56.963 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 21:02:56.963 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 21:02:56.963 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 21:02:56.973 -07:00 [DBG] Token request success.
2019-07-22 23:54:23.489 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 23:54:23.584 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 23:54:23.584 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 23:54:23.585 -07:00 [DBG] Start discovery request
2019-07-22 23:54:24.000 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 23:54:24.000 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 23:54:24.007 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 23:54:24.007 -07:00 [DBG] Start key discovery request
2019-07-22 23:54:24.350 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 23:54:24.351 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 23:54:24.351 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 23:54:24.352 -07:00 [DBG] Start token request.
2019-07-22 23:54:24.352 -07:00 [DBG] Start client validation
2019-07-22 23:54:24.352 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 23:54:24.352 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 23:54:24.399 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 23:54:24.399 -07:00 [DBG] Secret id found: client
2019-07-22 23:54:24.399 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 23:54:24.412 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 23:54:24.412 -07:00 [DBG] Client validation success
2019-07-22 23:54:24.428 -07:00 [DBG] Start token request validation
2019-07-22 23:54:24.429 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 23:54:38.758 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 23:54:38.759 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 23:54:38.759 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 23:54:38.759 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 23:54:38.828 -07:00 [DBG] Token request success.
2019-07-22 23:57:26.416 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-22 23:57:26.417 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-22 23:57:26.419 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-22 23:57:26.419 -07:00 [DBG] Start discovery request
2019-07-22 23:57:26.490 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-22 23:57:26.490 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-22 23:57:26.490 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-22 23:57:26.491 -07:00 [DBG] Start key discovery request
2019-07-22 23:57:26.665 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-22 23:57:26.665 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-22 23:57:26.665 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-22 23:57:26.665 -07:00 [DBG] Start token request.
2019-07-22 23:57:26.665 -07:00 [DBG] Start client validation
2019-07-22 23:57:26.666 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-22 23:57:26.666 -07:00 [DBG] Start parsing for secret in post body
2019-07-22 23:57:26.667 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-22 23:57:26.667 -07:00 [DBG] Secret id found: client
2019-07-22 23:57:26.667 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-22 23:57:26.667 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-22 23:57:26.667 -07:00 [DBG] Client validation success
2019-07-22 23:57:26.667 -07:00 [DBG] Start token request validation
2019-07-22 23:57:26.667 -07:00 [DBG] Start resource owner password token request validation
2019-07-22 23:57:26.673 -07:00 [DBG] Resource owner password token request validation success.
2019-07-22 23:57:26.673 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-22 23:57:26.673 -07:00 [DBG] Getting claims for access token for client: client
2019-07-22 23:57:26.673 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-22 23:57:26.681 -07:00 [DBG] Token request success.
2019-07-23 00:26:41.697 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 00:26:41.698 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 00:26:41.699 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 00:26:41.699 -07:00 [DBG] Start discovery request
2019-07-23 00:26:41.775 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 00:26:41.775 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 00:26:41.775 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 00:26:41.775 -07:00 [DBG] Start key discovery request
2019-07-23 00:26:41.908 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 00:26:41.909 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 00:26:41.909 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 00:26:41.909 -07:00 [DBG] Start token request.
2019-07-23 00:26:41.909 -07:00 [DBG] Start client validation
2019-07-23 00:26:41.909 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 00:26:41.909 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 00:26:41.910 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 00:26:41.910 -07:00 [DBG] Secret id found: client
2019-07-23 00:26:41.910 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 00:26:41.910 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 00:26:41.910 -07:00 [DBG] Client validation success
2019-07-23 00:26:41.910 -07:00 [DBG] Start token request validation
2019-07-23 00:26:41.910 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 00:26:45.948 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 00:26:45.948 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 00:26:45.949 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 00:26:45.949 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 00:26:45.953 -07:00 [DBG] Token request success.
2019-07-23 00:28:57.958 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 00:28:57.959 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 00:28:57.959 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 00:28:57.959 -07:00 [DBG] Start discovery request
2019-07-23 00:28:58.047 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 00:28:58.048 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 00:28:58.048 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 00:28:58.048 -07:00 [DBG] Start key discovery request
2019-07-23 00:28:58.167 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 00:28:58.167 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 00:28:58.167 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 00:28:58.167 -07:00 [DBG] Start token request.
2019-07-23 00:28:58.167 -07:00 [DBG] Start client validation
2019-07-23 00:28:58.167 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 00:28:58.167 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 00:28:58.168 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 00:28:58.168 -07:00 [DBG] Secret id found: client
2019-07-23 00:28:58.168 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 00:28:58.168 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 00:28:58.168 -07:00 [DBG] Client validation success
2019-07-23 00:28:58.175 -07:00 [DBG] Start token request validation
2019-07-23 00:28:58.176 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 00:28:58.178 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 00:28:58.179 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 00:28:58.179 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 00:28:58.179 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 00:28:58.183 -07:00 [DBG] Token request success.
2019-07-23 15:09:05.346 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 15:09:05.416 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 15:09:05.420 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 15:09:05.420 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 15:09:05.420 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 15:09:05.420 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 15:09:05.420 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 15:09:06.320 -07:00 [DBG] Login Url: /Account/Login
2019-07-23 15:09:06.323 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 15:09:06.323 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-23 15:09:06.323 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-23 15:09:06.323 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 15:09:06.323 -07:00 [DBG] Error Url: /home/error
2019-07-23 15:09:06.323 -07:00 [DBG] Error Id Parameter: errorId
2019-07-23 15:10:20.533 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:10:21.007 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:10:21.007 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:10:21.026 -07:00 [DBG] Start discovery request
2019-07-23 15:10:21.178 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:10:21.179 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:10:21.179 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:10:21.183 -07:00 [DBG] Start key discovery request
2019-07-23 15:10:21.338 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 15:10:21.344 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 15:10:21.344 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 15:10:21.351 -07:00 [DBG] Start token request.
2019-07-23 15:10:21.357 -07:00 [DBG] Start client validation
2019-07-23 15:10:21.362 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 15:10:21.365 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 15:10:21.411 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 15:10:21.411 -07:00 [DBG] Secret id found: client
2019-07-23 15:10:21.422 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 15:10:21.431 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 15:10:21.431 -07:00 [DBG] Client validation success
2019-07-23 15:10:21.441 -07:00 [DBG] Start token request validation
2019-07-23 15:10:21.453 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 15:10:32.800 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 15:10:32.813 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 15:10:32.876 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 15:10:32.877 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 15:10:33.081 -07:00 [DBG] Token request success.
2019-07-23 15:10:34.894 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:10:34.894 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:10:34.895 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:10:34.895 -07:00 [DBG] Start discovery request
2019-07-23 15:10:35.119 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:10:35.119 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:10:35.119 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:10:35.119 -07:00 [DBG] Start key discovery request
2019-07-23 15:10:37.601 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 15:10:37.601 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 15:10:37.601 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 15:10:37.601 -07:00 [DBG] Start discovery request
2019-07-23 15:10:37.704 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 15:10:37.704 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 15:10:37.704 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 15:10:37.704 -07:00 [DBG] Start key discovery request
2019-07-23 16:08:00.154 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 16:08:00.225 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 16:08:00.232 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 16:08:00.232 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 16:08:00.232 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 16:08:00.232 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 16:08:00.233 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 16:08:00.831 -07:00 [DBG] Login Url: /Account/Login
2019-07-23 16:08:00.835 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 16:08:00.835 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-23 16:08:00.835 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-23 16:08:00.835 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 16:08:00.835 -07:00 [DBG] Error Url: /home/error
2019-07-23 16:08:00.835 -07:00 [DBG] Error Id Parameter: errorId
2019-07-23 16:08:43.676 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:08:44.464 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:08:44.464 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:08:44.484 -07:00 [DBG] Start discovery request
2019-07-23 16:08:44.747 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:08:44.748 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:08:44.748 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:08:44.753 -07:00 [DBG] Start key discovery request
2019-07-23 16:33:05.278 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:33:05.386 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:33:05.387 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:33:05.387 -07:00 [DBG] Start discovery request
2019-07-23 16:33:05.675 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:33:05.677 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:33:05.682 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:33:05.682 -07:00 [DBG] Start key discovery request
2019-07-23 16:33:06.051 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:33:06.116 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:33:06.116 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:33:06.140 -07:00 [DBG] Start token request.
2019-07-23 16:33:06.159 -07:00 [DBG] Start client validation
2019-07-23 16:33:06.165 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:33:06.170 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:33:06.354 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:33:06.354 -07:00 [DBG] Secret id found: client
2019-07-23 16:33:06.375 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:33:06.438 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:33:06.438 -07:00 [DBG] Client validation success
2019-07-23 16:33:06.528 -07:00 [DBG] Start token request validation
2019-07-23 16:33:06.545 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:33:08.604 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:33:08.622 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:33:08.677 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:33:08.678 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:33:09.083 -07:00 [DBG] Token request success.
2019-07-23 16:33:11.134 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:33:11.134 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:33:11.134 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:33:11.134 -07:00 [DBG] Start discovery request
2019-07-23 16:33:11.560 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:33:11.561 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:33:11.561 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:33:11.561 -07:00 [DBG] Start key discovery request
2019-07-23 16:36:02.760 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:36:02.761 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:36:02.761 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:36:02.761 -07:00 [DBG] Start discovery request
2019-07-23 16:36:02.895 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:36:02.895 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:36:02.896 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:36:02.896 -07:00 [DBG] Start key discovery request
2019-07-23 16:36:03.214 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:36:03.215 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:36:03.216 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:36:03.216 -07:00 [DBG] Start token request.
2019-07-23 16:36:03.217 -07:00 [DBG] Start client validation
2019-07-23 16:36:03.219 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:36:03.226 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:36:03.226 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:36:03.227 -07:00 [DBG] Secret id found: client
2019-07-23 16:36:03.227 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:36:03.227 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:36:03.227 -07:00 [DBG] Client validation success
2019-07-23 16:36:03.228 -07:00 [DBG] Start token request validation
2019-07-23 16:36:03.228 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:36:03.255 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:36:03.256 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:36:03.257 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:36:03.257 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:36:03.280 -07:00 [DBG] Token request success.
2019-07-23 16:39:22.171 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 16:39:22.224 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 16:39:22.227 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 16:39:22.227 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 16:39:22.227 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 16:39:22.227 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 16:39:22.227 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 16:39:23.199 -07:00 [DBG] Login Url: /Account/Login
2019-07-23 16:39:23.202 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 16:39:23.202 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-23 16:39:23.202 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-23 16:39:23.202 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 16:39:23.202 -07:00 [DBG] Error Url: /home/error
2019-07-23 16:39:23.202 -07:00 [DBG] Error Id Parameter: errorId
2019-07-23 16:39:23.228 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:39:23.289 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:39:23.290 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:39:23.294 -07:00 [DBG] Start discovery request
2019-07-23 16:39:23.497 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:39:23.498 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:39:23.498 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:39:23.505 -07:00 [DBG] Start key discovery request
2019-07-23 16:39:23.679 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:39:23.687 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:39:23.687 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:39:23.701 -07:00 [DBG] Start token request.
2019-07-23 16:39:23.711 -07:00 [DBG] Start client validation
2019-07-23 16:39:23.718 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:39:23.723 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:39:23.741 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:39:23.741 -07:00 [DBG] Secret id found: client
2019-07-23 16:39:23.759 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:39:23.771 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:39:23.771 -07:00 [DBG] Client validation success
2019-07-23 16:39:23.787 -07:00 [DBG] Start token request validation
2019-07-23 16:39:23.801 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:39:24.275 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:39:24.293 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:39:24.334 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:39:24.335 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:39:24.431 -07:00 [DBG] Token request success.
2019-07-23 16:39:27.851 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:39:27.851 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:39:27.851 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:39:27.851 -07:00 [DBG] Start discovery request
2019-07-23 16:39:27.937 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:39:27.938 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:39:27.938 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:39:27.938 -07:00 [DBG] Start key discovery request
2019-07-23 16:39:31.559 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:39:31.559 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:39:31.559 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:39:31.560 -07:00 [DBG] Start discovery request
2019-07-23 16:39:31.653 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:39:31.653 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:39:31.653 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:39:31.653 -07:00 [DBG] Start key discovery request
2019-07-23 16:43:53.888 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:43:53.889 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:43:53.889 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:43:53.889 -07:00 [DBG] Start discovery request
2019-07-23 16:43:53.965 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:43:53.965 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:43:53.965 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:43:53.965 -07:00 [DBG] Start key discovery request
2019-07-23 16:43:54.115 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:43:54.116 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:43:54.116 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:43:54.116 -07:00 [DBG] Start token request.
2019-07-23 16:43:54.116 -07:00 [DBG] Start client validation
2019-07-23 16:43:54.117 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:43:54.117 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:43:54.117 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:43:54.117 -07:00 [DBG] Secret id found: client
2019-07-23 16:43:54.117 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:43:54.118 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:43:54.118 -07:00 [DBG] Client validation success
2019-07-23 16:43:54.118 -07:00 [DBG] Start token request validation
2019-07-23 16:43:54.118 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:43:54.129 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:43:54.130 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:43:54.130 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:43:54.130 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:43:54.136 -07:00 [DBG] Token request success.
2019-07-23 16:46:52.779 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:46:52.779 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:46:52.779 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:46:52.779 -07:00 [DBG] Start discovery request
2019-07-23 16:46:52.827 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:46:52.828 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:46:52.828 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:46:52.828 -07:00 [DBG] Start key discovery request
2019-07-23 16:46:52.951 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:46:52.952 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:46:52.952 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:46:52.952 -07:00 [DBG] Start token request.
2019-07-23 16:46:52.952 -07:00 [DBG] Start client validation
2019-07-23 16:46:52.952 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:46:52.952 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:46:52.952 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:46:52.952 -07:00 [DBG] Secret id found: client
2019-07-23 16:46:52.952 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:46:52.953 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:46:52.953 -07:00 [DBG] Client validation success
2019-07-23 16:46:52.953 -07:00 [DBG] Start token request validation
2019-07-23 16:46:52.953 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:46:52.961 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:46:52.962 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:46:52.962 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:46:52.962 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:46:52.969 -07:00 [DBG] Token request success.
2019-07-23 16:49:31.999 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:49:31.999 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:49:31.999 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:49:31.999 -07:00 [DBG] Start discovery request
2019-07-23 16:49:32.046 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:49:32.046 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:49:32.046 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:49:32.046 -07:00 [DBG] Start key discovery request
2019-07-23 16:49:32.173 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:49:32.174 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:49:32.174 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:49:32.174 -07:00 [DBG] Start token request.
2019-07-23 16:49:32.174 -07:00 [DBG] Start client validation
2019-07-23 16:49:32.174 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:49:32.174 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:49:32.174 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:49:32.175 -07:00 [DBG] Secret id found: client
2019-07-23 16:49:32.175 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:49:32.175 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:49:32.175 -07:00 [DBG] Client validation success
2019-07-23 16:49:32.175 -07:00 [DBG] Start token request validation
2019-07-23 16:49:32.175 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:49:32.183 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:49:32.183 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:49:32.184 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:49:32.184 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:49:32.192 -07:00 [DBG] Token request success.
2019-07-23 16:50:23.895 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:50:23.895 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:50:23.895 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:50:23.895 -07:00 [DBG] Start discovery request
2019-07-23 16:50:23.940 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:50:23.940 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:50:23.940 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:50:23.940 -07:00 [DBG] Start key discovery request
2019-07-23 16:50:24.081 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:50:24.081 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:50:24.081 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:50:24.100 -07:00 [DBG] Start token request.
2019-07-23 16:50:24.107 -07:00 [DBG] Start client validation
2019-07-23 16:50:24.107 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:50:24.108 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:50:24.108 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:50:24.108 -07:00 [DBG] Secret id found: client
2019-07-23 16:50:24.108 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:50:24.108 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:50:24.108 -07:00 [DBG] Client validation success
2019-07-23 16:50:24.108 -07:00 [DBG] Start token request validation
2019-07-23 16:50:24.108 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:50:24.114 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:50:24.114 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:50:24.114 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:50:24.114 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:50:24.121 -07:00 [DBG] Token request success.
2019-07-23 16:51:45.470 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:51:45.471 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:51:45.471 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:51:45.471 -07:00 [DBG] Start discovery request
2019-07-23 16:51:45.522 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:51:45.523 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:51:45.523 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:51:45.523 -07:00 [DBG] Start key discovery request
2019-07-23 16:51:45.648 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:51:45.648 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:51:45.648 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:51:45.648 -07:00 [DBG] Start token request.
2019-07-23 16:51:45.648 -07:00 [DBG] Start client validation
2019-07-23 16:51:45.648 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:51:45.649 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:51:45.649 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:51:45.649 -07:00 [DBG] Secret id found: client
2019-07-23 16:51:45.649 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:51:45.649 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:51:45.649 -07:00 [DBG] Client validation success
2019-07-23 16:51:45.649 -07:00 [DBG] Start token request validation
2019-07-23 16:51:45.650 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:51:45.656 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:51:45.656 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:51:45.656 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:51:45.657 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:51:45.663 -07:00 [DBG] Token request success.
2019-07-23 16:52:39.934 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:52:39.934 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:52:39.935 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:52:39.935 -07:00 [DBG] Start discovery request
2019-07-23 16:52:40.005 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:52:40.005 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:52:40.005 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:52:40.005 -07:00 [DBG] Start key discovery request
2019-07-23 16:52:40.149 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:52:40.150 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:52:40.150 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:52:40.150 -07:00 [DBG] Start token request.
2019-07-23 16:52:40.150 -07:00 [DBG] Start client validation
2019-07-23 16:52:40.150 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:52:40.150 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:52:40.151 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:52:40.151 -07:00 [DBG] Secret id found: client
2019-07-23 16:52:40.151 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:52:40.151 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:52:40.151 -07:00 [DBG] Client validation success
2019-07-23 16:52:40.151 -07:00 [DBG] Start token request validation
2019-07-23 16:52:40.151 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:52:40.158 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:52:40.158 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:52:40.158 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:52:40.158 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:52:40.164 -07:00 [DBG] Token request success.
2019-07-23 16:53:50.167 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:53:50.167 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:53:50.167 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:53:50.167 -07:00 [DBG] Start discovery request
2019-07-23 16:53:50.217 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:53:50.218 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:53:50.218 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:53:50.218 -07:00 [DBG] Start key discovery request
2019-07-23 16:53:50.348 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:53:50.348 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:53:50.348 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:53:50.348 -07:00 [DBG] Start token request.
2019-07-23 16:53:50.349 -07:00 [DBG] Start client validation
2019-07-23 16:53:50.349 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:53:50.349 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:53:50.349 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:53:50.349 -07:00 [DBG] Secret id found: client
2019-07-23 16:53:50.349 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:53:50.349 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:53:50.350 -07:00 [DBG] Client validation success
2019-07-23 16:53:50.350 -07:00 [DBG] Start token request validation
2019-07-23 16:53:50.350 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:53:50.355 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:53:50.355 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:53:50.355 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:53:50.355 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:53:50.361 -07:00 [DBG] Token request success.
2019-07-23 16:56:16.138 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 16:56:16.138 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 16:56:16.138 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 16:56:16.138 -07:00 [DBG] Start discovery request
2019-07-23 16:56:16.203 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 16:56:16.204 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 16:56:16.204 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 16:56:16.204 -07:00 [DBG] Start key discovery request
2019-07-23 16:56:16.394 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 16:56:16.394 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 16:56:16.394 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 16:56:16.394 -07:00 [DBG] Start token request.
2019-07-23 16:56:16.394 -07:00 [DBG] Start client validation
2019-07-23 16:56:16.394 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 16:56:16.395 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 16:56:16.395 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 16:56:16.395 -07:00 [DBG] Secret id found: client
2019-07-23 16:56:16.395 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 16:56:16.395 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 16:56:16.396 -07:00 [DBG] Client validation success
2019-07-23 16:56:16.396 -07:00 [DBG] Start token request validation
2019-07-23 16:56:16.396 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 16:56:16.402 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 16:56:16.403 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 16:56:16.403 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 16:56:16.403 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 16:56:16.409 -07:00 [DBG] Token request success.
2019-07-23 17:00:03.436 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:00:03.436 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:00:03.436 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:00:03.436 -07:00 [DBG] Start discovery request
2019-07-23 17:00:03.521 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:00:03.521 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:00:03.521 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:00:03.521 -07:00 [DBG] Start key discovery request
2019-07-23 17:00:03.746 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:00:03.746 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:00:03.746 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:00:03.746 -07:00 [DBG] Start token request.
2019-07-23 17:00:03.746 -07:00 [DBG] Start client validation
2019-07-23 17:00:03.746 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:00:03.747 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:00:03.747 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:00:03.747 -07:00 [DBG] Secret id found: client
2019-07-23 17:00:03.747 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:00:03.747 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:00:03.747 -07:00 [DBG] Client validation success
2019-07-23 17:00:03.747 -07:00 [DBG] Start token request validation
2019-07-23 17:00:03.747 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:00:03.755 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:00:03.755 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:00:03.755 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:00:03.755 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:00:03.762 -07:00 [DBG] Token request success.
2019-07-23 17:05:06.255 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:05:06.256 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:05:06.256 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:05:06.256 -07:00 [DBG] Start discovery request
2019-07-23 17:05:06.344 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:05:06.345 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:05:06.345 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:05:06.345 -07:00 [DBG] Start key discovery request
2019-07-23 17:05:06.509 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:05:06.509 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:05:06.509 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:05:06.509 -07:00 [DBG] Start token request.
2019-07-23 17:05:06.509 -07:00 [DBG] Start client validation
2019-07-23 17:05:06.509 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:05:06.509 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:05:06.510 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:05:06.510 -07:00 [DBG] Secret id found: client
2019-07-23 17:05:06.510 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:05:06.510 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:05:06.510 -07:00 [DBG] Client validation success
2019-07-23 17:05:06.510 -07:00 [DBG] Start token request validation
2019-07-23 17:05:06.510 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:05:06.527 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:05:06.528 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:05:06.528 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:05:06.528 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:05:06.536 -07:00 [DBG] Token request success.
2019-07-23 17:07:35.798 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:07:35.798 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:07:35.798 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:07:35.798 -07:00 [DBG] Start discovery request
2019-07-23 17:07:35.876 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:07:35.877 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:07:35.877 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:07:35.877 -07:00 [DBG] Start key discovery request
2019-07-23 17:07:36.060 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:07:36.060 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:07:36.060 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:07:36.060 -07:00 [DBG] Start token request.
2019-07-23 17:07:36.060 -07:00 [DBG] Start client validation
2019-07-23 17:07:36.060 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:07:36.061 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:07:36.061 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:07:36.061 -07:00 [DBG] Secret id found: client
2019-07-23 17:07:36.061 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:07:36.061 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:07:36.061 -07:00 [DBG] Client validation success
2019-07-23 17:07:36.062 -07:00 [DBG] Start token request validation
2019-07-23 17:07:36.062 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:07:36.069 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:07:36.069 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:07:36.070 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:07:36.070 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:07:36.077 -07:00 [DBG] Token request success.
2019-07-23 17:08:28.061 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:08:28.061 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:08:28.062 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:08:28.062 -07:00 [DBG] Start discovery request
2019-07-23 17:08:28.137 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:08:28.137 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:08:28.137 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:08:28.137 -07:00 [DBG] Start key discovery request
2019-07-23 17:08:28.276 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:08:28.277 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:08:28.277 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:08:28.277 -07:00 [DBG] Start token request.
2019-07-23 17:08:28.277 -07:00 [DBG] Start client validation
2019-07-23 17:08:28.277 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:08:28.278 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:08:28.306 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:08:28.306 -07:00 [DBG] Secret id found: client
2019-07-23 17:08:28.309 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:08:28.309 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:08:28.309 -07:00 [DBG] Client validation success
2019-07-23 17:08:28.309 -07:00 [DBG] Start token request validation
2019-07-23 17:08:28.309 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:08:28.316 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:08:28.316 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:08:28.316 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:08:28.316 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:08:28.324 -07:00 [DBG] Token request success.
2019-07-23 17:12:56.555 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:12:56.556 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:12:56.556 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:12:56.556 -07:00 [DBG] Start discovery request
2019-07-23 17:12:56.647 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:12:56.647 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:12:56.647 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:12:56.647 -07:00 [DBG] Start key discovery request
2019-07-23 17:12:56.868 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:12:56.868 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:12:56.869 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:12:56.869 -07:00 [DBG] Start token request.
2019-07-23 17:12:56.869 -07:00 [DBG] Start client validation
2019-07-23 17:12:56.869 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:12:56.869 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:12:56.870 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:12:56.870 -07:00 [DBG] Secret id found: client
2019-07-23 17:12:56.870 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:12:56.870 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:12:56.870 -07:00 [DBG] Client validation success
2019-07-23 17:12:56.870 -07:00 [DBG] Start token request validation
2019-07-23 17:12:56.870 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:12:56.885 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:12:56.886 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:12:56.886 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:12:56.886 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:12:56.895 -07:00 [DBG] Token request success.
2019-07-23 17:19:06.028 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:19:06.028 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:19:06.028 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:19:06.028 -07:00 [DBG] Start discovery request
2019-07-23 17:19:06.088 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:19:06.089 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:19:06.089 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:19:06.089 -07:00 [DBG] Start key discovery request
2019-07-23 17:19:06.273 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:19:06.273 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:19:06.274 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:19:06.274 -07:00 [DBG] Start token request.
2019-07-23 17:19:06.274 -07:00 [DBG] Start client validation
2019-07-23 17:19:06.274 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:19:06.274 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:19:06.274 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:19:06.274 -07:00 [DBG] Secret id found: client
2019-07-23 17:19:06.274 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:19:06.275 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:19:06.275 -07:00 [DBG] Client validation success
2019-07-23 17:19:06.275 -07:00 [DBG] Start token request validation
2019-07-23 17:19:06.275 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:19:06.290 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:19:06.290 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:19:06.290 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:19:06.290 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:19:06.297 -07:00 [DBG] Token request success.
2019-07-23 17:24:37.026 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:24:37.026 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:24:37.027 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:24:37.027 -07:00 [DBG] Start discovery request
2019-07-23 17:24:37.118 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:24:37.118 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:24:37.118 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:24:37.119 -07:00 [DBG] Start key discovery request
2019-07-23 17:24:37.288 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:24:37.288 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:24:37.288 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:24:37.288 -07:00 [DBG] Start token request.
2019-07-23 17:24:37.289 -07:00 [DBG] Start client validation
2019-07-23 17:24:37.289 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:24:37.289 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:24:37.289 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:24:37.289 -07:00 [DBG] Secret id found: client
2019-07-23 17:24:37.289 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:24:37.289 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:24:37.290 -07:00 [DBG] Client validation success
2019-07-23 17:24:37.290 -07:00 [DBG] Start token request validation
2019-07-23 17:24:37.290 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:24:37.296 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:24:37.296 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:24:37.297 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:24:37.297 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:24:37.303 -07:00 [DBG] Token request success.
2019-07-23 17:25:36.061 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:25:36.061 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:25:36.061 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:25:36.061 -07:00 [DBG] Start discovery request
2019-07-23 17:25:36.130 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:25:36.131 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:25:36.131 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:25:36.131 -07:00 [DBG] Start key discovery request
2019-07-23 17:25:36.282 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:25:36.283 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:25:36.283 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:25:36.283 -07:00 [DBG] Start token request.
2019-07-23 17:25:36.283 -07:00 [DBG] Start client validation
2019-07-23 17:25:36.283 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:25:36.283 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:25:36.284 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:25:36.284 -07:00 [DBG] Secret id found: client
2019-07-23 17:25:36.284 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:25:36.284 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:25:36.284 -07:00 [DBG] Client validation success
2019-07-23 17:25:36.284 -07:00 [DBG] Start token request validation
2019-07-23 17:25:36.284 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:25:36.290 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:25:36.291 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:25:36.291 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:25:36.291 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 17:25:36.297 -07:00 [DBG] Token request success.
2019-07-23 17:27:59.755 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:27:59.755 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:27:59.755 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:27:59.755 -07:00 [DBG] Start discovery request
2019-07-23 17:27:59.836 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:27:59.836 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:27:59.837 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:27:59.837 -07:00 [DBG] Start key discovery request
2019-07-23 17:28:00.063 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:28:00.063 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:28:00.064 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:28:00.064 -07:00 [DBG] Start token request.
2019-07-23 17:28:00.064 -07:00 [DBG] Start client validation
2019-07-23 17:28:00.064 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:28:00.064 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:28:00.064 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:28:00.064 -07:00 [DBG] Secret id found: client
2019-07-23 17:28:00.064 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:28:00.065 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:28:00.065 -07:00 [DBG] Client validation success
2019-07-23 17:28:00.065 -07:00 [DBG] Start token request validation
2019-07-23 17:28:00.065 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:28:00.073 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:28:00.073 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:28:00.073 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:28:00.073 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-23 17:28:00.081 -07:00 [DBG] Token request success.
2019-07-23 17:28:32.322 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:28:32.322 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:28:32.322 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:28:32.322 -07:00 [DBG] Start discovery request
2019-07-23 17:28:32.388 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:28:32.388 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:28:32.388 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:28:32.388 -07:00 [DBG] Start key discovery request
2019-07-23 17:28:32.534 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:28:32.534 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:28:32.535 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:28:32.535 -07:00 [DBG] Start token request.
2019-07-23 17:28:32.535 -07:00 [DBG] Start client validation
2019-07-23 17:28:32.535 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:28:32.535 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:28:32.535 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:28:32.535 -07:00 [DBG] Secret id found: client
2019-07-23 17:28:32.536 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:28:32.536 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:28:32.536 -07:00 [DBG] Client validation success
2019-07-23 17:28:32.536 -07:00 [DBG] Start token request validation
2019-07-23 17:28:32.536 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:28:32.541 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:28:32.541 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:28:32.542 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:28:32.542 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 17:28:32.548 -07:00 [DBG] Token request success.
2019-07-23 17:29:10.491 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 17:29:10.491 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 17:29:10.491 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 17:29:10.491 -07:00 [DBG] Start discovery request
2019-07-23 17:29:10.557 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 17:29:10.557 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 17:29:10.557 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 17:29:10.557 -07:00 [DBG] Start key discovery request
2019-07-23 17:29:10.709 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 17:29:10.710 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 17:29:10.710 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 17:29:10.710 -07:00 [DBG] Start token request.
2019-07-23 17:29:10.710 -07:00 [DBG] Start client validation
2019-07-23 17:29:10.710 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 17:29:10.711 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 17:29:10.713 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 17:29:10.713 -07:00 [DBG] Secret id found: client
2019-07-23 17:29:10.713 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 17:29:10.713 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 17:29:10.713 -07:00 [DBG] Client validation success
2019-07-23 17:29:10.713 -07:00 [DBG] Start token request validation
2019-07-23 17:29:10.714 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 17:29:10.720 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 17:29:10.720 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 17:29:10.720 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 17:29:10.720 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 17:29:10.727 -07:00 [DBG] Token request success.
2019-07-23 17:55:56.578 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 17:55:56.656 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 17:55:56.664 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 17:55:56.664 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 17:55:56.664 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 17:55:56.664 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 17:55:56.664 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 17:55:57.138 -07:00 [DBG] Login Url: /Account/Login
2019-07-23 17:55:57.142 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 17:55:57.142 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-23 17:55:57.142 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-23 17:55:57.142 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 17:55:57.143 -07:00 [DBG] Error Url: /home/error
2019-07-23 17:55:57.143 -07:00 [DBG] Error Id Parameter: errorId
2019-07-23 18:03:12.667 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:03:12.768 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:03:12.768 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:03:12.771 -07:00 [DBG] Start discovery request
2019-07-23 18:03:12.893 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:03:12.896 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:03:12.896 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:03:12.899 -07:00 [DBG] Start key discovery request
2019-07-23 18:03:12.963 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 18:03:12.968 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 18:03:12.969 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 18:03:12.976 -07:00 [DBG] Start token request.
2019-07-23 18:03:12.982 -07:00 [DBG] Start client validation
2019-07-23 18:03:12.990 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 18:03:12.994 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 18:03:13.009 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 18:03:13.009 -07:00 [DBG] Secret id found: client
2019-07-23 18:03:13.020 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 18:03:13.028 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 18:03:13.028 -07:00 [DBG] Client validation success
2019-07-23 18:03:13.038 -07:00 [DBG] Start token request validation
2019-07-23 18:03:13.050 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 18:03:13.410 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tiko","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tiko","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 18:05:34.336 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:05:34.336 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:05:34.336 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:05:34.337 -07:00 [DBG] Start discovery request
2019-07-23 18:05:34.387 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:05:34.387 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:05:34.388 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:05:34.388 -07:00 [DBG] Start key discovery request
2019-07-23 18:05:34.497 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 18:05:34.497 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 18:05:34.497 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 18:05:34.497 -07:00 [DBG] Start token request.
2019-07-23 18:05:34.498 -07:00 [DBG] Start client validation
2019-07-23 18:05:34.498 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 18:05:34.498 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 18:05:34.498 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 18:05:34.499 -07:00 [DBG] Secret id found: client
2019-07-23 18:05:34.499 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 18:05:34.499 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 18:05:34.499 -07:00 [DBG] Client validation success
2019-07-23 18:05:34.499 -07:00 [DBG] Start token request validation
2019-07-23 18:05:34.499 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 18:05:34.510 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tiko","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tiko","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 18:09:20.949 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-23 18:09:20.984 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-23 18:09:20.987 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-23 18:09:20.988 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-23 18:09:20.988 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-23 18:09:20.988 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-23 18:09:20.988 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-23 18:09:21.337 -07:00 [DBG] Login Url: /Account/Login
2019-07-23 18:09:21.339 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-23 18:09:21.339 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-23 18:09:21.339 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-23 18:09:21.339 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-23 18:09:21.339 -07:00 [DBG] Error Url: /home/error
2019-07-23 18:09:21.339 -07:00 [DBG] Error Id Parameter: errorId
2019-07-23 18:11:24.810 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:11:25.007 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:11:25.007 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:11:25.014 -07:00 [DBG] Start discovery request
2019-07-23 18:11:25.167 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:11:25.168 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:11:25.168 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:11:25.174 -07:00 [DBG] Start key discovery request
2019-07-23 18:11:25.421 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 18:11:25.430 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 18:11:25.430 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 18:11:25.440 -07:00 [DBG] Start token request.
2019-07-23 18:11:25.447 -07:00 [DBG] Start client validation
2019-07-23 18:11:25.460 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 18:11:25.466 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 18:11:25.493 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 18:11:25.493 -07:00 [DBG] Secret id found: client
2019-07-23 18:11:25.512 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 18:11:25.524 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 18:11:25.524 -07:00 [DBG] Client validation success
2019-07-23 18:11:25.539 -07:00 [DBG] Start token request validation
2019-07-23 18:11:25.564 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 18:11:26.315 -07:00 [DBG] Resource owner password token request validation success.
2019-07-23 18:11:26.334 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 18:11:26.378 -07:00 [DBG] Getting claims for access token for client: client
2019-07-23 18:11:26.379 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-23 18:11:26.691 -07:00 [DBG] Token request success.
2019-07-23 18:11:27.533 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:11:27.534 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:11:27.534 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:11:27.534 -07:00 [DBG] Start discovery request
2019-07-23 18:11:27.699 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:11:27.700 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:11:27.700 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:11:27.700 -07:00 [DBG] Start key discovery request
2019-07-23 18:11:30.056 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:11:30.056 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:11:30.056 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:11:30.056 -07:00 [DBG] Start discovery request
2019-07-23 18:11:30.200 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:11:30.200 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:11:30.200 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:11:30.200 -07:00 [DBG] Start key discovery request
2019-07-23 18:11:58.469 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:11:58.469 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:11:58.469 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:11:58.469 -07:00 [DBG] Start discovery request
2019-07-23 18:11:58.549 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:11:58.549 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:11:58.549 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:11:58.549 -07:00 [DBG] Start key discovery request
2019-07-23 18:11:58.703 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 18:11:58.704 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 18:11:58.704 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 18:11:58.704 -07:00 [DBG] Start token request.
2019-07-23 18:11:58.704 -07:00 [DBG] Start client validation
2019-07-23 18:11:58.705 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 18:11:58.705 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 18:11:58.739 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 18:11:58.739 -07:00 [DBG] Secret id found: client
2019-07-23 18:11:58.742 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 18:11:58.742 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 18:11:58.743 -07:00 [DBG] Client validation success
2019-07-23 18:11:58.743 -07:00 [DBG] Start token request validation
2019-07-23 18:11:58.743 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 18:11:58.755 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"TIko","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"TIko","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 18:14:24.180 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:14:24.180 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:14:24.180 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:14:24.180 -07:00 [DBG] Start discovery request
2019-07-23 18:14:24.255 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:14:24.256 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:14:24.256 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:14:24.256 -07:00 [DBG] Start key discovery request
2019-07-23 18:14:24.427 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 18:14:24.427 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 18:14:24.427 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 18:14:24.428 -07:00 [DBG] Start token request.
2019-07-23 18:14:24.428 -07:00 [DBG] Start client validation
2019-07-23 18:14:24.428 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 18:14:24.428 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 18:14:24.428 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 18:14:24.428 -07:00 [DBG] Secret id found: client
2019-07-23 18:14:24.428 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 18:14:24.429 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 18:14:24.429 -07:00 [DBG] Client validation success
2019-07-23 18:14:24.429 -07:00 [DBG] Start token request validation
2019-07-23 18:14:24.429 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 18:14:24.435 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tiko","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tiko","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-23 18:19:47.671 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-23 18:19:47.672 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-23 18:19:47.672 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-23 18:19:47.672 -07:00 [DBG] Start discovery request
2019-07-23 18:19:47.759 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-23 18:19:47.759 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-23 18:19:47.759 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-23 18:19:47.759 -07:00 [DBG] Start key discovery request
2019-07-23 18:19:47.921 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-23 18:19:47.921 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-23 18:19:47.921 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-23 18:19:47.921 -07:00 [DBG] Start token request.
2019-07-23 18:19:47.921 -07:00 [DBG] Start client validation
2019-07-23 18:19:47.921 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-23 18:19:47.921 -07:00 [DBG] Start parsing for secret in post body
2019-07-23 18:19:47.922 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-23 18:19:47.922 -07:00 [DBG] Secret id found: client
2019-07-23 18:19:47.922 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-23 18:19:47.922 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-23 18:19:47.922 -07:00 [DBG] Client validation success
2019-07-23 18:19:47.922 -07:00 [DBG] Start token request validation
2019-07-23 18:19:47.922 -07:00 [DBG] Start resource owner password token request validation
2019-07-23 18:19:47.934 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tiko","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tiko","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 14:09:50.799 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 14:09:50.842 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 14:09:50.845 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 14:09:50.845 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 14:09:50.845 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 14:09:50.845 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 14:09:50.845 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 14:09:51.156 -07:00 [DBG] Login Url: /Account/Login
2019-07-24 14:09:51.158 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 14:09:51.158 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-24 14:09:51.158 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-24 14:09:51.158 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 14:09:51.158 -07:00 [DBG] Error Url: /home/error
2019-07-24 14:09:51.158 -07:00 [DBG] Error Id Parameter: errorId
2019-07-24 14:11:31.497 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:11:31.995 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:11:31.995 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:11:32.027 -07:00 [DBG] Start discovery request
2019-07-24 14:11:32.285 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:11:32.286 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:11:32.286 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:11:32.290 -07:00 [DBG] Start key discovery request
2019-07-24 14:11:32.498 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 14:11:32.504 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 14:11:32.504 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 14:11:32.511 -07:00 [DBG] Start token request.
2019-07-24 14:11:32.517 -07:00 [DBG] Start client validation
2019-07-24 14:11:32.522 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 14:11:32.525 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 14:11:32.603 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 14:11:32.603 -07:00 [DBG] Secret id found: client
2019-07-24 14:11:32.617 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 14:11:32.637 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 14:11:32.637 -07:00 [DBG] Client validation success
2019-07-24 14:11:32.670 -07:00 [DBG] Start token request validation
2019-07-24 14:11:32.681 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 14:11:47.828 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tiko","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tiko","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 14:13:02.387 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:13:02.387 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:13:02.387 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:13:02.387 -07:00 [DBG] Start discovery request
2019-07-24 14:13:02.426 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:13:02.427 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:13:02.427 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:13:02.427 -07:00 [DBG] Start key discovery request
2019-07-24 14:13:02.466 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 14:13:02.467 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 14:13:02.467 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 14:13:02.467 -07:00 [DBG] Start token request.
2019-07-24 14:13:02.467 -07:00 [DBG] Start client validation
2019-07-24 14:13:02.467 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 14:13:02.467 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 14:13:02.468 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 14:13:02.468 -07:00 [DBG] Secret id found: client
2019-07-24 14:13:02.468 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 14:13:02.468 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 14:13:02.468 -07:00 [DBG] Client validation success
2019-07-24 14:13:02.469 -07:00 [DBG] Start token request validation
2019-07-24 14:13:02.469 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 14:13:02.533 -07:00 [DBG] Resource owner password token request validation success.
2019-07-24 14:13:02.534 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg47","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg47","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 14:13:02.582 -07:00 [DBG] Getting claims for access token for client: client
2019-07-24 14:13:02.583 -07:00 [DBG] Getting claims for access token for subject: 2007
2019-07-24 14:13:02.789 -07:00 [DBG] Token request success.
2019-07-24 14:13:03.771 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:13:03.771 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:13:03.771 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:13:03.771 -07:00 [DBG] Start discovery request
2019-07-24 14:13:03.951 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:13:03.952 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:13:03.952 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:13:03.952 -07:00 [DBG] Start key discovery request
2019-07-24 14:13:31.027 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:13:31.027 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:13:31.027 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:13:31.027 -07:00 [DBG] Start discovery request
2019-07-24 14:13:31.131 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:13:31.131 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:13:31.131 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:13:31.131 -07:00 [DBG] Start key discovery request
2019-07-24 14:14:49.002 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 14:14:49.003 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 14:14:49.003 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 14:14:49.003 -07:00 [DBG] Start discovery request
2019-07-24 14:14:49.055 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 14:14:49.055 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 14:14:49.055 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 14:14:49.055 -07:00 [DBG] Start key discovery request
2019-07-24 14:14:49.173 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 14:14:49.173 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 14:14:49.173 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 14:14:49.173 -07:00 [DBG] Start token request.
2019-07-24 14:14:49.174 -07:00 [DBG] Start client validation
2019-07-24 14:14:49.174 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 14:14:49.174 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 14:14:49.174 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 14:14:49.174 -07:00 [DBG] Secret id found: client
2019-07-24 14:14:49.174 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 14:14:49.174 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 14:14:49.174 -07:00 [DBG] Client validation success
2019-07-24 14:14:49.174 -07:00 [DBG] Start token request validation
2019-07-24 14:14:49.174 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 14:14:49.177 -07:00 [DBG] Resource owner password token request validation success.
2019-07-24 14:14:49.178 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 14:14:49.178 -07:00 [DBG] Getting claims for access token for client: client
2019-07-24 14:14:49.178 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-24 14:14:49.182 -07:00 [DBG] Token request success.
2019-07-24 18:39:48.953 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 18:39:49.119 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 18:39:49.123 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 18:39:49.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 18:39:49.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 18:39:49.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 18:39:49.124 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 18:39:49.410 -07:00 [DBG] Login Url: /Account/Login
2019-07-24 18:39:49.412 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 18:39:49.412 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-24 18:39:49.412 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-24 18:39:49.412 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 18:39:49.412 -07:00 [DBG] Error Url: /home/error
2019-07-24 18:39:49.412 -07:00 [DBG] Error Id Parameter: errorId
2019-07-24 18:49:12.886 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-24 18:49:12.935 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-24 18:49:12.938 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-24 18:49:12.939 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-24 18:49:12.939 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-24 18:49:12.939 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-24 18:49:12.939 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-24 18:49:13.385 -07:00 [DBG] Login Url: /Account/Login
2019-07-24 18:49:13.388 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-24 18:49:13.388 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-24 18:49:13.388 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-24 18:49:13.388 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-24 18:49:13.388 -07:00 [DBG] Error Url: /home/error
2019-07-24 18:49:13.388 -07:00 [DBG] Error Id Parameter: errorId
2019-07-24 18:49:13.421 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 18:49:13.986 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 18:49:13.987 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 18:49:14.010 -07:00 [DBG] Start discovery request
2019-07-24 18:49:14.361 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 18:49:14.366 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 18:49:14.366 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 18:49:14.374 -07:00 [DBG] Start key discovery request
2019-07-24 18:49:14.899 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 18:49:14.907 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 18:49:14.907 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 18:49:14.920 -07:00 [DBG] Start token request.
2019-07-24 18:49:14.930 -07:00 [DBG] Start client validation
2019-07-24 18:49:14.939 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 18:49:14.946 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 18:49:15.059 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 18:49:15.060 -07:00 [DBG] Secret id found: client
2019-07-24 18:49:15.088 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 18:49:15.121 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 18:49:15.122 -07:00 [DBG] Client validation success
2019-07-24 18:49:15.172 -07:00 [DBG] Start token request validation
2019-07-24 18:49:15.197 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 18:49:21.372 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Raf","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Raf","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 18:55:28.888 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 18:55:28.888 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 18:55:28.888 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 18:55:28.889 -07:00 [DBG] Start discovery request
2019-07-24 18:55:28.971 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 18:55:28.972 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 18:55:28.972 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 18:55:28.972 -07:00 [DBG] Start key discovery request
2019-07-24 18:55:29.185 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 18:55:29.187 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 18:55:29.187 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 18:55:29.187 -07:00 [DBG] Start token request.
2019-07-24 18:55:29.187 -07:00 [DBG] Start client validation
2019-07-24 18:55:29.187 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 18:55:29.187 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 18:55:29.188 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 18:55:29.188 -07:00 [DBG] Secret id found: client
2019-07-24 18:55:29.189 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 18:55:29.189 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 18:55:29.189 -07:00 [DBG] Client validation success
2019-07-24 18:55:29.190 -07:00 [DBG] Start token request validation
2019-07-24 18:55:29.190 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 18:55:29.503 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Raf","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Raf","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 18:58:06.249 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 18:58:06.249 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 18:58:06.249 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 18:58:06.249 -07:00 [DBG] Start discovery request
2019-07-24 18:58:06.326 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 18:58:06.326 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 18:58:06.326 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 18:58:06.326 -07:00 [DBG] Start key discovery request
2019-07-24 18:58:06.534 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 18:58:06.534 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 18:58:06.534 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 18:58:06.535 -07:00 [DBG] Start token request.
2019-07-24 18:58:06.535 -07:00 [DBG] Start client validation
2019-07-24 18:58:06.535 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 18:58:06.535 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 18:58:06.535 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 18:58:06.535 -07:00 [DBG] Secret id found: client
2019-07-24 18:58:06.535 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 18:58:06.536 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 18:58:06.536 -07:00 [DBG] Client validation success
2019-07-24 18:58:06.536 -07:00 [DBG] Start token request validation
2019-07-24 18:58:06.536 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 18:58:06.539 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Raf","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Raf","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 18:58:13.162 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 18:58:13.163 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 18:58:13.163 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 18:58:13.163 -07:00 [DBG] Start discovery request
2019-07-24 18:58:13.168 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 18:58:13.169 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 18:58:13.169 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 18:58:13.169 -07:00 [DBG] Start key discovery request
2019-07-24 18:58:13.173 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 18:58:13.174 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 18:58:13.174 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 18:58:13.174 -07:00 [DBG] Start token request.
2019-07-24 18:58:13.174 -07:00 [DBG] Start client validation
2019-07-24 18:58:13.174 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 18:58:13.174 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 18:58:13.174 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 18:58:13.175 -07:00 [DBG] Secret id found: client
2019-07-24 18:58:13.175 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 18:58:13.175 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 18:58:13.175 -07:00 [DBG] Client validation success
2019-07-24 18:58:13.175 -07:00 [DBG] Start token request validation
2019-07-24 18:58:13.175 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 18:58:13.177 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Raf","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Raf","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 18:58:19.699 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 18:58:19.699 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 18:58:19.700 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 18:58:19.700 -07:00 [DBG] Start discovery request
2019-07-24 18:58:19.704 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 18:58:19.704 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 18:58:19.705 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 18:58:19.705 -07:00 [DBG] Start key discovery request
2019-07-24 18:58:19.708 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 18:58:19.709 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 18:58:19.709 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 18:58:19.709 -07:00 [DBG] Start token request.
2019-07-24 18:58:19.709 -07:00 [DBG] Start client validation
2019-07-24 18:58:19.709 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 18:58:19.709 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 18:58:19.710 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 18:58:19.710 -07:00 [DBG] Secret id found: client
2019-07-24 18:58:19.710 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 18:58:19.710 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 18:58:19.710 -07:00 [DBG] Client validation success
2019-07-24 18:58:19.710 -07:00 [DBG] Start token request validation
2019-07-24 18:58:19.710 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 18:58:19.712 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"RAF","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"RAF","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 18:58:39.878 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 18:58:39.879 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 18:58:39.879 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 18:58:39.879 -07:00 [DBG] Start discovery request
2019-07-24 18:58:39.891 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 18:58:39.891 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 18:58:39.891 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 18:58:39.891 -07:00 [DBG] Start key discovery request
2019-07-24 18:58:39.898 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 18:58:39.898 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 18:58:39.899 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 18:58:39.899 -07:00 [DBG] Start token request.
2019-07-24 18:58:39.899 -07:00 [DBG] Start client validation
2019-07-24 18:58:39.899 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 18:58:39.899 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 18:58:39.899 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 18:58:39.899 -07:00 [DBG] Secret id found: client
2019-07-24 18:58:39.900 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 18:58:39.900 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 18:58:39.900 -07:00 [DBG] Client validation success
2019-07-24 18:58:39.900 -07:00 [DBG] Start token request validation
2019-07-24 18:58:39.900 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 18:58:39.902 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Raf","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Raf","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:01:11.298 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:01:11.298 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:01:11.298 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:01:11.298 -07:00 [DBG] Start discovery request
2019-07-24 19:01:11.365 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:01:11.365 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:01:11.365 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:01:11.365 -07:00 [DBG] Start key discovery request
2019-07-24 19:01:11.423 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:01:11.423 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:01:11.423 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:01:11.424 -07:00 [DBG] Start token request.
2019-07-24 19:01:11.424 -07:00 [DBG] Start client validation
2019-07-24 19:01:11.424 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:01:11.424 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:01:11.424 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:01:11.424 -07:00 [DBG] Secret id found: client
2019-07-24 19:01:11.424 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:01:11.424 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:01:11.424 -07:00 [DBG] Client validation success
2019-07-24 19:01:11.425 -07:00 [DBG] Start token request validation
2019-07-24 19:01:11.425 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:01:11.427 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Serob","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Serob","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:01:15.778 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:01:15.778 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:01:15.779 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:01:15.779 -07:00 [DBG] Start discovery request
2019-07-24 19:01:15.785 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:01:15.785 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:01:15.785 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:01:15.786 -07:00 [DBG] Start key discovery request
2019-07-24 19:01:15.790 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:01:15.790 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:01:15.790 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:01:15.790 -07:00 [DBG] Start token request.
2019-07-24 19:01:15.790 -07:00 [DBG] Start client validation
2019-07-24 19:01:15.791 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:01:15.791 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:01:15.791 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:01:15.791 -07:00 [DBG] Secret id found: client
2019-07-24 19:01:15.791 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:01:15.791 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:01:15.791 -07:00 [DBG] Client validation success
2019-07-24 19:01:15.792 -07:00 [DBG] Start token request validation
2019-07-24 19:01:15.792 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:01:15.793 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Serob","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Serob","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:01:25.858 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:01:25.858 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:01:25.858 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:01:25.859 -07:00 [DBG] Start discovery request
2019-07-24 19:01:25.862 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:01:25.863 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:01:25.863 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:01:25.863 -07:00 [DBG] Start key discovery request
2019-07-24 19:01:25.866 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:01:25.866 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:01:25.866 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:01:25.867 -07:00 [DBG] Start token request.
2019-07-24 19:01:25.867 -07:00 [DBG] Start client validation
2019-07-24 19:01:25.867 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:01:25.867 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:01:25.867 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:01:25.867 -07:00 [DBG] Secret id found: client
2019-07-24 19:01:25.867 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:01:25.867 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:01:25.867 -07:00 [DBG] Client validation success
2019-07-24 19:01:25.868 -07:00 [DBG] Start token request validation
2019-07-24 19:01:25.868 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:01:25.917 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"SerSer","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"SerSer","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:01:38.816 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:01:38.817 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:01:38.817 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:01:38.817 -07:00 [DBG] Start discovery request
2019-07-24 19:01:38.822 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:01:38.822 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:01:38.823 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:01:38.823 -07:00 [DBG] Start key discovery request
2019-07-24 19:01:38.827 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:01:38.827 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:01:38.827 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:01:38.827 -07:00 [DBG] Start token request.
2019-07-24 19:01:38.827 -07:00 [DBG] Start client validation
2019-07-24 19:01:38.827 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:01:38.828 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:01:38.962 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:01:38.962 -07:00 [DBG] Secret id found: client
2019-07-24 19:01:38.965 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:01:38.965 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:01:38.965 -07:00 [DBG] Client validation success
2019-07-24 19:01:38.965 -07:00 [DBG] Start token request validation
2019-07-24 19:01:38.965 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:01:38.968 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"SerSer","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"SerSer","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:02:11.031 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:02:11.031 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:02:11.031 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:02:11.031 -07:00 [DBG] Start discovery request
2019-07-24 19:02:11.049 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:02:11.049 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:02:11.049 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:02:11.049 -07:00 [DBG] Start key discovery request
2019-07-24 19:02:11.054 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:02:11.054 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:02:11.054 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:02:11.054 -07:00 [DBG] Start token request.
2019-07-24 19:02:11.054 -07:00 [DBG] Start client validation
2019-07-24 19:02:11.054 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:02:11.054 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:02:11.055 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:02:11.055 -07:00 [DBG] Secret id found: client
2019-07-24 19:02:11.055 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:02:11.055 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:02:11.055 -07:00 [DBG] Client validation success
2019-07-24 19:02:11.055 -07:00 [DBG] Start token request validation
2019-07-24 19:02:11.055 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:02:11.204 -07:00 [DBG] Resource owner password token request validation success.
2019-07-24 19:02:11.206 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"SerSer","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"SerSer","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:02:11.238 -07:00 [DBG] Getting claims for access token for client: client
2019-07-24 19:02:11.239 -07:00 [DBG] Getting claims for access token for subject: 2008
2019-07-24 19:02:11.850 -07:00 [DBG] Token request success.
2019-07-24 19:02:13.087 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:02:13.087 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:02:13.087 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:02:13.088 -07:00 [DBG] Start discovery request
2019-07-24 19:02:13.428 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:02:13.428 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:02:13.428 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:02:13.429 -07:00 [DBG] Start key discovery request
2019-07-24 19:02:16.293 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:02:16.293 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:02:16.294 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:02:16.294 -07:00 [DBG] Start discovery request
2019-07-24 19:02:16.457 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:02:16.457 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:02:16.457 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:02:16.458 -07:00 [DBG] Start key discovery request
2019-07-24 19:03:02.665 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:03:02.665 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:03:02.665 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:03:02.665 -07:00 [DBG] Start discovery request
2019-07-24 19:03:02.733 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:03:02.733 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:03:02.734 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:03:02.734 -07:00 [DBG] Start key discovery request
2019-07-24 19:03:02.932 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:03:02.932 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:03:02.932 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:03:02.933 -07:00 [DBG] Start token request.
2019-07-24 19:03:02.933 -07:00 [DBG] Start client validation
2019-07-24 19:03:02.933 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:03:02.933 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:03:02.935 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:03:02.935 -07:00 [DBG] Secret id found: client
2019-07-24 19:03:02.936 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:03:02.936 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:03:02.936 -07:00 [DBG] Client validation success
2019-07-24 19:03:02.936 -07:00 [DBG] Start token request validation
2019-07-24 19:03:02.936 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:03:02.939 -07:00 [DBG] Resource owner password token request validation success.
2019-07-24 19:03:02.940 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Tigran","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Tigran","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:03:02.940 -07:00 [DBG] Getting claims for access token for client: client
2019-07-24 19:03:02.940 -07:00 [DBG] Getting claims for access token for subject: 1
2019-07-24 19:03:02.947 -07:00 [DBG] Token request success.
2019-07-24 19:03:36.919 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:03:36.919 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:03:36.920 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:03:36.920 -07:00 [DBG] Start discovery request
2019-07-24 19:03:36.995 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:03:36.996 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:03:36.996 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:03:36.996 -07:00 [DBG] Start key discovery request
2019-07-24 19:03:37.192 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:03:37.193 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:03:37.193 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:03:37.193 -07:00 [DBG] Start token request.
2019-07-24 19:03:37.193 -07:00 [DBG] Start client validation
2019-07-24 19:03:37.193 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:03:37.193 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:03:37.194 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:03:37.194 -07:00 [DBG] Secret id found: client
2019-07-24 19:03:37.194 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:03:37.194 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:03:37.194 -07:00 [DBG] Client validation success
2019-07-24 19:03:37.194 -07:00 [DBG] Start token request validation
2019-07-24 19:03:37.194 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:03:37.199 -07:00 [DBG] Resource owner password token request validation success.
2019-07-24 19:03:37.199 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"SerSer","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"SerSer","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:03:37.199 -07:00 [DBG] Getting claims for access token for client: client
2019-07-24 19:03:37.199 -07:00 [DBG] Getting claims for access token for subject: 2008
2019-07-24 19:03:37.207 -07:00 [DBG] Token request success.
2019-07-24 19:25:47.144 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-24 19:25:47.145 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-24 19:25:47.145 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-24 19:25:47.145 -07:00 [DBG] Start discovery request
2019-07-24 19:25:47.189 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-24 19:25:47.189 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-24 19:25:47.189 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-24 19:25:47.189 -07:00 [DBG] Start key discovery request
2019-07-24 19:25:47.298 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-24 19:25:47.298 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-24 19:25:47.298 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-24 19:25:47.298 -07:00 [DBG] Start token request.
2019-07-24 19:25:47.298 -07:00 [DBG] Start client validation
2019-07-24 19:25:47.298 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-24 19:25:47.298 -07:00 [DBG] Start parsing for secret in post body
2019-07-24 19:25:47.299 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-24 19:25:47.299 -07:00 [DBG] Secret id found: client
2019-07-24 19:25:47.299 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-24 19:25:47.299 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-24 19:25:47.299 -07:00 [DBG] Client validation success
2019-07-24 19:25:47.299 -07:00 [DBG] Start token request validation
2019-07-24 19:25:47.299 -07:00 [DBG] Start resource owner password token request validation
2019-07-24 19:25:47.304 -07:00 [DBG] Resource owner password token request validation success.
2019-07-24 19:25:47.304 -07:00 [INF] Token request validation success
{"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Areg","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Areg","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-24 19:25:47.305 -07:00 [DBG] Getting claims for access token for client: client
2019-07-24 19:25:47.305 -07:00 [DBG] Getting claims for access token for subject: 2
2019-07-24 19:25:47.308 -07:00 [DBG] Token request success.
2019-07-25 18:35:16.668 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 18:35:16.740 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 18:35:16.744 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 18:35:16.744 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 18:35:16.744 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 18:35:16.744 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 18:35:16.744 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 18:35:17.101 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 18:35:17.103 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 18:35:17.103 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 18:35:17.103 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 18:35:17.103 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 18:35:17.103 -07:00 [DBG] Error Url: /home/error
2019-07-25 18:35:17.103 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 18:37:20.823 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 18:37:20.939 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 18:37:20.940 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 18:37:20.945 -07:00 [DBG] Start discovery request
2019-07-25 18:45:27.190 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 18:45:27.220 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 18:45:27.223 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 18:45:27.223 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 18:45:27.223 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 18:45:27.223 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 18:45:27.223 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 18:45:27.654 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 18:45:27.656 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 18:45:27.656 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 18:45:27.656 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 18:45:27.656 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 18:45:27.656 -07:00 [DBG] Error Url: /home/error
2019-07-25 18:45:27.657 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 18:48:00.582 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 18:48:00.631 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 18:48:00.634 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 18:48:00.634 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 18:48:00.634 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 18:48:00.634 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 18:48:00.634 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 18:48:01.486 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 18:48:01.489 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 18:48:01.489 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 18:48:01.489 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 18:48:01.489 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 18:48:01.489 -07:00 [DBG] Error Url: /home/error
2019-07-25 18:48:01.489 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 18:53:36.176 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 18:53:36.275 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 18:53:36.279 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 18:53:36.280 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 18:53:36.280 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 18:53:36.280 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 18:53:36.280 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 18:53:36.743 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 18:53:36.746 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 18:53:36.746 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 18:53:36.746 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 18:53:36.746 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 18:53:36.746 -07:00 [DBG] Error Url: /home/error
2019-07-25 18:53:36.746 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 19:00:31.030 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 19:00:31.066 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 19:00:31.074 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 19:00:31.075 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 19:00:31.075 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 19:00:31.075 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 19:00:31.075 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 19:00:32.637 -07:00 [FTL] Application startup exception
System.InvalidOperationException: An error occurred when configuring the exception handler middleware. Either the 'ExceptionHandlingPath' or the 'ExceptionHandler' option must be set in 'UseExceptionHandler()'.
   at Microsoft.AspNetCore.Diagnostics.ExceptionHandlerMiddleware..ctor(RequestDelegate next, ILoggerFactory loggerFactory, IOptions`1 options, DiagnosticSource diagnosticSource)
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.Extensions.Internal.ActivatorUtilities.ConstructorMatcher.CreateInstance(IServiceProvider provider)
   at Microsoft.Extensions.Internal.ActivatorUtilities.CreateInstance(IServiceProvider provider, Type instanceType, Object[] parameters)
   at Microsoft.AspNetCore.Builder.UseMiddlewareExtensions.<>c__DisplayClass4_0.<UseMiddleware>b__0(RequestDelegate next)
   at Microsoft.AspNetCore.Builder.Internal.ApplicationBuilder.Build()
   at Microsoft.AspNetCore.Hosting.Internal.WebHost.BuildApplication()
2019-07-25 19:00:32.953 -07:00 [ERR] Connection id "0HLOHDK5DR4CS", Request id "0HLOHDK5DR4CS:00000001": An unhandled exception was thrown by the application.
System.InvalidOperationException: Writing to the response body is invalid for responses with status code 500.
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ThrowWritingToResponseBodyNotSupported()
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.WriteAsync(ReadOnlyMemory`1 data, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.WriteAsync(Byte[] buffer, Int32 offset, Int32 count, CancellationToken cancellationToken)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpResponseStream.Write(Byte[] buffer, Int32 offset, Int32 count)
   at System.IO.StreamWriter.Flush(Boolean flushStream, Boolean flushEncoder)
   at System.IO.StreamWriter.Write(String value)
   at Microsoft.Extensions.RazorViews.BaseView.Write(String value)
   at Microsoft.AspNetCore.Hosting.Views.ErrorPage.ExecuteAsync()
   at Microsoft.Extensions.RazorViews.BaseView.ExecuteAsync(HttpContext context)
   at Microsoft.AspNetCore.Server.Kestrel.Core.Internal.Http.HttpProtocol.ProcessRequests[TContext](IHttpApplication`1 application)
2019-07-25 19:02:56.326 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 19:02:56.365 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 19:02:56.368 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 19:02:56.368 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 19:02:56.368 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 19:02:56.368 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 19:02:56.368 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 19:02:56.746 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 19:02:56.748 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 19:02:56.748 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 19:02:56.748 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 19:02:56.748 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 19:02:56.748 -07:00 [DBG] Error Url: /home/error
2019-07-25 19:02:56.748 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 19:03:34.545 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:03:35.084 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:03:35.084 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:03:35.106 -07:00 [DBG] Start discovery request
2019-07-25 19:04:06.447 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 19:04:06.448 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 19:04:06.448 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 19:04:06.453 -07:00 [DBG] Start key discovery request
2019-07-25 19:06:11.790 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:06:11.831 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:06:11.831 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:06:11.831 -07:00 [DBG] Start discovery request
2019-07-25 19:11:20.771 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 19:11:20.870 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 19:11:20.880 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 19:11:20.880 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 19:11:20.880 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 19:11:20.880 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 19:11:20.881 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 19:11:21.585 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 19:11:21.588 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 19:11:21.588 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 19:11:21.588 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 19:11:21.588 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 19:11:21.588 -07:00 [DBG] Error Url: /home/error
2019-07-25 19:11:21.589 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 19:13:43.643 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 19:13:43.716 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 19:13:43.721 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 19:13:43.721 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 19:13:43.721 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 19:13:43.721 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 19:13:43.721 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 19:13:44.276 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 19:13:44.278 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 19:13:44.278 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 19:13:44.278 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 19:13:44.278 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 19:13:44.278 -07:00 [DBG] Error Url: /home/error
2019-07-25 19:13:44.278 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 19:15:51.458 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:15:51.781 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:15:51.781 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:15:51.786 -07:00 [DBG] Start discovery request
2019-07-25 19:30:07.334 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 19:30:07.364 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 19:30:07.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 19:30:07.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 19:30:07.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 19:30:07.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 19:30:07.366 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 19:30:07.551 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 19:30:07.553 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 19:30:07.553 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 19:30:07.553 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 19:30:07.553 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 19:30:07.553 -07:00 [DBG] Error Url: /home/error
2019-07-25 19:30:07.553 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 19:31:51.681 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:31:51.787 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:31:51.788 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:31:51.793 -07:00 [DBG] Start discovery request
2019-07-25 19:33:08.381 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:33:08.389 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:33:08.389 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:33:08.389 -07:00 [DBG] Start discovery request
2019-07-25 19:33:08.501 -07:00 [DBG] Request path /.well-known/openid-configuration/jwks matched to endpoint type Discovery
2019-07-25 19:33:08.502 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryKeyEndpoint
2019-07-25 19:33:08.502 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryKeyEndpoint for /.well-known/openid-configuration/jwks
2019-07-25 19:33:08.515 -07:00 [DBG] Start key discovery request
2019-07-25 19:33:28.119 -07:00 [DBG] Request path /connect/token matched to endpoint type Token
2019-07-25 19:33:28.157 -07:00 [DBG] Endpoint enabled: Token, successfully created handler: IdentityServer4.Endpoints.TokenEndpoint
2019-07-25 19:33:28.157 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.TokenEndpoint for /connect/token
2019-07-25 19:33:28.165 -07:00 [DBG] Start token request.
2019-07-25 19:33:28.183 -07:00 [DBG] Start client validation
2019-07-25 19:33:28.189 -07:00 [DBG] Start parsing Basic Authentication secret
2019-07-25 19:33:28.193 -07:00 [DBG] Start parsing for secret in post body
2019-07-25 19:33:28.348 -07:00 [DBG] Parser found secret: PostBodySecretParser
2019-07-25 19:33:28.348 -07:00 [DBG] Secret id found: client
2019-07-25 19:33:28.364 -07:00 [DBG] client configuration validation for client client succeeded.
2019-07-25 19:33:28.393 -07:00 [DBG] Secret validator success: HashedSharedSecretValidator
2019-07-25 19:33:28.393 -07:00 [DBG] Client validation success
2019-07-25 19:33:28.433 -07:00 [DBG] Start token request validation
2019-07-25 19:33:28.444 -07:00 [DBG] Start resource owner password token request validation
2019-07-25 19:33:50.868 -07:00 [INF] User authentication failed: ["Incorrect password"], request details: {"ClientId":"client","ClientName":null,"GrantType":"password","Scopes":"ActiveUserService","AuthorizationCode":null,"RefreshToken":null,"UserName":"Aren","AuthenticationContextReferenceClasses":null,"Tenant":null,"IdP":null,"Raw":{"grant_type":"password","client_id":"client","scope":"ActiveUserService","client_secret":"***REDACTED***","username":"Aren","password":"***REDACTED***"},"$type":"TokenRequestValidationLog"}
2019-07-25 19:44:40.274 -07:00 [INF] You are using the in-memory version of the persisted grant store. This will store consent decisions, authorization codes, refresh and reference tokens in memory only. If you are using any of those features in production, you want to switch to a different store implementation.
2019-07-25 19:44:40.390 -07:00 [INF] Using the default authentication scheme idsrv for IdentityServer
2019-07-25 19:44:40.395 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for authentication
2019-07-25 19:44:40.396 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-in
2019-07-25 19:44:40.396 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for sign-out
2019-07-25 19:44:40.396 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for challenge
2019-07-25 19:44:40.396 -07:00 [DBG] Using idsrv as default ASP.NET Core scheme for forbid
2019-07-25 19:44:40.925 -07:00 [DBG] Login Url: /Account/Login
2019-07-25 19:44:40.927 -07:00 [DBG] Login Return Url Parameter: ReturnUrl
2019-07-25 19:44:40.927 -07:00 [DBG] Logout Url: /Account/Logout
2019-07-25 19:44:40.928 -07:00 [DBG] ConsentUrl Url: /consent
2019-07-25 19:44:40.928 -07:00 [DBG] Consent Return Url Parameter: returnUrl
2019-07-25 19:44:40.928 -07:00 [DBG] Error Url: /home/error
2019-07-25 19:44:40.928 -07:00 [DBG] Error Id Parameter: errorId
2019-07-25 19:47:31.197 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:47:31.314 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:47:31.314 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:47:31.318 -07:00 [DBG] Start discovery request
2019-07-25 19:54:34.535 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:54:34.561 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:54:34.561 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:54:34.561 -07:00 [DBG] Start discovery request
2019-07-25 19:55:41.663 -07:00 [DBG] Request path /.well-known/openid-configuration matched to endpoint type Discovery
2019-07-25 19:55:41.663 -07:00 [DBG] Endpoint enabled: Discovery, successfully created handler: IdentityServer4.Endpoints.DiscoveryEndpoint
2019-07-25 19:55:41.663 -07:00 [INF] Invoking IdentityServer endpoint: IdentityServer4.Endpoints.DiscoveryEndpoint for /.well-known/openid-configuration
2019-07-25 19:55:41.663 -07:00 [DBG] Start discovery request
